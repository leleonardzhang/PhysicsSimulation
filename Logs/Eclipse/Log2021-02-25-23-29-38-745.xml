<Events startTimestamp="1614313778745" logVersion="1.0.0.202101171653">
  <Command __id="5" _type="ShellCommand" date="Thu Feb 25 23:29:39 EST 2021" starttimestamp="1614313778745" timestamp="729" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="6" _type="ShellCommand" date="Thu Feb 25 23:29:41 EST 2021" starttimestamp="1614313778745" timestamp="3176" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="7" _type="ShellCommand" date="Thu Feb 25 23:29:49 EST 2021" starttimestamp="1614313778745" timestamp="11038" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="8" _type="ShellCommand" date="Thu Feb 25 23:29:49 EST 2021" starttimestamp="1614313778745" timestamp="11134" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="9" _type="ShellCommand" date="Thu Feb 25 23:30:08 EST 2021" starttimestamp="1614313778745" timestamp="29336" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="24" _type="ShellCommand" date="Thu Feb 25 23:30:16 EST 2021" starttimestamp="1614313778745" timestamp="37427" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="25" _type="ShellCommand" date="Thu Feb 25 23:30:16 EST 2021" starttimestamp="1614313778745" timestamp="38080" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="26" _type="ShellCommand" date="Thu Feb 25 23:30:18 EST 2021" starttimestamp="1614313778745" timestamp="39342" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="27" _type="ShellCommand" date="Thu Feb 25 23:30:19 EST 2021" starttimestamp="1614313778745" timestamp="40792" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="28" _type="ShellCommand" date="Thu Feb 25 23:30:19 EST 2021" starttimestamp="1614313778745" timestamp="40800" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="29" _type="ShellCommand" date="Thu Feb 25 23:30:20 EST 2021" starttimestamp="1614313778745" timestamp="41676" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="30" _type="ShellCommand" date="Thu Feb 25 23:30:23 EST 2021" starttimestamp="1614313778745" timestamp="44959" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="31" _type="ShellCommand" date="Thu Feb 25 23:30:24 EST 2021" starttimestamp="1614313778745" timestamp="45707" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="32" _type="ShellCommand" date="Thu Feb 25 23:30:25 EST 2021" starttimestamp="1614313778745" timestamp="46645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="33" _type="ShellCommand" date="Thu Feb 25 23:30:26 EST 2021" starttimestamp="1614313778745" timestamp="47761" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="34" _type="ShellCommand" date="Thu Feb 25 23:30:26 EST 2021" starttimestamp="1614313778745" timestamp="47843" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="35" _type="ShellCommand" date="Thu Feb 25 23:30:28 EST 2021" starttimestamp="1614313778745" timestamp="49790" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="38" _type="ShellCommand" date="Thu Feb 25 23:30:29 EST 2021" starttimestamp="1614313778745" timestamp="50861" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="41" _type="ShellCommand" date="Thu Feb 25 23:30:30 EST 2021" starttimestamp="1614313778745" timestamp="52145" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="42" _type="ShellCommand" date="Thu Feb 25 23:30:30 EST 2021" starttimestamp="1614313778745" timestamp="52248" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="43" _type="ShellCommand" date="Thu Feb 25 23:30:32 EST 2021" starttimestamp="1614313778745" timestamp="53358" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="46" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:30:36 EST 2021" docASTNodeCount="92" docActiveCodeLength="545" docExpressionCount="51" docLength="545" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="57409">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/data/DataMapper.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package data;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

public class DataMapper {
	private ObjectMapper mapper = new ObjectMapper();
	
	public String toJson(Object o) {
		try {
			return mapper.writerWithDefaultPrettyPrinter().writeValueAsString(o);
		} catch (JsonProcessingException e) {

		}
		return null;
	}
	
	public Object toObject(String str, Class c) {
		try {
			return mapper.readValue(str, c);
		} catch (JsonProcessingException e) {
			
		}
		return null;
	}
}
]]></snapshot>
  </Command>
  <Command __id="47" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:30:36 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="57625" />
  <Command __id="48" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:30:39 EST 2021" docASTNodeCount="126" docActiveCodeLength="718" docExpressionCount="94" docLength="718" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="61050">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/main/TestFrame.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import javax.swing.JButton;
import javax.swing.JSlider;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import components.mainpanel.MainPanel;
import components.mainpanel.MainPanelInterface;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.protractor.Protractor;
import components.pendulum.protractor.ProtractorInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import javafx.scene.control.Slider;

public class TestFrame {
	public static void main(String[] args) {
		MainPanelInterface panel = new MainPanel();
		OEFrame frame = ObjectEditor.edit(panel);
	}
}
]]></snapshot>
  </Command>
  <Command __id="194" _type="ConsoleOutput" date="Thu Feb 25 23:30:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="77883" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="195" _type="ConsoleOutput" date="Thu Feb 25 23:30:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="77938" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="196" _type="ConsoleOutput" date="Thu Feb 25 23:30:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78040" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="197" _type="ConsoleOutput" date="Thu Feb 25 23:30:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78140" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="198" _type="ConsoleOutput" date="Thu Feb 25 23:30:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78241" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="199" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78343" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="200" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78445" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="201" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78546" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="202" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78697" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="203" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78749" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="204" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="78851" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="205" _type="ConsoleOutput" date="Thu Feb 25 23:30:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="79002" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="206" _type="RunCommand" date="Thu Feb 25 23:30:57 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="79048" type="Run" />
  <Command __id="207" _type="RunCommand" date="Thu Feb 25 23:30:57 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="79048" type="Run" />
  <Command __id="208" _type="ShellCommand" date="Thu Feb 25 23:30:57 EST 2021" starttimestamp="1614313778745" timestamp="79057" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="210" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:31:06 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="87825" />
  <Command __id="211" _type="MoveCaretCommand" caretOffset="2061" date="Thu Feb 25 23:31:08 EST 2021" docOffset="3046" starttimestamp="1614313778745" timestamp="89673" />
  <Command __id="213" _type="ShellCommand" date="Thu Feb 25 23:31:09 EST 2021" starttimestamp="1614313778745" timestamp="90874" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="214" _type="FindCommand" caseSensitive="false" date="Thu Feb 25 23:31:11 EST 2021" forward="false" matchWord="false" offset="3046" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614313778745" timestamp="92915" wrapSearch="false">
    <searchString><![CDATA[reset]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="209" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:31:06 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="87632">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.mainpanel;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.pendulum.animator.Lock;
import components.pendulum.imageprotractor.ImageProtractor;
import components.pendulum.imageprotractor.ImageProtractorInterface;
import components.pendulum.pendulum.ObserverPendulum;
import components.pendulum.pendulum.ObserverPendulumInterface;
import components.ruler.Ruler;
import components.ruler.RulerInterface;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.Column;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})
@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})
public class MainPanel implements MainPanelInterface{
	
	public static int gravity, 
			friction = PendulumModelFactory.DEFAULT_FRICTION;
	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;
	private Planet planet;
	private int numberOfPendulum = 0;
	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();
	private RulerInterface ruler = new Ruler(20, 20, 675, 60);
	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);
	private boolean enable = false;
	private Lock aLock = new Lock();
	

	public MainPanel() {
		increaseNumberOfPendulum();
		setPlanet(Planet.Earth);
	}

	@Override
	public void setGravity(int g) {
		gravity = g;
		planet = Planet.Other;
		setModel();
	}

	@Override
	public void setFriction(int f) {
		friction = f;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(25)
	@MinValue(1)
	@Row(1)
	@Column(0)
	public int getGravity() {
		return gravity;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(9)
	@MinValue(0)
	@Row(2)
	@Column(0)
	public int getFriction() {
		return friction;
	}


	@Override
	@Row(2)
	@Column(0)
	public List<ObserverPendulumInterface> getPendulum() {
		return pendulum;
	}


	@Override
	public RulerInterface getRuler() {
		return ruler;
	}

	@Override
	public void setRuler(RulerInterface newRuler) {
		ruler = newRuler;
	}


	@Override
	public int getNumberOfPendulum() {
		return numberOfPendulum;
	}

	
	@Override
	public ImageProtractorInterface getProtractor() {
		return protractor;
	}

	@Override
	public void setProtractor(ImageProtractorInterface newProtractor) {
		protractor = newProtractor;
	}

	@Override
	@Visible(false)
	public void setModel() {
		for (int i = 0; i < numberOfPendulum; i ++) {
			pendulum.get(i).setModel();
		}
	}

	@Override
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@Label("\u25B6")
	public void pause() {
		if (enable) {
			for (int i = 0; i < numberOfPendulum; i ++) {
				pendulum.get(i).stop();
			}
			enable = false;
		}
		else {
			for (int i = 0; i < numberOfPendulum; i ++) {
				pendulum.get(i).resume();
			}
			enable = true;
		}
	}

	@Override
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@Label("\u25A0")
	public void reset() {
		pause();
		for (int i = 0; i < numberOfPendulum; i ++) {
			pendulum.get(i).setAngle(0);
		}
	}

	@Override
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(0)
	@Label("+")
	public void increaseNumberOfPendulum() {
		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {
			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();
			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, 
					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);
	
			
			pendulum.add(newPendulum);
			numberOfPendulum ++;
		}
	}

	@Override
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(1)
	@Label("-")
	public void decreaseNumberOfPendulum() {
		if (numberOfPendulum > 0) {
			numberOfPendulum --;
			pendulum.get(numberOfPendulum).getAnimator().interrupt();
			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));
			pendulum.remove(numberOfPendulum);
		}
	}

	@Override
	@Row(0)
	@Column(0)
	public Planet getPlanet() {
		return planet;
	}

	@Override
	public void setPlanet(Planet newPlanet) {
		setGravity(newPlanet.getValue());
		planet = newPlanet;
	}


}
]]></snapshot>
  </Command>
  <Command __id="269" _type="ConsoleOutput" date="Thu Feb 25 23:31:23 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105250" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="270" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105357" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="271" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105457" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="272" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105556" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="273" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105707" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="274" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105808" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="275" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="105909" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="276" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="106011" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="277" _type="ConsoleOutput" date="Thu Feb 25 23:31:24 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="106112" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="278" _type="RunCommand" date="Thu Feb 25 23:31:24 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="106179" type="Run" />
  <Command __id="279" _type="RunCommand" date="Thu Feb 25 23:31:24 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="106179" type="Run" />
  <Command __id="280" _type="ShellCommand" date="Thu Feb 25 23:31:24 EST 2021" starttimestamp="1614313778745" timestamp="106188" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="282" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:31:42 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="124226" />
  <Command __id="283" _type="MoveCaretCommand" caretOffset="537" date="Thu Feb 25 23:31:44 EST 2021" docOffset="537" starttimestamp="1614313778745" timestamp="126112" />
  <Command __id="285" _type="InsertStringCommand" date="Thu Feb 25 23:31:45 EST 2021" starttimestamp="1614313778745" timestamp="126778" timestamp2="126778">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="287" _type="InsertStringCommand" date="Thu Feb 25 23:31:45 EST 2021" starttimestamp="1614313778745" timestamp="126929" timestamp2="126929">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="288" _type="MoveCaretCommand" caretOffset="637" date="Thu Feb 25 23:31:46 EST 2021" docOffset="637" starttimestamp="1614313778745" timestamp="127506" />
  <Command __id="290" _type="InsertStringCommand" date="Thu Feb 25 23:31:46 EST 2021" starttimestamp="1614313778745" timestamp="127606" timestamp2="127606">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="292" _type="InsertStringCommand" date="Thu Feb 25 23:31:46 EST 2021" starttimestamp="1614313778745" timestamp="127774" timestamp2="127774">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="293" _type="MoveCaretCommand" caretOffset="415" date="Thu Feb 25 23:31:47 EST 2021" docOffset="415" starttimestamp="1614313778745" timestamp="128473" />
  <Command __id="295" _type="InsertStringCommand" date="Thu Feb 25 23:31:47 EST 2021" starttimestamp="1614313778745" timestamp="128545" timestamp2="128545">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="297" _type="InsertStringCommand" date="Thu Feb 25 23:31:47 EST 2021" starttimestamp="1614313778745" timestamp="128697" timestamp2="128697">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="298" _type="MoveCaretCommand" caretOffset="251" date="Thu Feb 25 23:31:48 EST 2021" docOffset="251" starttimestamp="1614313778745" timestamp="129443" />
  <Command __id="300" _type="InsertStringCommand" date="Thu Feb 25 23:31:48 EST 2021" starttimestamp="1614313778745" timestamp="129548" timestamp2="129548">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="302" _type="InsertStringCommand" date="Thu Feb 25 23:31:48 EST 2021" starttimestamp="1614313778745" timestamp="129702" timestamp2="129702">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="303" _type="MoveCaretCommand" caretOffset="152" date="Thu Feb 25 23:31:48 EST 2021" docOffset="152" starttimestamp="1614313778745" timestamp="130189" />
  <Command __id="305" _type="InsertStringCommand" date="Thu Feb 25 23:31:49 EST 2021" starttimestamp="1614313778745" timestamp="130288" timestamp2="130288">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="307" _type="InsertStringCommand" date="Thu Feb 25 23:31:49 EST 2021" starttimestamp="1614313778745" timestamp="130437" timestamp2="130437">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="308" _type="MoveCaretCommand" caretOffset="368" date="Thu Feb 25 23:31:49 EST 2021" docOffset="368" starttimestamp="1614313778745" timestamp="130878" />
  <Command __id="309" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:31:50 EST 2021" starttimestamp="1614313778745" timestamp="131569" />
  <Command __id="313" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:31:51 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="132416" />
  <Command __id="281" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:31:42 EST 2021" docASTNodeCount="122" docActiveCodeLength="719" docExpressionCount="86" docLength="719" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="124102">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

public class Lock {
	
	private boolean lock = false;
	
	public synchronized void getLock() {
		while (lock) {
			System.out.println(Thread.currentThread().toString() + "begins waiting");
			try {
				wait();
				System.out.println(Thread.currentThread().toString() + "ends waiting");
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		
		lock = true;
		System.out.println(Thread.currentThread().toString() + "gets the lock");
	}
	
	public synchronized void releaseLock() {
		System.out.println(Thread.currentThread().toString() + "notifies");
		notify();
		lock = false;
		System.out.println(Thread.currentThread().toString() + "releases the lock");
	}
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="284" _type="Insert" date="Thu Feb 25 23:31:45 EST 2021" docASTNodeCount="109" docActiveCodeLength="652" docExpressionCount="74" docLength="721" length="2" offset="537" repeat="2" starttimestamp="1614313778745" timestamp="126775" timestamp2="126927">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="289" _type="Insert" date="Thu Feb 25 23:31:46 EST 2021" docASTNodeCount="96" docActiveCodeLength="576" docExpressionCount="62" docLength="723" length="2" offset="637" repeat="2" starttimestamp="1614313778745" timestamp="127604" timestamp2="127772">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="294" _type="Insert" date="Thu Feb 25 23:31:47 EST 2021" docASTNodeCount="83" docActiveCodeLength="504" docExpressionCount="50" docLength="725" length="2" offset="415" repeat="2" starttimestamp="1614313778745" timestamp="128543" timestamp2="128696">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="299" _type="Insert" date="Thu Feb 25 23:31:48 EST 2021" docASTNodeCount="70" docActiveCodeLength="433" docExpressionCount="38" docLength="727" length="2" offset="251" repeat="2" starttimestamp="1614313778745" timestamp="129546" timestamp2="129700">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="304" _type="Insert" date="Thu Feb 25 23:31:49 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="729" length="2" offset="152" repeat="2" starttimestamp="1614313778745" timestamp="130287" timestamp2="130436">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="312" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:31:51 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="132339">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			System.out.println(Thread.currentThread().toString() + "tries to get lock");
			aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="318" _type="Insert" date="Thu Feb 25 23:31:55 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" length="3" offset="602" repeat="3" starttimestamp="1614313778745" timestamp="136355" timestamp2="136789">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="324" _type="Delete" date="Thu Feb 25 23:31:56 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="814" endLine="31" length="1" offset="604" startLine="31" starttimestamp="1614313778745" timestamp="138175">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="337" _type="RunCommand" date="Thu Feb 25 23:32:04 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="145578" type="Run" />
  <Command __id="338" _type="RunCommand" date="Thu Feb 25 23:32:04 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="145578" type="Run" />
  <Command __id="339" _type="ShellCommand" date="Thu Feb 25 23:32:04 EST 2021" starttimestamp="1614313778745" timestamp="145588" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="340" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:32:05 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="729" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="146879">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶public class Lock {¶	¶	private boolean lock = false;¶	¶	public synchronized void getLock() {¶		while (lock) {¶			"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "begins waiting");¶			try {¶				wait();¶				"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "ends waiting");¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		¶		lock = true;¶		"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "gets the lock");¶	}¶	¶	public synchronized void releaseLock() {¶		"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "notifies");¶		notify();¶		lock = false;¶		"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "releases the lock");¶	}¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

public class Lock {
	
	private boolean lock = false;
	
	public synchronized void getLock() {
		while (lock) {
			//System.out.println(Thread.currentThread().toString() + "begins waiting");
			try {
				wait();
				//System.out.println(Thread.currentThread().toString() + "ends waiting");
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		
		lock = true;
		//System.out.println(Thread.currentThread().toString() + "gets the lock");
	}
	
	public synchronized void releaseLock() {
		//System.out.println(Thread.currentThread().toString() + "notifies");
		notify();
		lock = false;
		//System.out.println(Thread.currentThread().toString() + "releases the lock");
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="341" _type="MoveCaretCommand" caretOffset="368" date="Thu Feb 25 23:32:05 EST 2021" docOffset="368" starttimestamp="1614313778745" timestamp="146924" />
  <Command __id="343" _type="MoveCaretCommand" caretOffset="466" date="Thu Feb 25 23:32:11 EST 2021" docOffset="466" starttimestamp="1614313778745" timestamp="152789" />
  <Command __id="342" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:32:11 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="814" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="152735">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			//System.out.println(Thread.currentThread().toString() + "tries to get lock");
			aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="345" _type="Insert" date="Thu Feb 25 23:32:19 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" length="1" offset="604" starttimestamp="1614313778745" timestamp="160301">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="347" _type="Delete" date="Thu Feb 25 23:32:19 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" endLine="31" length="3" offset="602" startLine="31" starttimestamp="1614313778745" timestamp="160749">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="400" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="173538" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="401" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="173637" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="402" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="173740" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="403" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="173892" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="404" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="173993" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="405" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174095" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="406" _type="ConsoleOutput" date="Thu Feb 25 23:32:32 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174150" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="407" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174302" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="408" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174402" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="409" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174456" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="410" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174607" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="411" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174708" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="412" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174811" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="413" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="174913" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="414" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="175014" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="415" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="175116" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="416" _type="ConsoleOutput" date="Thu Feb 25 23:32:33 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="175218" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="417" _type="ConsoleOutput" date="Thu Feb 25 23:32:34 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="175288" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="418" _type="ConsoleOutput" date="Thu Feb 25 23:32:34 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="175389" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]gets the lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-0,5,main]notifies
Thread[Thread-0,5,main]releases the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]gets the lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-0,5,main]notifies¶Thread[Thread-0,5,main]releases the lock¶")]]]></diff>
  </Command>
  <Command __id="419" _type="RunCommand" date="Thu Feb 25 23:32:34 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="175511" type="Run" />
  <Command __id="420" _type="RunCommand" date="Thu Feb 25 23:32:34 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="175512" type="Run" />
  <Command __id="421" _type="ShellCommand" date="Thu Feb 25 23:32:34 EST 2021" starttimestamp="1614313778745" timestamp="175519" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="353" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:32:22 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="729" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="163641">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶public class Lock {¶	¶	private boolean lock = false;¶	¶	public synchronized void getLock() {¶		while (lock) {¶			//System.out.println(Thread.currentThread().toString() + "begins waiting");¶			try {¶				wait();¶				//System.out.println(Thread.currentThread().toString() + "ends waiting");¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		¶		lock = true;¶		//System.out.println(Thread.currentThread().toString() + "gets the lock");¶	}¶	¶	public synchronized void releaseLock() {¶		//System.out.println(Thread.currentThread().toString() + "notifies");¶		notify();¶		lock = false;¶		//System.out.println(Thread.currentThread().toString() + "releases the lock");¶	}¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="357" _type="Delete" date="Thu Feb 25 23:32:23 EST 2021" docASTNodeCount="70" docActiveCodeLength="433" docExpressionCount="38" docLength="727" endLine="8" length="2" offset="152" startLine="8" starttimestamp="1614313778745" timestamp="164794">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="361" _type="Delete" date="Thu Feb 25 23:32:25 EST 2021" docASTNodeCount="83" docActiveCodeLength="504" docExpressionCount="50" docLength="725" endLine="11" length="2" offset="251" startLine="11" starttimestamp="1614313778745" timestamp="166267">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="364" _type="Delete" date="Thu Feb 25 23:32:26 EST 2021" docASTNodeCount="96" docActiveCodeLength="576" docExpressionCount="62" docLength="723" endLine="18" length="2" offset="415" startLine="18" starttimestamp="1614313778745" timestamp="167289">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="367" _type="Delete" date="Thu Feb 25 23:32:26 EST 2021" docASTNodeCount="109" docActiveCodeLength="652" docExpressionCount="74" docLength="721" endLine="25" length="2" offset="637" startLine="25" starttimestamp="1614313778745" timestamp="167934">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="370" _type="Delete" date="Thu Feb 25 23:32:27 EST 2021" docASTNodeCount="122" docActiveCodeLength="719" docExpressionCount="86" docLength="719" endLine="22" length="2" offset="537" startLine="22" starttimestamp="1614313778745" timestamp="168732">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="422" _type="MoveCaretCommand" caretOffset="534" date="Thu Feb 25 23:32:45 EST 2021" docOffset="534" starttimestamp="1614313778745" timestamp="187006" />
  <DocumentChange __id="423" _type="Insert" date="Thu Feb 25 23:32:47 EST 2021" docASTNodeCount="122" docActiveCodeLength="722" docExpressionCount="86" docLength="722" length="3" offset="534" starttimestamp="1614313778745" timestamp="188806">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="424" _type="InsertStringCommand" date="Thu Feb 25 23:32:47 EST 2021" starttimestamp="1614313778745" timestamp="188808" timestamp2="188808">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:32:48 EST 2021" starttimestamp="1614313778745" timestamp="190058" />
  <Command __id="428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:32:49 EST 2021" starttimestamp="1614313778745" timestamp="190465" />
  <Command __id="430" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:32:49 EST 2021" starttimestamp="1614313778745" timestamp="191124" />
  <Command __id="431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="191606" />
  <Command __id="432" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="191769" />
  <Command __id="433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="192019" />
  <Command __id="434" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="192069" />
  <Command __id="435" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="192119" />
  <Command __id="436" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="192169" />
  <Command __id="437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:50 EST 2021" starttimestamp="1614313778745" timestamp="192225" />
  <Command __id="438" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192275" />
  <Command __id="439" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192325" />
  <Command __id="440" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192375" />
  <Command __id="441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192425" />
  <Command __id="442" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192475" />
  <Command __id="443" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192526" />
  <Command __id="444" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192576" />
  <Command __id="445" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192626" />
  <Command __id="446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192676" />
  <Command __id="447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192726" />
  <Command __id="448" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192777" />
  <Command __id="449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192826" />
  <Command __id="450" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192876" />
  <Command __id="451" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192926" />
  <Command __id="452" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="192976" />
  <Command __id="453" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="193026" />
  <Command __id="454" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="193076" />
  <Command __id="455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="193126" />
  <Command __id="456" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="193176" />
  <Command __id="457" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:51 EST 2021" starttimestamp="1614313778745" timestamp="193226" />
  <Command __id="458" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193276" />
  <Command __id="459" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193326" />
  <Command __id="460" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193376" />
  <Command __id="461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193426" />
  <Command __id="462" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193476" />
  <Command __id="463" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193526" />
  <Command __id="464" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193576" />
  <Command __id="465" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193627" />
  <Command __id="466" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193677" />
  <Command __id="467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:52 EST 2021" starttimestamp="1614313778745" timestamp="193804" />
  <Command __id="469" _type="InsertStringCommand" date="Thu Feb 25 23:32:53 EST 2021" starttimestamp="1614313778745" timestamp="194769" timestamp2="194769">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="471" _type="InsertStringCommand" date="Thu Feb 25 23:32:53 EST 2021" starttimestamp="1614313778745" timestamp="194882" timestamp2="194882">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="473" _type="InsertStringCommand" date="Thu Feb 25 23:32:53 EST 2021" starttimestamp="1614313778745" timestamp="194970" timestamp2="194970">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="474" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:32:54 EST 2021" starttimestamp="1614313778745" timestamp="195464" />
  <Command __id="477" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:32:54 EST 2021" starttimestamp="1614313778745" timestamp="195645" />
  <Command __id="478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:32:54 EST 2021" starttimestamp="1614313778745" timestamp="195823" />
  <Command __id="479" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:32:54 EST 2021" starttimestamp="1614313778745" timestamp="195990" />
  <Command __id="480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:54 EST 2021" starttimestamp="1614313778745" timestamp="196229" />
  <Command __id="481" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:55 EST 2021" starttimestamp="1614313778745" timestamp="196385" />
  <Command __id="482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:32:55 EST 2021" starttimestamp="1614313778745" timestamp="196534" />
  <Command __id="484" _type="InsertStringCommand" date="Thu Feb 25 23:32:55 EST 2021" starttimestamp="1614313778745" timestamp="197169" timestamp2="197169">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="486" _type="InsertStringCommand" date="Thu Feb 25 23:32:56 EST 2021" starttimestamp="1614313778745" timestamp="197292" timestamp2="197292">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="488" _type="InsertStringCommand" date="Thu Feb 25 23:32:56 EST 2021" starttimestamp="1614313778745" timestamp="197344" timestamp2="197344">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="489" _type="MoveCaretCommand" caretOffset="635" date="Thu Feb 25 23:32:57 EST 2021" docOffset="635" starttimestamp="1614313778745" timestamp="198356" />
  <Command __id="490" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:32:57 EST 2021" starttimestamp="1614313778745" timestamp="198561" />
  <Command __id="493" _type="MoveCaretCommand" caretOffset="415" date="Thu Feb 25 23:32:58 EST 2021" docOffset="415" starttimestamp="1614313778745" timestamp="200238" />
  <Command __id="495" _type="InsertStringCommand" date="Thu Feb 25 23:32:59 EST 2021" starttimestamp="1614313778745" timestamp="200852" timestamp2="200852">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="497" _type="InsertStringCommand" date="Thu Feb 25 23:32:59 EST 2021" starttimestamp="1614313778745" timestamp="200983" timestamp2="200983">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="499" _type="InsertStringCommand" date="Thu Feb 25 23:32:59 EST 2021" starttimestamp="1614313778745" timestamp="201009" timestamp2="201009">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="500" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:33:00 EST 2021" starttimestamp="1614313778745" timestamp="201418" />
  <Command __id="503" _type="MoveCaretCommand" caretOffset="251" date="Thu Feb 25 23:33:01 EST 2021" docOffset="251" starttimestamp="1614313778745" timestamp="203154" />
  <Command __id="505" _type="InsertStringCommand" date="Thu Feb 25 23:33:02 EST 2021" starttimestamp="1614313778745" timestamp="203839" timestamp2="203839">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="507" _type="InsertStringCommand" date="Thu Feb 25 23:33:02 EST 2021" starttimestamp="1614313778745" timestamp="203954" timestamp2="203954">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="509" _type="InsertStringCommand" date="Thu Feb 25 23:33:02 EST 2021" starttimestamp="1614313778745" timestamp="203980" timestamp2="203980">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="510" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:33:03 EST 2021" starttimestamp="1614313778745" timestamp="204414" />
  <Command __id="550" _type="ConsoleOutput" date="Thu Feb 25 23:33:12 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="213817" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="551" _type="ConsoleOutput" date="Thu Feb 25 23:33:12 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="213921" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="552" _type="ConsoleOutput" date="Thu Feb 25 23:33:12 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214022" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="553" _type="ConsoleOutput" date="Thu Feb 25 23:33:12 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214124" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="554" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214275" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="555" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214376" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="556" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214477" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="557" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214579" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="558" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214683" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="559" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214767" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="560" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214867" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="561" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="214967" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="562" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="215068" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="563" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="215168" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="564" _type="ConsoleOutput" date="Thu Feb 25 23:33:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="215246" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="565" _type="RunCommand" date="Thu Feb 25 23:33:14 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="215361" type="Run" />
  <Command __id="566" _type="RunCommand" date="Thu Feb 25 23:33:14 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="215361" type="Run" />
  <Command __id="567" _type="ShellCommand" date="Thu Feb 25 23:33:14 EST 2021" starttimestamp="1614313778745" timestamp="215369" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="568" _type="MoveCaretCommand" caretOffset="612" date="Thu Feb 25 23:33:16 EST 2021" docOffset="612" starttimestamp="1614313778745" timestamp="218106" />
  <DocumentChange __id="425" _type="Delete" date="Thu Feb 25 23:32:48 EST 2021" docASTNodeCount="122" docActiveCodeLength="719" docExpressionCount="86" docLength="719" endLine="22" length="3" offset="534" repeat="3" startLine="21" starttimestamp="1614313778745" timestamp="190056" timestamp2="191122">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="468" _type="Insert" date="Thu Feb 25 23:32:53 EST 2021" docASTNodeCount="109" docActiveCodeLength="652" docExpressionCount="74" docLength="722" length="3" offset="537" repeat="3" starttimestamp="1614313778745" timestamp="194768" timestamp2="194969">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="483" _type="Insert" date="Thu Feb 25 23:32:55 EST 2021" docASTNodeCount="96" docActiveCodeLength="576" docExpressionCount="62" docLength="725" length="3" offset="638" repeat="3" starttimestamp="1614313778745" timestamp="197168" timestamp2="197343">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="494" _type="Insert" date="Thu Feb 25 23:32:59 EST 2021" docASTNodeCount="83" docActiveCodeLength="504" docExpressionCount="50" docLength="728" length="3" offset="415" repeat="3" starttimestamp="1614313778745" timestamp="200850" timestamp2="201003">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="504" _type="Insert" date="Thu Feb 25 23:33:02 EST 2021" docASTNodeCount="70" docActiveCodeLength="433" docExpressionCount="38" docLength="731" length="3" offset="251" repeat="3" starttimestamp="1614313778745" timestamp="203837" timestamp2="203967">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="514" _type="Insert" date="Thu Feb 25 23:33:05 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="734" length="3" offset="152" repeat="3" starttimestamp="1614313778745" timestamp="206559" timestamp2="206710">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="524" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:33:07 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="208645">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			"), Diff(DELETE,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			System.out.println(Thread.currentThread().toString() + "tries to get lock");
			aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="569" _type="MoveCaretCommand" caretOffset="602" date="Thu Feb 25 23:33:18 EST 2021" docOffset="602" starttimestamp="1614313778745" timestamp="219372" />
  <Command __id="571" _type="InsertStringCommand" date="Thu Feb 25 23:33:19 EST 2021" starttimestamp="1614313778745" timestamp="220943" timestamp2="220943">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="573" _type="InsertStringCommand" date="Thu Feb 25 23:33:19 EST 2021" starttimestamp="1614313778745" timestamp="221060" timestamp2="221060">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="575" _type="InsertStringCommand" date="Thu Feb 25 23:33:19 EST 2021" starttimestamp="1614313778745" timestamp="221146" timestamp2="221146">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="586" _type="RunCommand" date="Thu Feb 25 23:33:31 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="232511" type="Run" />
  <Command __id="587" _type="RunCommand" date="Thu Feb 25 23:33:31 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="232511" type="Run" />
  <Command __id="588" _type="ShellCommand" date="Thu Feb 25 23:33:31 EST 2021" starttimestamp="1614313778745" timestamp="232521" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="612" _type="RunCommand" date="Thu Feb 25 23:33:45 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="246873" type="Run" />
  <Command __id="613" _type="RunCommand" date="Thu Feb 25 23:33:45 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="246873" type="Run" />
  <Command __id="614" _type="ShellCommand" date="Thu Feb 25 23:33:45 EST 2021" starttimestamp="1614313778745" timestamp="246919" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="659" _type="ConsoleOutput" date="Thu Feb 25 23:33:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="257906" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="660" _type="ConsoleOutput" date="Thu Feb 25 23:33:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258010" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="661" _type="ConsoleOutput" date="Thu Feb 25 23:33:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258062" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="662" _type="ConsoleOutput" date="Thu Feb 25 23:33:56 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258214" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="663" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258315" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="664" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258416" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="665" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258472" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="666" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258574" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="667" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258676" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="668" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258778" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="669" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258880" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="670" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="258981" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="671" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="259132" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="672" _type="ConsoleOutput" date="Thu Feb 25 23:33:57 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="259233" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="673" _type="RunCommand" date="Thu Feb 25 23:33:58 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="259347" type="Run" />
  <Command __id="674" _type="RunCommand" date="Thu Feb 25 23:33:58 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="259347" type="Run" />
  <Command __id="675" _type="ShellCommand" date="Thu Feb 25 23:33:58 EST 2021" starttimestamp="1614313778745" timestamp="259362" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="676" _type="MoveCaretCommand" caretOffset="644" date="Thu Feb 25 23:34:00 EST 2021" docOffset="644" starttimestamp="1614313778745" timestamp="262105" />
  <DocumentChange __id="570" _type="Insert" date="Thu Feb 25 23:33:19 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" length="3" offset="602" repeat="3" starttimestamp="1614313778745" timestamp="220941" timestamp2="221145">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="591" _type="Delete" date="Thu Feb 25 23:33:37 EST 2021" docASTNodeCount="120" docActiveCodeLength="732" docExpressionCount="59" docLength="732" endLine="31" length="83" offset="598" repeat="5" startLine="30" starttimestamp="1614313778745" timestamp="238939" timestamp2="239987">
    <text><![CDATA[
			// System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></text>
  </DocumentChange>
  <DocumentChange __id="616" _type="Insert" date="Thu Feb 25 23:33:48 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" length="83" offset="598" repeat="2" starttimestamp="1614313778745" timestamp="249669" timestamp2="249996">
    <text><![CDATA[
			// System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></text>
  </DocumentChange>
  <DocumentChange __id="625" _type="Delete" date="Thu Feb 25 23:33:50 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" endLine="31" length="3" offset="602" repeat="3" startLine="31" starttimestamp="1614313778745" timestamp="252215" timestamp2="253246">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="678" _type="Replace" date="Thu Feb 25 23:34:32 EST 2021" docASTNodeCount="120" docActiveCodeLength="734" docExpressionCount="59" docLength="734" endLine="31" insertionLength="1" int_docASTNodeCount="120" int_docActiveCodeLength="733" int_docExpressionCount="59" int_docLength="733" length="79" offset="599" startLine="31" starttimestamp="1614313778745" timestamp="293459">
    <deletedText><![CDATA[			System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></deletedText>
    <insertedText><![CDATA[ ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="680" _type="Replace" date="Thu Feb 25 23:34:33 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" endLine="31" insertionLength="79" int_docASTNodeCount="120" int_docActiveCodeLength="733" int_docExpressionCount="59" int_docLength="733" length="1" offset="599" startLine="31" starttimestamp="1614313778745" timestamp="294616">
    <deletedText><![CDATA[ ]]></deletedText>
    <insertedText><![CDATA[			System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="682" _type="Delete" date="Thu Feb 25 23:34:34 EST 2021" docASTNodeCount="120" docActiveCodeLength="732" docExpressionCount="59" docLength="732" endLine="31" length="80" offset="598" repeat="2" startLine="30" starttimestamp="1614313778745" timestamp="295494" timestamp2="295682">
    <text><![CDATA[
			System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></text>
  </DocumentChange>
  <Command __id="698" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:34:44 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="734" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="306125">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶public class Lock {¶	¶	private boolean lock = false;¶	¶	public synchronized void getLock() {¶		while (lock) {¶			//"), Diff(INSERT," "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "begins waiting");¶			try {¶				wait();¶				//"), Diff(INSERT," "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "ends waiting");¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		¶		lock = true;¶		//"), Diff(INSERT," "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "gets the lock");¶	}¶	¶	public synchronized void releaseLock() {¶		//"), Diff(INSERT," "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "notifies");¶		notify();¶		lock = false;¶		//"), Diff(INSERT," "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "releases the lock");¶	}¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

public class Lock {
	
	private boolean lock = false;
	
	public synchronized void getLock() {
		while (lock) {
			// System.out.println(Thread.currentThread().toString() + "begins waiting");
			try {
				wait();
				// System.out.println(Thread.currentThread().toString() + "ends waiting");
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		
		lock = true;
		// System.out.println(Thread.currentThread().toString() + "gets the lock");
	}
	
	public synchronized void releaseLock() {
		// System.out.println(Thread.currentThread().toString() + "notifies");
		notify();
		lock = false;
		// System.out.println(Thread.currentThread().toString() + "releases the lock");
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="697" _type="ShellCommand" date="Thu Feb 25 23:34:44 EST 2021" starttimestamp="1614313778745" timestamp="305977" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="699" _type="MoveCaretCommand" caretOffset="499" date="Thu Feb 25 23:34:44 EST 2021" docOffset="499" starttimestamp="1614313778745" timestamp="306162" />
  <Command __id="701" _type="SelectTextCommand" caretOffset="419" date="Thu Feb 25 23:34:48 EST 2021" end="422" start="419" starttimestamp="1614313778745" timestamp="309605" />
  <Command __id="702" _type="MoveCaretCommand" caretOffset="556" date="Thu Feb 25 23:34:48 EST 2021" docOffset="556" starttimestamp="1614313778745" timestamp="310205" />
  <Command __id="700" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:34:48 EST 2021" docASTNodeCount="120" docActiveCodeLength="732" docExpressionCount="59" docLength="732" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="309539">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			"), Diff(DELETE,"System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			"), Diff(EQUAL,"aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="703" _type="MoveCaretCommand" caretOffset="598" date="Thu Feb 25 23:34:51 EST 2021" docOffset="598" starttimestamp="1614313778745" timestamp="312755" />
  <Command __id="705" _type="UndoCommand" date="Thu Feb 25 23:34:52 EST 2021" starttimestamp="1614313778745" timestamp="314008" />
  <Command __id="707" _type="UndoCommand" date="Thu Feb 25 23:34:53 EST 2021" starttimestamp="1614313778745" timestamp="314463" />
  <Command __id="708" _type="MoveCaretCommand" caretOffset="698" date="Thu Feb 25 23:34:53 EST 2021" docOffset="698" starttimestamp="1614313778745" timestamp="314922" />
  <Command __id="709" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:34:53 EST 2021" starttimestamp="1614313778745" timestamp="315217" />
  <Command __id="712" _type="MoveCaretCommand" caretOffset="579" date="Thu Feb 25 23:34:54 EST 2021" docOffset="579" starttimestamp="1614313778745" timestamp="315488" />
  <Command __id="713" _type="SelectTextCommand" caretOffset="622" date="Thu Feb 25 23:35:00 EST 2021" end="676" start="622" starttimestamp="1614313778745" timestamp="322018" />
  <Command __id="715" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:35:01 EST 2021" starttimestamp="1614313778745" timestamp="322699" />
  <Command __id="717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:35:01 EST 2021" starttimestamp="1614313778745" timestamp="322900" />
  <Command __id="718" _type="MoveCaretCommand" caretOffset="466" date="Thu Feb 25 23:35:03 EST 2021" docOffset="466" starttimestamp="1614313778745" timestamp="324388" />
  <Command __id="746" _type="ConsoleOutput" date="Thu Feb 25 23:35:07 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329177" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="747" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329280" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="748" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329341" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="749" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329444" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="750" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329595" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="751" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329696" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="752" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329797" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="753" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329898" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="754" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="329998" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="755" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="330057" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="756" _type="ConsoleOutput" date="Thu Feb 25 23:35:08 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="330159" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="757" _type="ConsoleOutput" date="Thu Feb 25 23:35:09 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="330261" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="758" _type="ConsoleOutput" date="Thu Feb 25 23:35:09 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="330363" type="ConsoleOutput">
    <outputString><![CDATA[
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="759" _type="RunCommand" date="Thu Feb 25 23:35:09 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="330504" type="Run" />
  <Command __id="760" _type="RunCommand" date="Thu Feb 25 23:35:09 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="330504" type="Run" />
  <Command __id="761" _type="ShellCommand" date="Thu Feb 25 23:35:09 EST 2021" starttimestamp="1614313778745" timestamp="330523" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="762" _type="RunCommand" date="Thu Feb 25 23:35:10 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="331268" type="Run" />
  <Command __id="763" _type="RunCommand" date="Thu Feb 25 23:35:10 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="331268" type="Run" />
  <Command __id="777" _type="RunCommand" date="Thu Feb 25 23:35:28 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="349805" type="Run" />
  <Command __id="778" _type="RunCommand" date="Thu Feb 25 23:35:28 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="349805" type="Run" />
  <Command __id="779" _type="ShellCommand" date="Thu Feb 25 23:35:28 EST 2021" starttimestamp="1614313778745" timestamp="349813" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="780" _type="SelectTextCommand" caretOffset="603" date="Thu Feb 25 23:35:39 EST 2021" end="622" start="603" starttimestamp="1614313778745" timestamp="360772" />
  <Command __id="781" _type="MoveCaretCommand" caretOffset="606" date="Thu Feb 25 23:35:40 EST 2021" docOffset="606" starttimestamp="1614313778745" timestamp="361723" />
  <Command __id="782" _type="MoveCaretCommand" caretOffset="602" date="Thu Feb 25 23:35:40 EST 2021" docOffset="602" starttimestamp="1614313778745" timestamp="362097" />
  <Command __id="784" _type="UndoCommand" date="Thu Feb 25 23:35:41 EST 2021" starttimestamp="1614313778745" timestamp="362517" />
  <Command __id="786" _type="UndoCommand" date="Thu Feb 25 23:35:41 EST 2021" starttimestamp="1614313778745" timestamp="362852" />
  <Command __id="788" _type="UndoCommand" date="Thu Feb 25 23:35:42 EST 2021" starttimestamp="1614313778745" timestamp="363539" />
  <Command __id="790" _type="UndoCommand" date="Thu Feb 25 23:35:42 EST 2021" starttimestamp="1614313778745" timestamp="363747" />
  <Command __id="791" _type="MoveCaretCommand" caretOffset="685" date="Thu Feb 25 23:35:43 EST 2021" docOffset="685" starttimestamp="1614313778745" timestamp="364856" />
  <Command __id="793" _type="InsertStringCommand" date="Thu Feb 25 23:35:44 EST 2021" starttimestamp="1614313778745" timestamp="365693" timestamp2="365693">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="795" _type="InsertStringCommand" date="Thu Feb 25 23:35:44 EST 2021" starttimestamp="1614313778745" timestamp="365812" timestamp2="365812">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="797" _type="InsertStringCommand" date="Thu Feb 25 23:35:44 EST 2021" starttimestamp="1614313778745" timestamp="365848" timestamp2="365848">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="704" _type="Insert" date="Thu Feb 25 23:34:52 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" length="80" offset="598" repeat="2" starttimestamp="1614313778745" timestamp="314005" timestamp2="314458">
    <text><![CDATA[
			System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></text>
  </DocumentChange>
  <DocumentChange __id="714" _type="Delete" date="Thu Feb 25 23:35:01 EST 2021" docASTNodeCount="126" docActiveCodeLength="757" docExpressionCount="64" docLength="757" endLine="31" length="55" offset="621" repeat="2" startLine="31" starttimestamp="1614313778745" timestamp="322695" timestamp2="322899">
    <text><![CDATA[Thread.currentThread().toString() + "tries to get lock"]]></text>
  </DocumentChange>
  <DocumentChange __id="765" _type="Delete" date="Thu Feb 25 23:35:15 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="736" endLine="31" length="21" offset="602" startLine="31" starttimestamp="1614313778745" timestamp="336560">
    <text><![CDATA[System.out.println();]]></text>
  </DocumentChange>
  <DocumentChange __id="783" _type="Insert" date="Thu Feb 25 23:35:41 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" length="79" offset="602" repeat="4" starttimestamp="1614313778745" timestamp="362514" timestamp2="363745">
    <text><![CDATA[// System.out.println(Thread.currentThread().toString() + "tries to get lock");]]></text>
  </DocumentChange>
  <DocumentChange __id="792" _type="Insert" date="Thu Feb 25 23:35:44 EST 2021" docASTNodeCount="116" docActiveCodeLength="720" docExpressionCount="56" docLength="818" length="3" offset="685" repeat="3" starttimestamp="1614313778745" timestamp="365692" timestamp2="365847">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="798" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:35:45 EST 2021" starttimestamp="1614313778745" timestamp="366995" />
  <Command __id="803" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:36:02 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="384027">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.pendulum.animator.Lock;¶import components.pendulum.imageprotractor.ImageProtractor;¶import components.pendulum.imageprotractor.ImageProtractorInterface;¶import components.pendulum.pendulum.ObserverPendulum;¶import components.pendulum.pendulum.ObserverPendulumInterface;¶import components.ruler.Ruler;¶import components.ruler.RulerInterface;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.Column;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶public class MainPanel implements MainPanelInterface{¶	¶	public static int gravity, ¶			friction = PendulumModelFactory.DEFAULT_FRICTION;¶	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;¶	private Planet planet;¶	private int numberOfPendulum = 0;¶	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();¶	private RulerInterface ruler = new Ruler(20, 20, 675, 60);¶	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);¶	private boolean enable = false;¶	private Lock aLock = new Lock();¶	¶¶	public MainPanel() {¶		increaseNumberOfPendulum();¶		setPlanet(Planet.Earth);¶	}¶¶	@Override¶	public void setGravity(int g) {¶		gravity = g;¶		planet = Planet.Other;¶		setModel();¶	}¶¶	@Override¶	public void setFriction(int f) {¶		friction = f;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(25)¶	@MinValue(1)¶	@Row(1)¶	@Column(0)¶	public int getGravity() {¶		return gravity;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(9)¶	@MinValue(0)¶	@Row(2)¶	@Column(0)¶	public int getFriction() {¶		return friction;¶	}¶¶¶	@Override¶	@Row(2)¶	@Column(0)¶	public List<ObserverPendulumInterface> getPendulum() {¶		return pendulum;¶	}¶¶¶	@Override¶	public RulerInterface getRuler() {¶		return ruler;¶	}¶¶	@Override¶	public void setRuler(RulerInterface newRuler) {¶		ruler = newRuler;¶	}¶¶¶	@Override¶	public int getNumberOfPendulum() {¶		return numberOfPendulum;¶	}¶¶	¶	@Override¶	public ImageProtractorInterface getProtractor() {¶		return protractor;¶	}¶¶	@Override¶	public void setProtractor(ImageProtractorInterface newProtractor) {¶		protractor = newProtractor;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setModel();¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@Label("\u25B6")¶	public void pause() {¶		if (enable) {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).stop();¶			}¶			enable = false;¶		}¶		else {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).resume();¶			}¶			enable = true;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@Label("\u25A0")¶	public void reset() {¶		pause();¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setAngle(0);¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@Label("+")¶	public void increaseNumberOfPendulum() {¶		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {¶			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();¶			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, ¶					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);¶	¶			¶			pendulum.add(newPendulum);¶			numberOfPendulum ++;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@Label("-")¶	public void decreaseNumberOfPendulum() {¶		if (numberOfPendulum > 0) {¶			numberOfPendulum --;¶			pendulum.get(numberOfPendulum).getAnimator().interrupt();¶			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));¶			pendulum.remove(numberOfPendulum);¶		}¶	}¶¶	@Override¶	@Row(0)¶	@Column(0)¶	public Planet getPlanet() {¶		return planet;¶	}¶¶	@Override¶	public void setPlanet(Planet newPlanet) {¶		setGravity(newPlanet.getValue());¶		planet = newPlanet;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="804" _type="MoveCaretCommand" caretOffset="2833" date="Thu Feb 25 23:36:02 EST 2021" docOffset="3818" starttimestamp="1614313778745" timestamp="384134" />
  <Command __id="806" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:36:16 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="397455" />
  <Command __id="805" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:36:16 EST 2021" docASTNodeCount="836" docActiveCodeLength="5293" docExpressionCount="576" docLength="5293" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="397291">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeEvent;

import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.barchart.bar.BarPairInterface;
import components.mainpanel.MainPanel;
import components.pendulum.animator.Lock;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import components.timer.Timer;
import components.timer.TimerInterface;
import models.pendulum.PendulumModel;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})
@EditablePropertyNames({"string", "load", "length", "mass", "angle"})
public class ObserverPendulum implements ObserverPendulumInterface{
	
	private int length = PendulumModelFactory.DEFAULT_LENGTH, 
			mass = PendulumModelFactory.DEFAULT_MASS, 
			angle = PendulumModelFactory.DEFAULT_ANGLE;
	private LoadInterface load = new Load();
	private PendulumStringInterface string;
	private PendulumModelInterface model;
	private PendulumAnimatorCommand animator;
	private boolean enable;
	private BarPairInterface barPair;
	private Lock aLock;
	private boolean isHeightUpdate = false, isWidthUpdate = false;
	private int updatedWidth, updatedHeight;
	private TimerInterface timer = new Timer();
	
	
	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {
		enable = isEnable;
		model = newModel;
		string = new PendulumString(model);
		model.addPropertyChangeListener(this);
		aLock = newLock;
		animator = new PendulumAnimatorCommand(model, aLock);
		barPair = newBarPair;
		if (!enable) {
			stop();
		}
		animator.start();
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getSource() == model) {
			if ("height".equals(evt.getPropertyName())) {
				
				updatedHeight = (int) evt.getNewValue();
				
				isHeightUpdate = true;
			}
			else if ("width".equals(evt.getPropertyName())) {
				updatedWidth = (int) evt.getNewValue();
				
				isWidthUpdate = true;
			}
			else if ("timeElapsed".equals(evt.getPropertyName())) {
				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));
			}
			
			if (isHeightUpdate & isWidthUpdate) {
				isHeightUpdate = false;
				isWidthUpdate = false;
				
				string.setHeight(updatedHeight);
				load.setY(string.getY() + updatedHeight - load.getHeight()/2);
				load.setX(string.getX() + updatedWidth - load.getWidth()/2);
				string.setWidth(updatedWidth);
				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);
				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));
				
				
				System.out.println(Thread.currentThread().toString() + "tries to release the lock");
				aLock.releaseLock();
			}
			
		}
		
	}

	@Override
	public PendulumStringInterface getString() {
		return string;
	}

	@Override
	public LoadInterface getLoad() {
		return load;
	}

	@Override
	public void setString(PendulumStringInterface newString) {
		string = newString;
	}

	@Override
	public void setLoad(LoadInterface newLoad) {
		load = newLoad;
	}
	
	@Override
	public void setLength(int l) {
		length = l;
		setModel();
	}

	@Override
	public void setMass(int m) {
		mass = m;
		setModel();
	}
	
	@Override
	public void setAngle(int a) {
		angle = a;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(500)
	@MinValue(10)
	public int getLength() {
		return length;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(50)
	@MinValue(1)
	public int getMass() {
		return mass;
	}
	
	@Override
	public int getAngle() {
		return angle;
	}

	@Override
	@Visible(false)
	public void setModel() {
		PendulumModelInterface oldModel = model;
		model = new PendulumModel(
				PendulumModelFactory.DEFAULT_STRING_X, 
				PendulumModelFactory.DEFAULT_STRING_Y, 
				length, 
				MainPanel.gravity, 
				mass, 
				MainPanel.friction, 
				angle);
		
		model.addPropertyChangeListener(this);
		if (!enable) {
			stop();
		}
		animator.setNewModel(model);
		oldModel.removePropertyChangeListener(this);
	}

	@Override
	public PendulumModelInterface getModel() {
		return model;
	}

	@Override
	public PendulumAnimatorCommand getAnimator() {
		return animator;
	}

	@Override
	public void stop() {
		model.stopTimer();
		enable = false;
	}

	@Override
	public void resume() {
		model.resumeTimer();
		enable = true;
	}

	@Override
	public BarPairInterface getBarPair() {
		return barPair;
	}

	@Override
	public void setBarPair(BarPairInterface newBarPair) {
		barPair = newBarPair;
	}

	@Override
	public TimerInterface getTimer() {
		return timer;
	}


	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="809" _type="Insert" date="Thu Feb 25 23:36:21 EST 2021" docASTNodeCount="832" docActiveCodeLength="5273" docExpressionCount="573" docLength="5296" length="3" offset="3400" repeat="3" starttimestamp="1614313778745" timestamp="403028" timestamp2="403212">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="891" _type="RunCommand" date="Thu Feb 25 23:36:31 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="413200" type="Run" />
  <Command __id="892" _type="ShellCommand" date="Thu Feb 25 23:36:31 EST 2021" starttimestamp="1614313778745" timestamp="413227" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="893" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:36:36 EST 2021" docASTNodeCount="116" docActiveCodeLength="720" docExpressionCount="56" docLength="818" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="417272">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			"), Diff(INSERT,"// System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			// "), Diff(EQUAL,"aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			// System.out.println(Thread.currentThread().toString() + "tries to get lock");
			// aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="894" _type="MoveCaretCommand" caretOffset="419" date="Thu Feb 25 23:36:36 EST 2021" docOffset="419" starttimestamp="1614313778745" timestamp="417367" />
  <Command __id="895" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:36:38 EST 2021" docASTNodeCount="143" docActiveCodeLength="969" docExpressionCount="83" docLength="969" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="419717">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulumInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeListener;

import components.barchart.bar.BarPairInterface;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumStringInterface;
import components.timer.TimerInterface;
import models.pendulum.PendulumModelInterface;

public interface ObserverPendulumInterface extends PropertyChangeListener{
	PendulumStringInterface getString();
	LoadInterface getLoad();
	void setString(PendulumStringInterface newString) ;
	void setLoad(LoadInterface newLoad);
	int getLength();
	void setLength(int l);
	int getMass();
	void setMass(int m);
	int getAngle();
	void setAngle(int a);
	void setModel();
	PendulumModelInterface getModel();
	PendulumAnimatorCommand getAnimator();
	void stop();
	void resume();
	BarPairInterface getBarPair();
	void setBarPair(BarPairInterface newBarPair);
	TimerInterface getTimer();
}
]]></snapshot>
  </Command>
  <Command __id="896" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:36:38 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="419843" />
  <Command __id="898" _type="MoveCaretCommand" caretOffset="2380" date="Thu Feb 25 23:36:40 EST 2021" docOffset="3358" starttimestamp="1614313778745" timestamp="421455" />
  <Command __id="899" _type="MoveCaretCommand" caretOffset="2333" date="Thu Feb 25 23:36:42 EST 2021" docOffset="3311" starttimestamp="1614313778745" timestamp="423274" />
  <Command __id="901" _type="InsertStringCommand" date="Thu Feb 25 23:36:42 EST 2021" starttimestamp="1614313778745" timestamp="423905" timestamp2="423905">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Thu Feb 25 23:36:42 EST 2021" starttimestamp="1614313778745" timestamp="423924" timestamp2="423924">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="904" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:36:42 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="424172" />
  <Command __id="906" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.toggleOverwrite" date="Thu Feb 25 23:36:43 EST 2021" starttimestamp="1614313778745" timestamp="424573" />
  <Command __id="907" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:36:43 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="424896" />
  <Command __id="909" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:36:43 EST 2021" starttimestamp="1614313778745" timestamp="424901" />
  <Command __id="911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:36:43 EST 2021" starttimestamp="1614313778745" timestamp="425209" />
  <Command __id="913" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:36:44 EST 2021" starttimestamp="1614313778745" timestamp="425376" />
  <Command __id="915" _type="InsertStringCommand" date="Thu Feb 25 23:36:44 EST 2021" starttimestamp="1614313778745" timestamp="426189" timestamp2="426189">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="917" _type="InsertStringCommand" date="Thu Feb 25 23:36:45 EST 2021" starttimestamp="1614313778745" timestamp="426322" timestamp2="426322">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="919" _type="InsertStringCommand" date="Thu Feb 25 23:36:45 EST 2021" starttimestamp="1614313778745" timestamp="426510" timestamp2="426510">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="921" _type="UndoCommand" date="Thu Feb 25 23:36:46 EST 2021" starttimestamp="1614313778745" timestamp="427315" />
  <Command __id="897" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:36:40 EST 2021" docASTNodeCount="832" docActiveCodeLength="5273" docExpressionCount="573" docLength="5296" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="421393">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				"), Diff(INSERT,"// "), Diff(EQUAL,"aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeEvent;

import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.barchart.bar.BarPairInterface;
import components.mainpanel.MainPanel;
import components.pendulum.animator.Lock;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import components.timer.Timer;
import components.timer.TimerInterface;
import models.pendulum.PendulumModel;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})
@EditablePropertyNames({"string", "load", "length", "mass", "angle"})
public class ObserverPendulum implements ObserverPendulumInterface{
	
	private int length = PendulumModelFactory.DEFAULT_LENGTH, 
			mass = PendulumModelFactory.DEFAULT_MASS, 
			angle = PendulumModelFactory.DEFAULT_ANGLE;
	private LoadInterface load = new Load();
	private PendulumStringInterface string;
	private PendulumModelInterface model;
	private PendulumAnimatorCommand animator;
	private boolean enable;
	private BarPairInterface barPair;
	private Lock aLock;
	private boolean isHeightUpdate = false, isWidthUpdate = false;
	private int updatedWidth, updatedHeight;
	private TimerInterface timer = new Timer();
	
	
	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {
		enable = isEnable;
		model = newModel;
		string = new PendulumString(model);
		model.addPropertyChangeListener(this);
		aLock = newLock;
		animator = new PendulumAnimatorCommand(model, aLock);
		barPair = newBarPair;
		if (!enable) {
			stop();
		}
		animator.start();
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getSource() == model) {
			if ("height".equals(evt.getPropertyName())) {
				
				updatedHeight = (int) evt.getNewValue();
				
				isHeightUpdate = true;
			}
			else if ("width".equals(evt.getPropertyName())) {
				updatedWidth = (int) evt.getNewValue();
				
				isWidthUpdate = true;
			}
			else if ("timeElapsed".equals(evt.getPropertyName())) {
				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));
			}
			
			if (isHeightUpdate & isWidthUpdate) {
				isHeightUpdate = false;
				isWidthUpdate = false;
				
				string.setHeight(updatedHeight);
				load.setY(string.getY() + updatedHeight - load.getHeight()/2);
				load.setX(string.getX() + updatedWidth - load.getWidth()/2);
				string.setWidth(updatedWidth);
				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);
				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));
				
				
				System.out.println(Thread.currentThread().toString() + "tries to release the lock");
				// aLock.releaseLock();
			}
			
		}
		
	}

	@Override
	public PendulumStringInterface getString() {
		return string;
	}

	@Override
	public LoadInterface getLoad() {
		return load;
	}

	@Override
	public void setString(PendulumStringInterface newString) {
		string = newString;
	}

	@Override
	public void setLoad(LoadInterface newLoad) {
		load = newLoad;
	}
	
	@Override
	public void setLength(int l) {
		length = l;
		setModel();
	}

	@Override
	public void setMass(int m) {
		mass = m;
		setModel();
	}
	
	@Override
	public void setAngle(int a) {
		angle = a;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(500)
	@MinValue(10)
	public int getLength() {
		return length;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(50)
	@MinValue(1)
	public int getMass() {
		return mass;
	}
	
	@Override
	public int getAngle() {
		return angle;
	}

	@Override
	@Visible(false)
	public void setModel() {
		PendulumModelInterface oldModel = model;
		model = new PendulumModel(
				PendulumModelFactory.DEFAULT_STRING_X, 
				PendulumModelFactory.DEFAULT_STRING_Y, 
				length, 
				MainPanel.gravity, 
				mass, 
				MainPanel.friction, 
				angle);
		
		model.addPropertyChangeListener(this);
		if (!enable) {
			stop();
		}
		animator.setNewModel(model);
		oldModel.removePropertyChangeListener(this);
	}

	@Override
	public PendulumModelInterface getModel() {
		return model;
	}

	@Override
	public PendulumAnimatorCommand getAnimator() {
		return animator;
	}

	@Override
	public void stop() {
		model.stopTimer();
		enable = false;
	}

	@Override
	public void resume() {
		model.resumeTimer();
		enable = true;
	}

	@Override
	public BarPairInterface getBarPair() {
		return barPair;
	}

	@Override
	public void setBarPair(BarPairInterface newBarPair) {
		barPair = newBarPair;
	}

	@Override
	public TimerInterface getTimer() {
		return timer;
	}


	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="900" _type="Insert" date="Thu Feb 25 23:36:42 EST 2021" docASTNodeCount="819" docActiveCodeLength="5190" docExpressionCount="561" docLength="5299" length="3" offset="3311" repeat="3" starttimestamp="1614313778745" timestamp="423903" timestamp2="424571">
    <text><![CDATA[.//]]></text>
  </DocumentChange>
  <DocumentChange __id="908" _type="Delete" date="Thu Feb 25 23:36:43 EST 2021" docASTNodeCount="832" docActiveCodeLength="5273" docExpressionCount="573" docLength="5296" endLine="93" length="3" offset="3311" repeat="3" startLine="93" starttimestamp="1614313778745" timestamp="424900" timestamp2="425375">
    <text><![CDATA[.//]]></text>
  </DocumentChange>
  <DocumentChange __id="914" _type="Replace" date="Thu Feb 25 23:36:44 EST 2021" docASTNodeCount="832" docActiveCodeLength="5273" docExpressionCount="573" docLength="5296" endLine="93" insertionLength="1" int_docASTNodeCount="832" int_docActiveCodeLength="5272" int_docExpressionCount="573" int_docLength="5295" length="1" offset="3311" startLine="93" starttimestamp="1614313778745" timestamp="426187">
    <deletedText><![CDATA[S]]></deletedText>
    <insertedText><![CDATA[/]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="916" _type="Replace" date="Thu Feb 25 23:36:45 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5296" endLine="93" insertionLength="1" int_docASTNodeCount="832" int_docActiveCodeLength="5272" int_docExpressionCount="573" int_docLength="5295" length="1" offset="3312" startLine="93" starttimestamp="1614313778745" timestamp="426321">
    <deletedText><![CDATA[y]]></deletedText>
    <insertedText><![CDATA[/]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="918" _type="Replace" date="Thu Feb 25 23:36:45 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5296" endLine="93" insertionLength="1" int_docASTNodeCount="819" int_docActiveCodeLength="5189" int_docExpressionCount="561" int_docLength="5295" length="1" offset="3313" startLine="93" starttimestamp="1614313778745" timestamp="426509">
    <deletedText><![CDATA[s]]></deletedText>
    <insertedText><![CDATA[ ]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="920" _type="Replace" date="Thu Feb 25 23:36:46 EST 2021" docASTNodeCount="832" docActiveCodeLength="5273" docExpressionCount="573" docLength="5296" endLine="93" insertionLength="3" int_docASTNodeCount="832" int_docActiveCodeLength="5270" int_docExpressionCount="573" int_docLength="5293" length="3" offset="3311" startLine="93" starttimestamp="1614313778745" timestamp="427308">
    <deletedText><![CDATA[// ]]></deletedText>
    <insertedText><![CDATA[Sys]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="928" _type="Insert" date="Thu Feb 25 23:36:49 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5299" length="3" offset="3311" repeat="3" starttimestamp="1614313778745" timestamp="430666" timestamp2="431028">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="945" _type="RunCommand" date="Thu Feb 25 23:37:20 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="461873" type="Run" />
  <Command __id="946" _type="RunCommand" date="Thu Feb 25 23:37:20 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="461873" type="Run" />
  <Command __id="947" _type="ShellCommand" date="Thu Feb 25 23:37:20 EST 2021" starttimestamp="1614313778745" timestamp="461882" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="948" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:23 EST 2021" docASTNodeCount="143" docActiveCodeLength="1064" docExpressionCount="95" docLength="1064" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="465014">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/timer/Timer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.timer;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"time"})
@EditablePropertyNames({})
public class Timer implements TimerInterface{
	
	private double time = 0;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	
	@Override
	public void setTime(double newTime) {
		double oldTime = time;
		time = newTime;
		if (time < 0.01) {
			time = 0.00;
		}
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "time", oldTime, time));
	}

	@Override
	public double getTime() {
		return time;
	}
	
	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
}
]]></snapshot>
  </Command>
  <Command __id="949" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:37:23 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="465104" />
  <Command __id="951" _type="MoveCaretCommand" caretOffset="419" date="Thu Feb 25 23:37:34 EST 2021" docOffset="419" starttimestamp="1614313778745" timestamp="475880" />
  <Command __id="950" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:34 EST 2021" docASTNodeCount="116" docActiveCodeLength="720" docExpressionCount="56" docLength="818" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="475783">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			// System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			// aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="954" _type="Delete" date="Thu Feb 25 23:37:36 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" endLine="32" length="3" offset="685" repeat="3" startLine="32" starttimestamp="1614313778745" timestamp="478076" timestamp2="478360">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="963" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:40 EST 2021" docASTNodeCount="143" docActiveCodeLength="969" docExpressionCount="83" docLength="969" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="481924">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulumInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeListener;¶¶import components.barchart.bar.BarPairInterface;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModelInterface;¶¶public interface ObserverPendulumInterface extends PropertyChangeListener{¶	PendulumStringInterface getString();¶	LoadInterface getLoad();¶	void setString(PendulumStringInterface newString) ;¶	void setLoad(LoadInterface newLoad);¶	int getLength();¶	void setLength(int l);¶	int getMass();¶	void setMass(int m);¶	int getAngle();¶	void setAngle(int a);¶	void setModel();¶	PendulumModelInterface getModel();¶	PendulumAnimatorCommand getAnimator();¶	void stop();¶	void resume();¶	BarPairInterface getBarPair();¶	void setBarPair(BarPairInterface newBarPair);¶	TimerInterface getTimer();¶}¶")]]]></diff>
  </Command>
  <Command __id="952" _type="MoveCaretCommand" caretOffset="689" date="Thu Feb 25 23:37:35 EST 2021" docOffset="689" starttimestamp="1614313778745" timestamp="477144" />
  <Command __id="953" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:37:36 EST 2021" starttimestamp="1614313778745" timestamp="477804" />
  <Command __id="955" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:37:36 EST 2021" starttimestamp="1614313778745" timestamp="478079" />
  <Command __id="957" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:37:36 EST 2021" starttimestamp="1614313778745" timestamp="478228" />
  <Command __id="959" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:37:37 EST 2021" starttimestamp="1614313778745" timestamp="478361" />
  <Command __id="960" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:37:37 EST 2021" starttimestamp="1614313778745" timestamp="478724" />
  <Command __id="964" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:37:40 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="481978" />
  <Command __id="966" _type="MoveCaretCommand" caretOffset="1905" date="Thu Feb 25 23:37:42 EST 2021" docOffset="2883" starttimestamp="1614313778745" timestamp="483304" />
  <Command __id="965" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:41 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5299" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="483232">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				"), Diff(INSERT,"// "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				// aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeEvent;

import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.barchart.bar.BarPairInterface;
import components.mainpanel.MainPanel;
import components.pendulum.animator.Lock;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import components.timer.Timer;
import components.timer.TimerInterface;
import models.pendulum.PendulumModel;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})
@EditablePropertyNames({"string", "load", "length", "mass", "angle"})
public class ObserverPendulum implements ObserverPendulumInterface{
	
	private int length = PendulumModelFactory.DEFAULT_LENGTH, 
			mass = PendulumModelFactory.DEFAULT_MASS, 
			angle = PendulumModelFactory.DEFAULT_ANGLE;
	private LoadInterface load = new Load();
	private PendulumStringInterface string;
	private PendulumModelInterface model;
	private PendulumAnimatorCommand animator;
	private boolean enable;
	private BarPairInterface barPair;
	private Lock aLock;
	private boolean isHeightUpdate = false, isWidthUpdate = false;
	private int updatedWidth, updatedHeight;
	private TimerInterface timer = new Timer();
	
	
	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {
		enable = isEnable;
		model = newModel;
		string = new PendulumString(model);
		model.addPropertyChangeListener(this);
		aLock = newLock;
		animator = new PendulumAnimatorCommand(model, aLock);
		barPair = newBarPair;
		if (!enable) {
			stop();
		}
		animator.start();
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getSource() == model) {
			if ("height".equals(evt.getPropertyName())) {
				
				updatedHeight = (int) evt.getNewValue();
				
				isHeightUpdate = true;
			}
			else if ("width".equals(evt.getPropertyName())) {
				updatedWidth = (int) evt.getNewValue();
				
				isWidthUpdate = true;
			}
			else if ("timeElapsed".equals(evt.getPropertyName())) {
				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));
			}
			
			if (isHeightUpdate & isWidthUpdate) {
				isHeightUpdate = false;
				isWidthUpdate = false;
				
				string.setHeight(updatedHeight);
				load.setY(string.getY() + updatedHeight - load.getHeight()/2);
				load.setX(string.getX() + updatedWidth - load.getWidth()/2);
				string.setWidth(updatedWidth);
				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);
				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));
				
				
				// System.out.println(Thread.currentThread().toString() + "tries to release the lock");
				// aLock.releaseLock();
			}
			
		}
		
	}

	@Override
	public PendulumStringInterface getString() {
		return string;
	}

	@Override
	public LoadInterface getLoad() {
		return load;
	}

	@Override
	public void setString(PendulumStringInterface newString) {
		string = newString;
	}

	@Override
	public void setLoad(LoadInterface newLoad) {
		load = newLoad;
	}
	
	@Override
	public void setLength(int l) {
		length = l;
		setModel();
	}

	@Override
	public void setMass(int m) {
		mass = m;
		setModel();
	}
	
	@Override
	public void setAngle(int a) {
		angle = a;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(500)
	@MinValue(10)
	public int getLength() {
		return length;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(50)
	@MinValue(1)
	public int getMass() {
		return mass;
	}
	
	@Override
	public int getAngle() {
		return angle;
	}

	@Override
	@Visible(false)
	public void setModel() {
		PendulumModelInterface oldModel = model;
		model = new PendulumModel(
				PendulumModelFactory.DEFAULT_STRING_X, 
				PendulumModelFactory.DEFAULT_STRING_Y, 
				length, 
				MainPanel.gravity, 
				mass, 
				MainPanel.friction, 
				angle);
		
		model.addPropertyChangeListener(this);
		if (!enable) {
			stop();
		}
		animator.setNewModel(model);
		oldModel.removePropertyChangeListener(this);
	}

	@Override
	public PendulumModelInterface getModel() {
		return model;
	}

	@Override
	public PendulumAnimatorCommand getAnimator() {
		return animator;
	}

	@Override
	public void stop() {
		model.stopTimer();
		enable = false;
	}

	@Override
	public void resume() {
		model.resumeTimer();
		enable = true;
	}

	@Override
	public BarPairInterface getBarPair() {
		return barPair;
	}

	@Override
	public void setBarPair(BarPairInterface newBarPair) {
		barPair = newBarPair;
	}

	@Override
	public TimerInterface getTimer() {
		return timer;
	}


	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="968" _type="Delete" date="Thu Feb 25 23:37:43 EST 2021" docASTNodeCount="823" docActiveCodeLength="5209" docExpressionCount="564" docLength="5296" endLine="94" length="3" offset="3403" repeat="3" startLine="94" starttimestamp="1614313778745" timestamp="484805" timestamp2="485119">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="985" _type="RunCommand" date="Thu Feb 25 23:37:50 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="491543" type="Run" />
  <Command __id="986" _type="RunCommand" date="Thu Feb 25 23:37:50 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="491544" type="Run" />
  <Command __id="987" _type="ShellCommand" date="Thu Feb 25 23:37:50 EST 2021" starttimestamp="1614313778745" timestamp="491576" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="988" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:53 EST 2021" docASTNodeCount="143" docActiveCodeLength="969" docExpressionCount="83" docLength="969" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="495002">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulumInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeListener;¶¶import components.barchart.bar.BarPairInterface;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModelInterface;¶¶public interface ObserverPendulumInterface extends PropertyChangeListener{¶	PendulumStringInterface getString();¶	LoadInterface getLoad();¶	void setString(PendulumStringInterface newString) ;¶	void setLoad(LoadInterface newLoad);¶	int getLength();¶	void setLength(int l);¶	int getMass();¶	void setMass(int m);¶	int getAngle();¶	void setAngle(int a);¶	void setModel();¶	PendulumModelInterface getModel();¶	PendulumAnimatorCommand getAnimator();¶	void stop();¶	void resume();¶	BarPairInterface getBarPair();¶	void setBarPair(BarPairInterface newBarPair);¶	TimerInterface getTimer();¶}¶")]]]></diff>
  </Command>
  <Command __id="989" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:37:53 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="495054" />
  <Command __id="990" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:55 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="734" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="496893">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶public class Lock {¶	¶	private boolean lock = false;¶	¶	public synchronized void getLock() {¶		while (lock) {¶			// System.out.println(Thread.currentThread().toString() + "begins waiting");¶			try {¶				wait();¶				// System.out.println(Thread.currentThread().toString() + "ends waiting");¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		¶		lock = true;¶		// System.out.println(Thread.currentThread().toString() + "gets the lock");¶	}¶	¶	public synchronized void releaseLock() {¶		// System.out.println(Thread.currentThread().toString() + "notifies");¶		notify();¶		lock = false;¶		// System.out.println(Thread.currentThread().toString() + "releases the lock");¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="991" _type="MoveCaretCommand" caretOffset="499" date="Thu Feb 25 23:37:55 EST 2021" docOffset="499" starttimestamp="1614313778745" timestamp="496989" />
  <Command __id="992" _type="MoveCaretCommand" caretOffset="644" date="Thu Feb 25 23:37:56 EST 2021" docOffset="644" starttimestamp="1614313778745" timestamp="497804" />
  <Command __id="993" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:37:57 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="498908">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			// System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			"), Diff(DELETE,"// "), Diff(EQUAL,"aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			// System.out.println(Thread.currentThread().toString() + "tries to get lock");
			aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="994" _type="MoveCaretCommand" caretOffset="685" date="Thu Feb 25 23:37:57 EST 2021" docOffset="685" starttimestamp="1614313778745" timestamp="499006" />
  <Command __id="995" _type="MoveCaretCommand" caretOffset="556" date="Thu Feb 25 23:37:58 EST 2021" docOffset="556" starttimestamp="1614313778745" timestamp="499370" />
  <Command __id="996" _type="MoveCaretCommand" caretOffset="621" date="Thu Feb 25 23:37:58 EST 2021" docOffset="621" starttimestamp="1614313778745" timestamp="499703" />
  <Command __id="997" _type="MoveCaretCommand" caretOffset="735" date="Thu Feb 25 23:37:58 EST 2021" docOffset="735" starttimestamp="1614313778745" timestamp="500037" />
  <Command __id="998" _type="MoveCaretCommand" caretOffset="598" date="Thu Feb 25 23:37:59 EST 2021" docOffset="598" starttimestamp="1614313778745" timestamp="500364" />
  <Command __id="999" _type="MoveCaretCommand" caretOffset="620" date="Thu Feb 25 23:37:59 EST 2021" docOffset="620" starttimestamp="1614313778745" timestamp="500624" />
  <Command __id="1000" _type="MoveCaretCommand" caretOffset="598" date="Thu Feb 25 23:37:59 EST 2021" docOffset="598" starttimestamp="1614313778745" timestamp="501139" />
  <Command __id="1002" _type="UndoCommand" date="Thu Feb 25 23:38:02 EST 2021" starttimestamp="1614313778745" timestamp="503738" />
  <DocumentChange __id="1001" _type="Insert" date="Thu Feb 25 23:38:02 EST 2021" docASTNodeCount="116" docActiveCodeLength="720" docExpressionCount="56" docLength="818" length="3" offset="685" starttimestamp="1614313778745" timestamp="503734">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="1003" _type="MoveCaretCommand" caretOffset="701" date="Thu Feb 25 23:38:05 EST 2021" docOffset="701" starttimestamp="1614313778745" timestamp="507137" />
  <Command __id="1004" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:38:06 EST 2021" starttimestamp="1614313778745" timestamp="507418" />
  <Command __id="1007" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:38:07 EST 2021" docASTNodeCount="143" docActiveCodeLength="969" docExpressionCount="83" docLength="969" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="508674">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulumInterface.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeListener;¶¶import components.barchart.bar.BarPairInterface;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModelInterface;¶¶public interface ObserverPendulumInterface extends PropertyChangeListener{¶	PendulumStringInterface getString();¶	LoadInterface getLoad();¶	void setString(PendulumStringInterface newString) ;¶	void setLoad(LoadInterface newLoad);¶	int getLength();¶	void setLength(int l);¶	int getMass();¶	void setMass(int m);¶	int getAngle();¶	void setAngle(int a);¶	void setModel();¶	PendulumModelInterface getModel();¶	PendulumAnimatorCommand getAnimator();¶	void stop();¶	void resume();¶	BarPairInterface getBarPair();¶	void setBarPair(BarPairInterface newBarPair);¶	TimerInterface getTimer();¶}¶")]]]></diff>
  </Command>
  <Command __id="1008" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:38:07 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="508711" />
  <Command __id="1009" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:38:08 EST 2021" docASTNodeCount="823" docActiveCodeLength="5209" docExpressionCount="564" docLength="5296" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="509908">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				// System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				"), Diff(DELETE,"// "), Diff(EQUAL,"aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeEvent;

import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.barchart.bar.BarPairInterface;
import components.mainpanel.MainPanel;
import components.pendulum.animator.Lock;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import components.timer.Timer;
import components.timer.TimerInterface;
import models.pendulum.PendulumModel;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})
@EditablePropertyNames({"string", "load", "length", "mass", "angle"})
public class ObserverPendulum implements ObserverPendulumInterface{
	
	private int length = PendulumModelFactory.DEFAULT_LENGTH, 
			mass = PendulumModelFactory.DEFAULT_MASS, 
			angle = PendulumModelFactory.DEFAULT_ANGLE;
	private LoadInterface load = new Load();
	private PendulumStringInterface string;
	private PendulumModelInterface model;
	private PendulumAnimatorCommand animator;
	private boolean enable;
	private BarPairInterface barPair;
	private Lock aLock;
	private boolean isHeightUpdate = false, isWidthUpdate = false;
	private int updatedWidth, updatedHeight;
	private TimerInterface timer = new Timer();
	
	
	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {
		enable = isEnable;
		model = newModel;
		string = new PendulumString(model);
		model.addPropertyChangeListener(this);
		aLock = newLock;
		animator = new PendulumAnimatorCommand(model, aLock);
		barPair = newBarPair;
		if (!enable) {
			stop();
		}
		animator.start();
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getSource() == model) {
			if ("height".equals(evt.getPropertyName())) {
				
				updatedHeight = (int) evt.getNewValue();
				
				isHeightUpdate = true;
			}
			else if ("width".equals(evt.getPropertyName())) {
				updatedWidth = (int) evt.getNewValue();
				
				isWidthUpdate = true;
			}
			else if ("timeElapsed".equals(evt.getPropertyName())) {
				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));
			}
			
			if (isHeightUpdate & isWidthUpdate) {
				isHeightUpdate = false;
				isWidthUpdate = false;
				
				string.setHeight(updatedHeight);
				load.setY(string.getY() + updatedHeight - load.getHeight()/2);
				load.setX(string.getX() + updatedWidth - load.getWidth()/2);
				string.setWidth(updatedWidth);
				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);
				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));
				
				
				// System.out.println(Thread.currentThread().toString() + "tries to release the lock");
				aLock.releaseLock();
			}
			
		}
		
	}

	@Override
	public PendulumStringInterface getString() {
		return string;
	}

	@Override
	public LoadInterface getLoad() {
		return load;
	}

	@Override
	public void setString(PendulumStringInterface newString) {
		string = newString;
	}

	@Override
	public void setLoad(LoadInterface newLoad) {
		load = newLoad;
	}
	
	@Override
	public void setLength(int l) {
		length = l;
		setModel();
	}

	@Override
	public void setMass(int m) {
		mass = m;
		setModel();
	}
	
	@Override
	public void setAngle(int a) {
		angle = a;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(500)
	@MinValue(10)
	public int getLength() {
		return length;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(50)
	@MinValue(1)
	public int getMass() {
		return mass;
	}
	
	@Override
	public int getAngle() {
		return angle;
	}

	@Override
	@Visible(false)
	public void setModel() {
		PendulumModelInterface oldModel = model;
		model = new PendulumModel(
				PendulumModelFactory.DEFAULT_STRING_X, 
				PendulumModelFactory.DEFAULT_STRING_Y, 
				length, 
				MainPanel.gravity, 
				mass, 
				MainPanel.friction, 
				angle);
		
		model.addPropertyChangeListener(this);
		if (!enable) {
			stop();
		}
		animator.setNewModel(model);
		oldModel.removePropertyChangeListener(this);
	}

	@Override
	public PendulumModelInterface getModel() {
		return model;
	}

	@Override
	public PendulumAnimatorCommand getAnimator() {
		return animator;
	}

	@Override
	public void stop() {
		model.stopTimer();
		enable = false;
	}

	@Override
	public void resume() {
		model.resumeTimer();
		enable = true;
	}

	@Override
	public BarPairInterface getBarPair() {
		return barPair;
	}

	@Override
	public void setBarPair(BarPairInterface newBarPair) {
		barPair = newBarPair;
	}

	@Override
	public TimerInterface getTimer() {
		return timer;
	}


	
}
]]></snapshot>
  </Command>
  <Command __id="1010" _type="MoveCaretCommand" caretOffset="1809" date="Thu Feb 25 23:38:08 EST 2021" docOffset="2787" starttimestamp="1614313778745" timestamp="509970" />
  <Command __id="1011" _type="MoveCaretCommand" caretOffset="1964" date="Thu Feb 25 23:38:09 EST 2021" docOffset="2942" starttimestamp="1614313778745" timestamp="510687" />
  <Command __id="1012" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:38:11 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="734" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="512312">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶public class Lock {¶	¶	private boolean lock = false;¶	¶	public synchronized void getLock() {¶		while (lock) {¶			// System.out.println(Thread.currentThread().toString() + "begins waiting");¶			try {¶				wait();¶				// System.out.println(Thread.currentThread().toString() + "ends waiting");¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		¶		lock = true;¶		// System.out.println(Thread.currentThread().toString() + "gets the lock");¶	}¶	¶	public synchronized void releaseLock() {¶		// System.out.println(Thread.currentThread().toString() + "notifies");¶		notify();¶		lock = false;¶		// System.out.println(Thread.currentThread().toString() + "releases the lock");¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="1013" _type="MoveCaretCommand" caretOffset="644" date="Thu Feb 25 23:38:11 EST 2021" docOffset="644" starttimestamp="1614313778745" timestamp="512371" />
  <Command __id="1015" _type="MoveCaretCommand" caretOffset="1964" date="Thu Feb 25 23:38:13 EST 2021" docOffset="2942" starttimestamp="1614313778745" timestamp="514533" />
  <Command __id="1014" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:38:13 EST 2021" docASTNodeCount="823" docActiveCodeLength="5209" docExpressionCount="564" docLength="5296" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="514432">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				// System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1017" _type="Delete" date="Thu Feb 25 23:38:14 EST 2021" docASTNodeCount="836" docActiveCodeLength="5293" docExpressionCount="576" docLength="5293" endLine="93" length="3" offset="3311" repeat="3" startLine="93" starttimestamp="1614313778745" timestamp="516186" timestamp2="516500">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="1016" _type="MoveCaretCommand" caretOffset="2336" date="Thu Feb 25 23:38:14 EST 2021" docOffset="3314" starttimestamp="1614313778745" timestamp="515685" />
  <Command __id="1018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:38:14 EST 2021" starttimestamp="1614313778745" timestamp="516189" />
  <Command __id="1020" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:38:15 EST 2021" starttimestamp="1614313778745" timestamp="516358" />
  <Command __id="1022" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:38:15 EST 2021" starttimestamp="1614313778745" timestamp="516501" />
  <Command __id="1023" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:38:15 EST 2021" starttimestamp="1614313778745" timestamp="516764" />
  <Command __id="1027" _type="MoveCaretCommand" caretOffset="701" date="Thu Feb 25 23:38:17 EST 2021" docOffset="701" starttimestamp="1614313778745" timestamp="518845" />
  <Command __id="1026" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:38:17 EST 2021" docASTNodeCount="116" docActiveCodeLength="720" docExpressionCount="56" docLength="818" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="518797">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			// System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			"), Diff(INSERT,"// "), Diff(EQUAL,"aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			// System.out.println(Thread.currentThread().toString() + "tries to get lock");
			// aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="1029" _type="Delete" date="Thu Feb 25 23:38:19 EST 2021" docASTNodeCount="120" docActiveCodeLength="736" docExpressionCount="59" docLength="815" endLine="32" length="3" offset="685" repeat="3" startLine="32" starttimestamp="1614313778745" timestamp="520746" timestamp2="521083">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <DocumentChange __id="1036" _type="Delete" date="Thu Feb 25 23:38:20 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" endLine="31" length="3" offset="602" repeat="3" startLine="31" starttimestamp="1614313778745" timestamp="521862" timestamp2="522172">
    <text><![CDATA[// ]]></text>
  </DocumentChange>
  <Command __id="1599" _type="ConsoleOutput" date="Thu Feb 25 23:39:19 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="580982" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-3,6,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1600" _type="ConsoleOutput" date="Thu Feb 25 23:39:19 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="581085" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-"), Diff(DELETE,"3,6"), Diff(INSERT,"0,5"), Diff(EQUAL,",main]tries to "), Diff(DELETE,"get"), Diff(INSERT,"release the"), Diff(EQUAL," lock¶Thread[Thread-"), Diff(DELETE,"0,5"), Diff(INSERT,"3,6"), Diff(EQUAL,",main]tries to "), Diff(DELETE,"release the"), Diff(INSERT,"get"), Diff(EQUAL," lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1601" _type="ConsoleOutput" date="Thu Feb 25 23:39:19 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="581184" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1602" _type="ConsoleOutput" date="Thu Feb 25 23:39:20 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="581286" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-"), Diff(DELETE,"0,5"), Diff(INSERT,"3,6"), Diff(EQUAL,",main]tries to "), Diff(DELETE,"release the"), Diff(INSERT,"get"), Diff(EQUAL," lock¶Thread[Thread-"), Diff(DELETE,"3,6"), Diff(INSERT,"0,5"), Diff(EQUAL,",main]tries to "), Diff(DELETE,"get"), Diff(INSERT,"release the"), Diff(EQUAL," lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1603" _type="ConsoleOutput" date="Thu Feb 25 23:39:20 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="581436" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-3,6,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1604" _type="ConsoleOutput" date="Thu Feb 25 23:39:20 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="581488" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-3,6,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1605" _type="ConsoleOutput" date="Thu Feb 25 23:39:20 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="581590" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
Thread[Thread-3,6,main]tries to get lock
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶Thread[Thread-3,6,main]tries to get lock¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="1606" _type="RunCommand" date="Thu Feb 25 23:39:20 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="581721" type="Run" />
  <Command __id="1607" _type="RunCommand" date="Thu Feb 25 23:39:20 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="581722" type="Run" />
  <Command __id="1608" _type="ShellCommand" date="Thu Feb 25 23:39:20 EST 2021" starttimestamp="1614313778745" timestamp="581742" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1610" _type="MoveCaretCommand" caretOffset="1015" date="Thu Feb 25 23:39:24 EST 2021" docOffset="1116" starttimestamp="1614313778745" timestamp="585317" />
  <Command __id="1611" _type="ShellCommand" date="Thu Feb 25 23:40:23 EST 2021" starttimestamp="1614313778745" timestamp="645051" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1612" _type="ShellCommand" date="Thu Feb 25 23:43:19 EST 2021" starttimestamp="1614313778745" timestamp="820325" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1613" _type="MoveCaretCommand" caretOffset="1628" date="Thu Feb 25 23:43:19 EST 2021" docOffset="1729" starttimestamp="1614313778745" timestamp="820402" />
  <Command __id="1615" _type="InsertStringCommand" date="Thu Feb 25 23:43:19 EST 2021" starttimestamp="1614313778745" timestamp="821116" timestamp2="821116">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1617" _type="InsertStringCommand" date="Thu Feb 25 23:43:20 EST 2021" starttimestamp="1614313778745" timestamp="821862" timestamp2="821862">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1619" _type="InsertStringCommand" date="Thu Feb 25 23:43:21 EST 2021" starttimestamp="1614313778745" timestamp="822670" timestamp2="822670">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1621" _type="InsertStringCommand" date="Thu Feb 25 23:43:21 EST 2021" starttimestamp="1614313778745" timestamp="822837" timestamp2="822837">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1623" _type="InsertStringCommand" date="Thu Feb 25 23:43:21 EST 2021" starttimestamp="1614313778745" timestamp="822905" timestamp2="822905">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1625" _type="InsertStringCommand" date="Thu Feb 25 23:43:21 EST 2021" starttimestamp="1614313778745" timestamp="823055" timestamp2="823055">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1627" _type="InsertStringCommand" date="Thu Feb 25 23:43:21 EST 2021" starttimestamp="1614313778745" timestamp="823102" timestamp2="823102">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1629" _type="InsertStringCommand" date="Thu Feb 25 23:43:22 EST 2021" starttimestamp="1614313778745" timestamp="823332" timestamp2="823332">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1631" _type="InsertStringCommand" date="Thu Feb 25 23:43:22 EST 2021" starttimestamp="1614313778745" timestamp="823965" timestamp2="823965">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1632" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:43:22 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="823966" />
  <Command __id="1650" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:43:27 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="828880" />
  <Command __id="1652" _type="InsertStringCommand" date="Thu Feb 25 23:43:27 EST 2021" starttimestamp="1614313778745" timestamp="828888" timestamp2="828888">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1654" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:28 EST 2021" starttimestamp="1614313778745" timestamp="829536" />
  <Command __id="1656" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:28 EST 2021" starttimestamp="1614313778745" timestamp="829697" />
  <Command __id="1658" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:28 EST 2021" starttimestamp="1614313778745" timestamp="830164" />
  <Command __id="1660" _type="InsertStringCommand" date="Thu Feb 25 23:43:29 EST 2021" starttimestamp="1614313778745" timestamp="830479" timestamp2="830479">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1662" _type="InsertStringCommand" date="Thu Feb 25 23:43:29 EST 2021" starttimestamp="1614313778745" timestamp="830822" timestamp2="830822">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1664" _type="InsertStringCommand" date="Thu Feb 25 23:43:29 EST 2021" starttimestamp="1614313778745" timestamp="831252" timestamp2="831252">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1666" _type="InsertStringCommand" date="Thu Feb 25 23:43:30 EST 2021" starttimestamp="1614313778745" timestamp="831421" timestamp2="831421">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1668" _type="InsertStringCommand" date="Thu Feb 25 23:43:30 EST 2021" starttimestamp="1614313778745" timestamp="831470" timestamp2="831470">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1670" _type="InsertStringCommand" date="Thu Feb 25 23:43:30 EST 2021" starttimestamp="1614313778745" timestamp="831625" timestamp2="831625">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1672" _type="InsertStringCommand" date="Thu Feb 25 23:43:30 EST 2021" starttimestamp="1614313778745" timestamp="831685" timestamp2="831685">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1674" _type="InsertStringCommand" date="Thu Feb 25 23:43:30 EST 2021" starttimestamp="1614313778745" timestamp="831885" timestamp2="831885">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1676" _type="InsertStringCommand" date="Thu Feb 25 23:43:31 EST 2021" starttimestamp="1614313778745" timestamp="832491" timestamp2="832491">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1677" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:43:31 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="832492" />
  <Command __id="1681" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:43:32 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="833411" />
  <Command __id="1683" _type="InsertStringCommand" date="Thu Feb 25 23:43:32 EST 2021" starttimestamp="1614313778745" timestamp="833418" timestamp2="833418">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1684" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:43:32 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="833424" />
  <Command __id="1686" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:43:32 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="833626" />
  <Command __id="1688" _type="InsertStringCommand" date="Thu Feb 25 23:43:32 EST 2021" starttimestamp="1614313778745" timestamp="833922" timestamp2="833922">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1690" _type="InsertStringCommand" date="Thu Feb 25 23:43:32 EST 2021" starttimestamp="1614313778745" timestamp="834048" timestamp2="834048">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1692" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:33 EST 2021" starttimestamp="1614313778745" timestamp="834540" />
  <Command __id="1694" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:33 EST 2021" starttimestamp="1614313778745" timestamp="834712" />
  <Command __id="1695" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:43:34 EST 2021" starttimestamp="1614313778745" timestamp="835351" />
  <Command __id="1609" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:39:23 EST 2021" docASTNodeCount="592" docActiveCodeLength="3573" docExpressionCount="363" docLength="3672" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="585216">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		angle = a * Math.PI/180;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="1614" _type="Insert" date="Thu Feb 25 23:43:19 EST 2021" docASTNodeCount="596" docActiveCodeLength="3589" docExpressionCount="366" docLength="3688" length="16" offset="1729" repeat="12" starttimestamp="1614313778745" timestamp="821114" timestamp2="825044">
    <text><![CDATA[
		
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="1636" _type="Delete" date="Thu Feb 25 23:43:24 EST 2021" docASTNodeCount="592" docActiveCodeLength="3575" docExpressionCount="363" docLength="3674" endLine="55" length="14" offset="1731" repeat="14" startLine="54" starttimestamp="1614313778745" timestamp="825407" timestamp2="826942">
    <text><![CDATA[	
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="1651" _type="Insert" date="Thu Feb 25 23:43:27 EST 2021" docASTNodeCount="594" docActiveCodeLength="3576" docExpressionCount="364" docLength="3675" length="1" offset="1731" starttimestamp="1614313778745" timestamp="828886">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <DocumentChange __id="1653" _type="Delete" date="Thu Feb 25 23:43:28 EST 2021" docASTNodeCount="592" docActiveCodeLength="3573" docExpressionCount="363" docLength="3672" endLine="54" length="3" offset="1729" repeat="3" startLine="53" starttimestamp="1614313778745" timestamp="829536" timestamp2="830162">
    <text><![CDATA[
	h]]></text>
  </DocumentChange>
  <DocumentChange __id="1659" _type="Insert" date="Thu Feb 25 23:43:29 EST 2021" docASTNodeCount="596" docActiveCodeLength="3589" docExpressionCount="366" docLength="3688" length="16" offset="1729" repeat="12" starttimestamp="1614313778745" timestamp="830477" timestamp2="833026">
    <text><![CDATA[
		
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="1682" _type="Replace" date="Thu Feb 25 23:43:32 EST 2021" docASTNodeCount="595" docActiveCodeLength="3590" docExpressionCount="368" docLength="3689" endLine="55" insertionLength="4" int_docASTNodeCount="593" int_docActiveCodeLength="3586" int_docExpressionCount="366" int_docLength="3685" length="3" offset="1742" startLine="55" starttimestamp="1614313778745" timestamp="833413">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1685" _type="Insert" date="Thu Feb 25 23:43:32 EST 2021" docASTNodeCount="602" docActiveCodeLength="3594" docExpressionCount="371" docLength="3693" length="4" offset="1746" repeat="3" starttimestamp="1614313778745" timestamp="833600" timestamp2="834048">
    <text><![CDATA[[ro]]]></text>
  </DocumentChange>
  <DocumentChange __id="1691" _type="Delete" date="Thu Feb 25 23:43:33 EST 2021" docASTNodeCount="595" docActiveCodeLength="3590" docExpressionCount="368" docLength="3689" endLine="55" length="4" offset="1746" repeat="4" startLine="55" starttimestamp="1614313778745" timestamp="834538" timestamp2="836216">
    <text><![CDATA[[ro]]]></text>
  </DocumentChange>
  <Command __id="1697" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:34 EST 2021" starttimestamp="1614313778745" timestamp="835691" />
  <Command __id="1699" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:34 EST 2021" starttimestamp="1614313778745" timestamp="836217" />
  <Command __id="1701" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:38 EST 2021" starttimestamp="1614313778745" timestamp="839919" />
  <Command __id="1703" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:38 EST 2021" starttimestamp="1614313778745" timestamp="840169" />
  <Command __id="1705" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:38 EST 2021" starttimestamp="1614313778745" timestamp="840218" />
  <Command __id="1707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840270" />
  <Command __id="1709" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840320" />
  <Command __id="1711" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840370" />
  <Command __id="1713" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840421" />
  <Command __id="1715" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840471" />
  <Command __id="1717" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840521" />
  <Command __id="1719" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="840785" />
  <Command __id="1721" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:39 EST 2021" starttimestamp="1614313778745" timestamp="841041" />
  <Command __id="1723" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:43:40 EST 2021" starttimestamp="1614313778745" timestamp="841310" />
  <Command __id="1724" _type="MoveCaretCommand" caretOffset="1752" date="Thu Feb 25 23:44:12 EST 2021" docOffset="1853" starttimestamp="1614313778745" timestamp="873273" />
  <Command __id="1726" _type="InsertStringCommand" date="Thu Feb 25 23:44:12 EST 2021" starttimestamp="1614313778745" timestamp="874112" timestamp2="874112">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1728" _type="InsertStringCommand" date="Thu Feb 25 23:44:13 EST 2021" starttimestamp="1614313778745" timestamp="874262" timestamp2="874262">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1729" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:44:17 EST 2021" starttimestamp="1614313778745" timestamp="878993" />
  <Command __id="1730" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:44:17 EST 2021" starttimestamp="1614313778745" timestamp="879152" />
  <Command __id="1731" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:44:18 EST 2021" starttimestamp="1614313778745" timestamp="879305" />
  <Command __id="1732" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:44:18 EST 2021" starttimestamp="1614313778745" timestamp="879748" />
  <Command __id="1733" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:44:18 EST 2021" starttimestamp="1614313778745" timestamp="879938" />
  <Command __id="1735" _type="InsertStringCommand" date="Thu Feb 25 23:44:19 EST 2021" starttimestamp="1614313778745" timestamp="880939" timestamp2="880939">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1737" _type="InsertStringCommand" date="Thu Feb 25 23:44:20 EST 2021" starttimestamp="1614313778745" timestamp="881630" timestamp2="881630">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1739" _type="InsertStringCommand" date="Thu Feb 25 23:44:20 EST 2021" starttimestamp="1614313778745" timestamp="881787" timestamp2="881787">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1741" _type="InsertStringCommand" date="Thu Feb 25 23:44:20 EST 2021" starttimestamp="1614313778745" timestamp="881928" timestamp2="881928">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1743" _type="InsertStringCommand" date="Thu Feb 25 23:44:20 EST 2021" starttimestamp="1614313778745" timestamp="882095" timestamp2="882095">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1745" _type="InsertStringCommand" date="Thu Feb 25 23:44:20 EST 2021" starttimestamp="1614313778745" timestamp="882181" timestamp2="882181">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:44:21 EST 2021" starttimestamp="1614313778745" timestamp="882589" />
  <Command __id="1749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:44:21 EST 2021" starttimestamp="1614313778745" timestamp="882732" />
  <Command __id="1751" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:44:21 EST 2021" starttimestamp="1614313778745" timestamp="882880" />
  <Command __id="1753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:44:21 EST 2021" starttimestamp="1614313778745" timestamp="883042" />
  <Command __id="1755" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:44:21 EST 2021" starttimestamp="1614313778745" timestamp="883194" />
  <Command __id="1757" _type="InsertStringCommand" date="Thu Feb 25 23:44:22 EST 2021" starttimestamp="1614313778745" timestamp="883565" timestamp2="883565">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1759" _type="InsertStringCommand" date="Thu Feb 25 23:44:22 EST 2021" starttimestamp="1614313778745" timestamp="883915" timestamp2="883915">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1761" _type="InsertStringCommand" date="Thu Feb 25 23:44:22 EST 2021" starttimestamp="1614313778745" timestamp="884008" timestamp2="884008">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1763" _type="InsertStringCommand" date="Thu Feb 25 23:44:22 EST 2021" starttimestamp="1614313778745" timestamp="884156" timestamp2="884156">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1765" _type="InsertStringCommand" date="Thu Feb 25 23:44:22 EST 2021" starttimestamp="1614313778745" timestamp="884248" timestamp2="884248">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1767" _type="InsertStringCommand" date="Thu Feb 25 23:44:23 EST 2021" starttimestamp="1614313778745" timestamp="884422" timestamp2="884422">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1769" _type="InsertStringCommand" date="Thu Feb 25 23:44:23 EST 2021" starttimestamp="1614313778745" timestamp="884999" timestamp2="884999">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1770" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:44:23 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="885003" />
  <DocumentChange __id="1700" _type="Delete" date="Thu Feb 25 23:43:38 EST 2021" docASTNodeCount="592" docActiveCodeLength="3578" docExpressionCount="363" docLength="3677" endLine="55" length="12" offset="1734" repeat="12" startLine="55" starttimestamp="1614313778745" timestamp="839918" timestamp2="841309">
    <text><![CDATA[	System.out.]]></text>
  </DocumentChange>
  <DocumentChange __id="1725" _type="Insert" date="Thu Feb 25 23:44:12 EST 2021" docASTNodeCount="592" docActiveCodeLength="3584" docExpressionCount="363" docLength="3683" length="6" offset="1853" repeat="2" starttimestamp="1614313778745" timestamp="874110" timestamp2="874260">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1734" _type="Insert" date="Thu Feb 25 23:44:19 EST 2021" docASTNodeCount="595" docActiveCodeLength="3592" docExpressionCount="364" docLength="3691" length="8" offset="1856" repeat="6" starttimestamp="1614313778745" timestamp="880937" timestamp2="882180">
    <text><![CDATA[
		print]]></text>
  </DocumentChange>
  <DocumentChange __id="1746" _type="Delete" date="Thu Feb 25 23:44:21 EST 2021" docASTNodeCount="592" docActiveCodeLength="3587" docExpressionCount="363" docLength="3686" endLine="59" length="5" offset="1859" repeat="5" startLine="59" starttimestamp="1614313778745" timestamp="882587" timestamp2="883193">
    <text><![CDATA[print]]></text>
  </DocumentChange>
  <DocumentChange __id="1756" _type="Insert" date="Thu Feb 25 23:44:22 EST 2021" docASTNodeCount="597" docActiveCodeLength="3597" docExpressionCount="366" docLength="3696" length="10" offset="1859" repeat="10" starttimestamp="1614313778745" timestamp="883564" timestamp2="885500">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="1775" _type="Replace" date="Thu Feb 25 23:44:24 EST 2021" docASTNodeCount="595" docActiveCodeLength="3598" docExpressionCount="366" docLength="3697" endLine="59" insertionLength="4" int_docASTNodeCount="593" int_docActiveCodeLength="3594" int_docExpressionCount="364" int_docLength="3693" length="3" offset="1866" startLine="59" starttimestamp="1614313778745" timestamp="885912">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1778" _type="Insert" date="Thu Feb 25 23:44:24 EST 2021" docASTNodeCount="599" docActiveCodeLength="3612" docExpressionCount="369" docLength="3711" length="14" offset="1870" repeat="13" starttimestamp="1614313778745" timestamp="886054" timestamp2="889696">
    <text><![CDATA[println(mass);]]></text>
  </DocumentChange>
  <Command __id="2113" _type="ConsoleOutput" date="Thu Feb 25 23:45:03 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="924851" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶"), Diff(DELETE,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2114" _type="ConsoleOutput" date="Thu Feb 25 23:45:03 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="924906" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2115" _type="ConsoleOutput" date="Thu Feb 25 23:45:03 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925007" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2116" _type="ConsoleOutput" date="Thu Feb 25 23:45:03 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925108" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2117" _type="ConsoleOutput" date="Thu Feb 25 23:45:03 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925208" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2118" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925309" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2119" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925410" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2120" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925511" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2121" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925612" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2122" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925712" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2123" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925862" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2124" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="925964" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2125" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="926065" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2126" _type="ConsoleOutput" date="Thu Feb 25 23:45:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="926166" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2127" _type="ConsoleOutput" date="Thu Feb 25 23:45:05 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="926266" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2128" _type="ConsoleOutput" date="Thu Feb 25 23:45:05 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="926318" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2129" _type="ShellCommand" date="Thu Feb 25 23:45:05 EST 2021" starttimestamp="1614313778745" timestamp="926404" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2130" _type="ConsoleOutput" date="Thu Feb 25 23:45:05 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="926477" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
Thread[Thread-3,6,main]tries to get lock
10.0
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
10.0
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶Thread[Thread-3,6,main]tries to get lock¶10.0¶Thread[Thread-3,6,main]tries to release the lock¶"), Diff(INSERT,"Thread[Thread-0,5,main]tries to get lock¶10.0¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2131" _type="RunCommand" date="Thu Feb 25 23:45:05 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="926658" type="Run" />
  <Command __id="2132" _type="RunCommand" date="Thu Feb 25 23:45:05 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="926658" type="Run" />
  <Command __id="2133" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:45:17 EST 2021" docASTNodeCount="126" docActiveCodeLength="718" docExpressionCount="94" docLength="718" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="938915">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/main/TestFrame.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import components.mainpanel.MainPanel;¶import components.mainpanel.MainPanelInterface;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.protractor.Protractor;¶import components.pendulum.protractor.ProtractorInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import javafx.scene.control.Slider;¶¶public class TestFrame {¶	public static void main(String[] args) {¶		MainPanelInterface panel = new MainPanel();¶		OEFrame frame = ObjectEditor.edit(panel);¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2134" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:45:17 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="938965" />
  <Command __id="2136" _type="MoveCaretCommand" caretOffset="1172" date="Thu Feb 25 23:45:19 EST 2021" docOffset="1273" starttimestamp="1614313778745" timestamp="940533" />
  <Command __id="2135" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:45:19 EST 2021" docASTNodeCount="599" docActiveCodeLength="3612" docExpressionCount="369" docLength="3711" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="940433">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		angle = a * Math.PI/180;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	"), Diff(INSERT,"¶		¶	"), Diff(EQUAL,"	double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		"), Diff(INSERT,"¶		System.out.println(mass);¶		¶		"), Diff(EQUAL,"setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		angle = a * Math.PI/180;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
	
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		
		System.out.println(mass);
		
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="2137" _type="MoveCaretCommand" caretOffset="1781" date="Thu Feb 25 23:45:22 EST 2021" docOffset="1882" starttimestamp="1614313778745" timestamp="943867" />
  <DocumentChange __id="2138" _type="Delete" date="Thu Feb 25 23:45:25 EST 2021" docASTNodeCount="598" docActiveCodeLength="3608" docExpressionCount="368" docLength="3707" endLine="59" length="4" offset="1878" repeat="4" startLine="59" starttimestamp="1614313778745" timestamp="946652" timestamp2="947759">
    <text><![CDATA[mass]]></text>
  </DocumentChange>
  <Command __id="2139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:45:25 EST 2021" starttimestamp="1614313778745" timestamp="946655" />
  <Command __id="2141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:45:25 EST 2021" starttimestamp="1614313778745" timestamp="946832" />
  <Command __id="2143" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:45:25 EST 2021" starttimestamp="1614313778745" timestamp="946998" />
  <Command __id="2145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:45:26 EST 2021" starttimestamp="1614313778745" timestamp="947761" />
  <DocumentChange __id="2146" _type="Insert" date="Thu Feb 25 23:45:27 EST 2021" docASTNodeCount="599" docActiveCodeLength="3609" docExpressionCount="369" docLength="3708" length="1" offset="1878" starttimestamp="1614313778745" timestamp="948945">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <Command __id="2272" _type="ConsoleOutput" date="Thu Feb 25 23:45:42 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="963714" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2273" _type="ConsoleOutput" date="Thu Feb 25 23:45:42 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="963818" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2274" _type="ConsoleOutput" date="Thu Feb 25 23:45:42 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="963921" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2275" _type="ConsoleOutput" date="Thu Feb 25 23:45:42 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="963972" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2276" _type="ConsoleOutput" date="Thu Feb 25 23:45:42 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964123" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2277" _type="ConsoleOutput" date="Thu Feb 25 23:45:42 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964224" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2278" _type="ConsoleOutput" date="Thu Feb 25 23:45:43 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964325" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2279" _type="ConsoleOutput" date="Thu Feb 25 23:45:43 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964427" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2280" _type="ConsoleOutput" date="Thu Feb 25 23:45:43 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964528" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2281" _type="ConsoleOutput" date="Thu Feb 25 23:45:43 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964603" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2282" _type="ConsoleOutput" date="Thu Feb 25 23:45:43 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964704" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2283" _type="ShellCommand" date="Thu Feb 25 23:45:43 EST 2021" starttimestamp="1614313778745" timestamp="964770" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2284" _type="ConsoleOutput" date="Thu Feb 25 23:45:43 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="964819" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.408248290463863
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.408248290463863¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2285" _type="RunCommand" date="Thu Feb 25 23:45:43 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="964926" type="Run" />
  <Command __id="2286" _type="RunCommand" date="Thu Feb 25 23:45:43 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="964926" type="Run" />
  <Command __id="2287" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:45:52 EST 2021" docASTNodeCount="62" docActiveCodeLength="521" docExpressionCount="35" docLength="521" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="973516">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModelFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package models.pendulum;

public class PendulumModelFactory {
	public static final int DEFAULT_STRING_X = 500, DEFAULT_STRING_Y = 20, DEFAULT_WIDTH = 0, DEFAULT_HEIGHT = 100,
			DEFAULT_LENGTH = 300, DEFAULT_MASS = 10, DEFAULT_FRICTION = 0, DEFAULT_GRAVITY = 1, DEFAULT_ANGLE = 0, MAX_CAPACITY = 3;
	
	public synchronized static PendulumModelInterface getDefaultModel() {
		return new PendulumModel(DEFAULT_STRING_X, DEFAULT_STRING_Y, DEFAULT_LENGTH, DEFAULT_GRAVITY, DEFAULT_MASS, DEFAULT_FRICTION, DEFAULT_ANGLE);
	}
}
]]></snapshot>
  </Command>
  <Command __id="2288" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:45:52 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="973616" />
  <Command __id="2290" _type="MoveCaretCommand" caretOffset="1633" date="Thu Feb 25 23:45:53 EST 2021" docOffset="1734" starttimestamp="1614313778745" timestamp="974452" />
  <Command __id="2291" _type="SelectTextCommand" caretOffset="1193" date="Thu Feb 25 23:46:12 EST 2021" end="1254" start="1193" starttimestamp="1614313778745" timestamp="994151" />
  <Command __id="2289" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:45:53 EST 2021" docASTNodeCount="599" docActiveCodeLength="3609" docExpressionCount="369" docLength="3708" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="974391">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		angle = a * Math.PI/180;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		System.out.println("), Diff(DELETE,"mass"), Diff(INSERT,"h"), Diff(EQUAL,");¶		¶		setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		angle = a * Math.PI/180;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
	
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		
		System.out.println(h);
		
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="2292" _type="MoveCaretCommand" caretOffset="624" date="Thu Feb 25 23:46:15 EST 2021" docOffset="725" starttimestamp="1614313778745" timestamp="996520" />
  <Command __id="2294" _type="InsertStringCommand" date="Thu Feb 25 23:46:16 EST 2021" starttimestamp="1614313778745" timestamp="997864" timestamp2="997864">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2296" _type="InsertStringCommand" date="Thu Feb 25 23:46:17 EST 2021" starttimestamp="1614313778745" timestamp="998710" timestamp2="998710">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2298" _type="InsertStringCommand" date="Thu Feb 25 23:46:17 EST 2021" starttimestamp="1614313778745" timestamp="998827" timestamp2="998827">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2300" _type="InsertStringCommand" date="Thu Feb 25 23:46:17 EST 2021" starttimestamp="1614313778745" timestamp="998966" timestamp2="998966">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2302" _type="InsertStringCommand" date="Thu Feb 25 23:46:17 EST 2021" starttimestamp="1614313778745" timestamp="999078" timestamp2="999078">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2304" _type="InsertStringCommand" date="Thu Feb 25 23:46:17 EST 2021" starttimestamp="1614313778745" timestamp="999153" timestamp2="999153">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2306" _type="InsertStringCommand" date="Thu Feb 25 23:46:18 EST 2021" starttimestamp="1614313778745" timestamp="999283" timestamp2="999283">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2308" _type="InsertStringCommand" date="Thu Feb 25 23:46:18 EST 2021" starttimestamp="1614313778745" timestamp="999373" timestamp2="999373">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2310" _type="InsertStringCommand" date="Thu Feb 25 23:46:18 EST 2021" starttimestamp="1614313778745" timestamp="999452" timestamp2="999452">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2312" _type="InsertStringCommand" date="Thu Feb 25 23:46:18 EST 2021" starttimestamp="1614313778745" timestamp="999924" timestamp2="999924">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2314" _type="InsertStringCommand" date="Thu Feb 25 23:46:18 EST 2021" starttimestamp="1614313778745" timestamp="1000018" timestamp2="1000018">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2316" _type="InsertStringCommand" date="Thu Feb 25 23:46:18 EST 2021" starttimestamp="1614313778745" timestamp="1000146" timestamp2="1000146">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2318" _type="InsertStringCommand" date="Thu Feb 25 23:46:19 EST 2021" starttimestamp="1614313778745" timestamp="1000388" timestamp2="1000388">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2320" _type="InsertStringCommand" date="Thu Feb 25 23:46:19 EST 2021" starttimestamp="1614313778745" timestamp="1000607" timestamp2="1000607">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2322" _type="InsertStringCommand" date="Thu Feb 25 23:46:19 EST 2021" starttimestamp="1614313778745" timestamp="1000675" timestamp2="1000675">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2324" _type="InsertStringCommand" date="Thu Feb 25 23:46:19 EST 2021" starttimestamp="1614313778745" timestamp="1000775" timestamp2="1000775">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2326" _type="InsertStringCommand" date="Thu Feb 25 23:46:19 EST 2021" starttimestamp="1614313778745" timestamp="1000994" timestamp2="1000994">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2328" _type="InsertStringCommand" date="Thu Feb 25 23:46:20 EST 2021" starttimestamp="1614313778745" timestamp="1001806" timestamp2="1001806">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2329" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:46:20 EST 2021" starttimestamp="1614313778745" timestamp="1002020" />
  <Command __id="2332" _type="SelectTextCommand" caretOffset="1201" date="Thu Feb 25 23:46:23 EST 2021" end="1273" start="1201" starttimestamp="1614313778745" timestamp="1005066" />
  <Command __id="2333" _type="CopyCommand" date="Thu Feb 25 23:46:23 EST 2021" starttimestamp="1614313778745" timestamp="1005191" />
  <Command __id="2335" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:24 EST 2021" starttimestamp="1614313778745" timestamp="1005538" />
  <Command __id="2337" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:24 EST 2021" starttimestamp="1614313778745" timestamp="1005702" />
  <Command __id="2339" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:24 EST 2021" starttimestamp="1614313778745" timestamp="1005855" />
  <Command __id="2341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:24 EST 2021" starttimestamp="1614313778745" timestamp="1005983" />
  <Command __id="2343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:24 EST 2021" starttimestamp="1614313778745" timestamp="1006122" />
  <Command __id="2345" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:25 EST 2021" starttimestamp="1614313778745" timestamp="1006270" />
  <Command __id="2347" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:25 EST 2021" starttimestamp="1614313778745" timestamp="1006411" />
  <Command __id="2349" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:25 EST 2021" starttimestamp="1614313778745" timestamp="1006579" />
  <Command __id="2351" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:25 EST 2021" starttimestamp="1614313778745" timestamp="1006889" />
  <Command __id="2353" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:25 EST 2021" starttimestamp="1614313778745" timestamp="1007141" />
  <Command __id="2355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:46:26 EST 2021" starttimestamp="1614313778745" timestamp="1007411" />
  <Command __id="2356" _type="MoveCaretCommand" caretOffset="1005" date="Thu Feb 25 23:46:27 EST 2021" docOffset="1106" starttimestamp="1614313778745" timestamp="1009068" />
  <Command __id="2358" _type="InsertStringCommand" date="Thu Feb 25 23:46:28 EST 2021" starttimestamp="1614313778745" timestamp="1009571" timestamp2="1009571">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2360" _type="PasteCommand" date="Thu Feb 25 23:46:28 EST 2021" starttimestamp="1614313778745" timestamp="1009741" />
  <Command __id="2361" _type="MoveCaretCommand" caretOffset="707" date="Thu Feb 25 23:46:29 EST 2021" docOffset="808" starttimestamp="1614313778745" timestamp="1010601" />
  <Command __id="2362" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:46:29 EST 2021" starttimestamp="1614313778745" timestamp="1010791" />
  <Command __id="2365" _type="MoveCaretCommand" caretOffset="1080" date="Thu Feb 25 23:46:30 EST 2021" docOffset="1181" starttimestamp="1614313778745" timestamp="1011366" />
  <Command __id="2439" _type="ConsoleOutput" date="Thu Feb 25 23:46:53 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1034615" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2440" _type="ConsoleOutput" date="Thu Feb 25 23:46:53 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1034719" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2441" _type="ConsoleOutput" date="Thu Feb 25 23:46:53 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1034820" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2442" _type="ConsoleOutput" date="Thu Feb 25 23:46:53 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1034910" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2443" _type="ConsoleOutput" date="Thu Feb 25 23:46:53 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035060" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2444" _type="ConsoleOutput" date="Thu Feb 25 23:46:53 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035162" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2445" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035263" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2446" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035363" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2447" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035464" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2448" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035518" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2449" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035669" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2450" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035770" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2451" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035871" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2452" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1035973" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2453" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1036073" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
Thread[Thread-0,5,main]tries to get lock
0.18257418583505536
Thread[Thread-0,5,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2454" _type="ConsoleOutput" date="Thu Feb 25 23:46:54 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1036177" type="ConsoleOutput">
    <outputString><![CDATA[Thread[Thread-3,6,main]tries to get lock
0.282842712474619
Thread[Thread-3,6,main]tries to release the lock
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Thread[Thread-3,6,main]tries to get lock¶0.282842712474619¶Thread[Thread-3,6,main]tries to release the lock¶"), Diff(DELETE,"Thread[Thread-0,5,main]tries to get lock¶0.18257418583505536¶Thread[Thread-0,5,main]tries to release the lock¶")]]]></diff>
  </Command>
  <Command __id="2455" _type="RunCommand" date="Thu Feb 25 23:46:54 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1036241" type="Run" />
  <Command __id="2456" _type="RunCommand" date="Thu Feb 25 23:46:54 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1036241" type="Run" />
  <Command __id="2457" _type="ShellCommand" date="Thu Feb 25 23:46:54 EST 2021" starttimestamp="1614313778745" timestamp="1036250" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2293" _type="Insert" date="Thu Feb 25 23:46:16 EST 2021" docASTNodeCount="604" docActiveCodeLength="3628" docExpressionCount="370" docLength="3727" length="19" offset="725" repeat="18" starttimestamp="1614313778745" timestamp="997862" timestamp2="1001805">
    <text><![CDATA[
	private double h;]]></text>
  </DocumentChange>
  <DocumentChange __id="2334" _type="Delete" date="Thu Feb 25 23:46:24 EST 2021" docASTNodeCount="584" docActiveCodeLength="3546" docExpressionCount="353" docLength="3645" endLine="41" length="82" offset="1292" repeat="11" startLine="40" starttimestamp="1614313778745" timestamp="1005533" timestamp2="1007409">
    <text><![CDATA[
		double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);]]></text>
  </DocumentChange>
  <DocumentChange __id="2357" _type="Insert" date="Thu Feb 25 23:46:28 EST 2021" docASTNodeCount="584" docActiveCodeLength="3549" docExpressionCount="353" docLength="3648" length="3" offset="1106" starttimestamp="1614313778745" timestamp="1009569">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2359" _type="Replace" date="Thu Feb 25 23:46:28 EST 2021" docASTNodeCount="603" docActiveCodeLength="3621" docExpressionCount="371" docLength="3720" endLine="32" insertionLength="74" int_docASTNodeCount="584" int_docActiveCodeLength="3547" int_docExpressionCount="353" int_docLength="3646" length="2" offset="1107" startLine="32" starttimestamp="1614313778745" timestamp="1009738">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);]]></insertedText>
  </DocumentChange>
  <Command __id="2458" _type="MoveCaretCommand" caretOffset="908" date="Thu Feb 25 23:46:59 EST 2021" docOffset="1009" starttimestamp="1614313778745" timestamp="1040451" />
  <Command __id="2459" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:47:15 EST 2021" docASTNodeCount="836" docActiveCodeLength="5293" docExpressionCount="576" docLength="5293" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1056957">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				"), Diff(DELETE,"// "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeEvent;

import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.barchart.bar.BarPairInterface;
import components.mainpanel.MainPanel;
import components.pendulum.animator.Lock;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import components.timer.Timer;
import components.timer.TimerInterface;
import models.pendulum.PendulumModel;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})
@EditablePropertyNames({"string", "load", "length", "mass", "angle"})
public class ObserverPendulum implements ObserverPendulumInterface{
	
	private int length = PendulumModelFactory.DEFAULT_LENGTH, 
			mass = PendulumModelFactory.DEFAULT_MASS, 
			angle = PendulumModelFactory.DEFAULT_ANGLE;
	private LoadInterface load = new Load();
	private PendulumStringInterface string;
	private PendulumModelInterface model;
	private PendulumAnimatorCommand animator;
	private boolean enable;
	private BarPairInterface barPair;
	private Lock aLock;
	private boolean isHeightUpdate = false, isWidthUpdate = false;
	private int updatedWidth, updatedHeight;
	private TimerInterface timer = new Timer();
	
	
	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {
		enable = isEnable;
		model = newModel;
		string = new PendulumString(model);
		model.addPropertyChangeListener(this);
		aLock = newLock;
		animator = new PendulumAnimatorCommand(model, aLock);
		barPair = newBarPair;
		if (!enable) {
			stop();
		}
		animator.start();
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getSource() == model) {
			if ("height".equals(evt.getPropertyName())) {
				
				updatedHeight = (int) evt.getNewValue();
				
				isHeightUpdate = true;
			}
			else if ("width".equals(evt.getPropertyName())) {
				updatedWidth = (int) evt.getNewValue();
				
				isWidthUpdate = true;
			}
			else if ("timeElapsed".equals(evt.getPropertyName())) {
				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));
			}
			
			if (isHeightUpdate & isWidthUpdate) {
				isHeightUpdate = false;
				isWidthUpdate = false;
				
				string.setHeight(updatedHeight);
				load.setY(string.getY() + updatedHeight - load.getHeight()/2);
				load.setX(string.getX() + updatedWidth - load.getWidth()/2);
				string.setWidth(updatedWidth);
				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);
				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));
				
				
				System.out.println(Thread.currentThread().toString() + "tries to release the lock");
				aLock.releaseLock();
			}
			
		}
		
	}

	@Override
	public PendulumStringInterface getString() {
		return string;
	}

	@Override
	public LoadInterface getLoad() {
		return load;
	}

	@Override
	public void setString(PendulumStringInterface newString) {
		string = newString;
	}

	@Override
	public void setLoad(LoadInterface newLoad) {
		load = newLoad;
	}
	
	@Override
	public void setLength(int l) {
		length = l;
		setModel();
	}

	@Override
	public void setMass(int m) {
		mass = m;
		setModel();
	}
	
	@Override
	public void setAngle(int a) {
		angle = a;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(500)
	@MinValue(10)
	public int getLength() {
		return length;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(50)
	@MinValue(1)
	public int getMass() {
		return mass;
	}
	
	@Override
	public int getAngle() {
		return angle;
	}

	@Override
	@Visible(false)
	public void setModel() {
		PendulumModelInterface oldModel = model;
		model = new PendulumModel(
				PendulumModelFactory.DEFAULT_STRING_X, 
				PendulumModelFactory.DEFAULT_STRING_Y, 
				length, 
				MainPanel.gravity, 
				mass, 
				MainPanel.friction, 
				angle);
		
		model.addPropertyChangeListener(this);
		if (!enable) {
			stop();
		}
		animator.setNewModel(model);
		oldModel.removePropertyChangeListener(this);
	}

	@Override
	public PendulumModelInterface getModel() {
		return model;
	}

	@Override
	public PendulumAnimatorCommand getAnimator() {
		return animator;
	}

	@Override
	public void stop() {
		model.stopTimer();
		enable = false;
	}

	@Override
	public void resume() {
		model.resumeTimer();
		enable = true;
	}

	@Override
	public BarPairInterface getBarPair() {
		return barPair;
	}

	@Override
	public void setBarPair(BarPairInterface newBarPair) {
		barPair = newBarPair;
	}

	@Override
	public TimerInterface getTimer() {
		return timer;
	}


	
}
]]></snapshot>
  </Command>
  <Command __id="2460" _type="MoveCaretCommand" caretOffset="2333" date="Thu Feb 25 23:47:15 EST 2021" docOffset="3311" starttimestamp="1614313778745" timestamp="1057049" />
  <Command __id="2461" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:47:41 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1082971">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.pendulum.animator.Lock;¶import components.pendulum.imageprotractor.ImageProtractor;¶import components.pendulum.imageprotractor.ImageProtractorInterface;¶import components.pendulum.pendulum.ObserverPendulum;¶import components.pendulum.pendulum.ObserverPendulumInterface;¶import components.ruler.Ruler;¶import components.ruler.RulerInterface;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.Column;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶public class MainPanel implements MainPanelInterface{¶	¶	public static int gravity, ¶			friction = PendulumModelFactory.DEFAULT_FRICTION;¶	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;¶	private Planet planet;¶	private int numberOfPendulum = 0;¶	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();¶	private RulerInterface ruler = new Ruler(20, 20, 675, 60);¶	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);¶	private boolean enable = false;¶	private Lock aLock = new Lock();¶	¶¶	public MainPanel() {¶		increaseNumberOfPendulum();¶		setPlanet(Planet.Earth);¶	}¶¶	@Override¶	public void setGravity(int g) {¶		gravity = g;¶		planet = Planet.Other;¶		setModel();¶	}¶¶	@Override¶	public void setFriction(int f) {¶		friction = f;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(25)¶	@MinValue(1)¶	@Row(1)¶	@Column(0)¶	public int getGravity() {¶		return gravity;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(9)¶	@MinValue(0)¶	@Row(2)¶	@Column(0)¶	public int getFriction() {¶		return friction;¶	}¶¶¶	@Override¶	@Row(2)¶	@Column(0)¶	public List<ObserverPendulumInterface> getPendulum() {¶		return pendulum;¶	}¶¶¶	@Override¶	public RulerInterface getRuler() {¶		return ruler;¶	}¶¶	@Override¶	public void setRuler(RulerInterface newRuler) {¶		ruler = newRuler;¶	}¶¶¶	@Override¶	public int getNumberOfPendulum() {¶		return numberOfPendulum;¶	}¶¶	¶	@Override¶	public ImageProtractorInterface getProtractor() {¶		return protractor;¶	}¶¶	@Override¶	public void setProtractor(ImageProtractorInterface newProtractor) {¶		protractor = newProtractor;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setModel();¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@Label("\u25B6")¶	public void pause() {¶		if (enable) {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).stop();¶			}¶			enable = false;¶		}¶		else {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).resume();¶			}¶			enable = true;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@Label("\u25A0")¶	public void reset() {¶		pause();¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setAngle(0);¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@Label("+")¶	public void increaseNumberOfPendulum() {¶		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {¶			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();¶			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, ¶					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);¶	¶			¶			pendulum.add(newPendulum);¶			numberOfPendulum ++;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@Label("-")¶	public void decreaseNumberOfPendulum() {¶		if (numberOfPendulum > 0) {¶			numberOfPendulum --;¶			pendulum.get(numberOfPendulum).getAnimator().interrupt();¶			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));¶			pendulum.remove(numberOfPendulum);¶		}¶	}¶¶	@Override¶	@Row(0)¶	@Column(0)¶	public Planet getPlanet() {¶		return planet;¶	}¶¶	@Override¶	public void setPlanet(Planet newPlanet) {¶		setGravity(newPlanet.getValue());¶		planet = newPlanet;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2462" _type="MoveCaretCommand" caretOffset="2833" date="Thu Feb 25 23:47:41 EST 2021" docOffset="3818" starttimestamp="1614313778745" timestamp="1083025" />
  <Command __id="2463" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:47:55 EST 2021" docASTNodeCount="62" docActiveCodeLength="521" docExpressionCount="35" docLength="521" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1096727">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModelFactory.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶public class PendulumModelFactory {¶	public static final int DEFAULT_STRING_X = 500, DEFAULT_STRING_Y = 20, DEFAULT_WIDTH = 0, DEFAULT_HEIGHT = 100,¶			DEFAULT_LENGTH = 300, DEFAULT_MASS = 10, DEFAULT_FRICTION = 0, DEFAULT_GRAVITY = 1, DEFAULT_ANGLE = 0, MAX_CAPACITY = 3;¶	¶	public synchronized static PendulumModelInterface getDefaultModel() {¶		return new PendulumModel(DEFAULT_STRING_X, DEFAULT_STRING_Y, DEFAULT_LENGTH, DEFAULT_GRAVITY, DEFAULT_MASS, DEFAULT_FRICTION, DEFAULT_ANGLE);¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2464" _type="MoveCaretCommand" caretOffset="0" date="Thu Feb 25 23:47:55 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="1096785" />
  <Command __id="2466" _type="MoveCaretCommand" caretOffset="2833" date="Thu Feb 25 23:48:08 EST 2021" docOffset="3818" starttimestamp="1614313778745" timestamp="1109258" />
  <Command __id="2467" _type="MoveCaretCommand" caretOffset="1214" date="Thu Feb 25 23:48:11 EST 2021" docOffset="2199" starttimestamp="1614313778745" timestamp="1112584" />
  <Command __id="2468" _type="MoveCaretCommand" caretOffset="1675" date="Thu Feb 25 23:48:23 EST 2021" docOffset="2660" starttimestamp="1614313778745" timestamp="1124634" />
  <Command __id="2470" _type="ShellCommand" date="Thu Feb 25 23:48:24 EST 2021" starttimestamp="1614313778745" timestamp="1125772" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2471" _type="FindCommand" caseSensitive="false" date="Thu Feb 25 23:48:26 EST 2021" forward="false" matchWord="false" offset="2660" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614313778745" timestamp="1127315" wrapSearch="false">
    <searchString><![CDATA[set]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2472" _type="FindCommand" caseSensitive="false" date="Thu Feb 25 23:48:28 EST 2021" forward="false" matchWord="false" offset="3645" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1614313778745" timestamp="1130118" wrapSearch="false">
    <searchString><![CDATA[setModel]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2473" _type="ShellCommand" date="Thu Feb 25 23:48:30 EST 2021" starttimestamp="1614313778745" timestamp="1131999" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2474" _type="MoveCaretCommand" caretOffset="2201" date="Thu Feb 25 23:48:31 EST 2021" docOffset="3186" starttimestamp="1614313778745" timestamp="1132698" />
  <Command __id="2475" _type="MoveCaretCommand" caretOffset="2130" date="Thu Feb 25 23:48:31 EST 2021" docOffset="3115" starttimestamp="1614313778745" timestamp="1133067" />
  <Command __id="2476" _type="MoveCaretCommand" caretOffset="2172" date="Thu Feb 25 23:48:32 EST 2021" docOffset="3157" starttimestamp="1614313778745" timestamp="1133417" />
  <Command __id="2477" _type="MoveCaretCommand" caretOffset="2198" date="Thu Feb 25 23:48:32 EST 2021" docOffset="3183" starttimestamp="1614313778745" timestamp="1134018" />
  <Command __id="2465" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:48:07 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1109143">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.pendulum.animator.Lock;¶import components.pendulum.imageprotractor.ImageProtractor;¶import components.pendulum.imageprotractor.ImageProtractorInterface;¶import components.pendulum.pendulum.ObserverPendulum;¶import components.pendulum.pendulum.ObserverPendulumInterface;¶import components.ruler.Ruler;¶import components.ruler.RulerInterface;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.Column;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶public class MainPanel implements MainPanelInterface{¶	¶	public static int gravity, ¶			friction = PendulumModelFactory.DEFAULT_FRICTION;¶	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;¶	private Planet planet;¶	private int numberOfPendulum = 0;¶	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();¶	private RulerInterface ruler = new Ruler(20, 20, 675, 60);¶	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);¶	private boolean enable = false;¶	private Lock aLock = new Lock();¶	¶¶	public MainPanel() {¶		increaseNumberOfPendulum();¶		setPlanet(Planet.Earth);¶	}¶¶	@Override¶	public void setGravity(int g) {¶		gravity = g;¶		planet = Planet.Other;¶		setModel();¶	}¶¶	@Override¶	public void setFriction(int f) {¶		friction = f;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(25)¶	@MinValue(1)¶	@Row(1)¶	@Column(0)¶	public int getGravity() {¶		return gravity;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(9)¶	@MinValue(0)¶	@Row(2)¶	@Column(0)¶	public int getFriction() {¶		return friction;¶	}¶¶¶	@Override¶	@Row(2)¶	@Column(0)¶	public List<ObserverPendulumInterface> getPendulum() {¶		return pendulum;¶	}¶¶¶	@Override¶	public RulerInterface getRuler() {¶		return ruler;¶	}¶¶	@Override¶	public void setRuler(RulerInterface newRuler) {¶		ruler = newRuler;¶	}¶¶¶	@Override¶	public int getNumberOfPendulum() {¶		return numberOfPendulum;¶	}¶¶	¶	@Override¶	public ImageProtractorInterface getProtractor() {¶		return protractor;¶	}¶¶	@Override¶	public void setProtractor(ImageProtractorInterface newProtractor) {¶		protractor = newProtractor;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setModel();¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@Label("\u25B6")¶	public void pause() {¶		if (enable) {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).stop();¶			}¶			enable = false;¶		}¶		else {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).resume();¶			}¶			enable = true;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@Label("\u25A0")¶	public void reset() {¶		pause();¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setAngle(0);¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@Label("+")¶	public void increaseNumberOfPendulum() {¶		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {¶			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();¶			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, ¶					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);¶	¶			¶			pendulum.add(newPendulum);¶			numberOfPendulum ++;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@Label("-")¶	public void decreaseNumberOfPendulum() {¶		if (numberOfPendulum > 0) {¶			numberOfPendulum --;¶			pendulum.get(numberOfPendulum).getAnimator().interrupt();¶			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));¶			pendulum.remove(numberOfPendulum);¶		}¶	}¶¶	@Override¶	@Row(0)¶	@Column(0)¶	public Planet getPlanet() {¶		return planet;¶	}¶¶	@Override¶	public void setPlanet(Planet newPlanet) {¶		setGravity(newPlanet.getValue());¶		planet = newPlanet;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2478" _type="SelectTextCommand" caretOffset="2118" date="Thu Feb 25 23:48:33 EST 2021" end="2198" start="2118" starttimestamp="1614313778745" timestamp="1135068" />
  <Command __id="2479" _type="MoveCaretCommand" caretOffset="2198" date="Thu Feb 25 23:48:34 EST 2021" docOffset="3183" starttimestamp="1614313778745" timestamp="1135324" />
  <Command __id="2481" _type="MoveCaretCommand" caretOffset="2333" date="Thu Feb 25 23:48:37 EST 2021" docOffset="3311" starttimestamp="1614313778745" timestamp="1138467" />
  <Command __id="2482" _type="MoveCaretCommand" caretOffset="3557" date="Thu Feb 25 23:48:43 EST 2021" docOffset="4535" starttimestamp="1614313778745" timestamp="1144317" />
  <Command __id="2483" _type="MoveCaretCommand" caretOffset="3593" date="Thu Feb 25 23:48:44 EST 2021" docOffset="4571" starttimestamp="1614313778745" timestamp="1145767" />
  <Command __id="2484" _type="MoveCaretCommand" caretOffset="3557" date="Thu Feb 25 23:48:50 EST 2021" docOffset="4535" starttimestamp="1614313778745" timestamp="1151374" />
  <Command __id="2480" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:48:37 EST 2021" docASTNodeCount="836" docActiveCodeLength="5293" docExpressionCount="576" docLength="5293" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1138419">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="2485" _type="MoveCaretCommand" caretOffset="3605" date="Thu Feb 25 23:48:52 EST 2021" docOffset="4583" starttimestamp="1614313778745" timestamp="1154008" />
  <DocumentChange __id="2486" _type="Insert" date="Thu Feb 25 23:48:53 EST 2021" docASTNodeCount="842" docActiveCodeLength="5309" docExpressionCount="579" docLength="5309" length="16" offset="4583" repeat="12" starttimestamp="1614313778745" timestamp="1154832" timestamp2="1158292">
    <text><![CDATA[
		
		System.out]]></text>
  </DocumentChange>
  <Command __id="2487" _type="InsertStringCommand" date="Thu Feb 25 23:48:53 EST 2021" starttimestamp="1614313778745" timestamp="1154834" timestamp2="1154834">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2489" _type="InsertStringCommand" date="Thu Feb 25 23:48:53 EST 2021" starttimestamp="1614313778745" timestamp="1154997" timestamp2="1154997">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2491" _type="InsertStringCommand" date="Thu Feb 25 23:48:54 EST 2021" starttimestamp="1614313778745" timestamp="1155790" timestamp2="1155790">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2493" _type="InsertStringCommand" date="Thu Feb 25 23:48:54 EST 2021" starttimestamp="1614313778745" timestamp="1156118" timestamp2="1156118">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2495" _type="InsertStringCommand" date="Thu Feb 25 23:48:54 EST 2021" starttimestamp="1614313778745" timestamp="1156200" timestamp2="1156200">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2497" _type="InsertStringCommand" date="Thu Feb 25 23:48:55 EST 2021" starttimestamp="1614313778745" timestamp="1156368" timestamp2="1156368">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2499" _type="InsertStringCommand" date="Thu Feb 25 23:48:55 EST 2021" starttimestamp="1614313778745" timestamp="1156439" timestamp2="1156439">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2501" _type="InsertStringCommand" date="Thu Feb 25 23:48:55 EST 2021" starttimestamp="1614313778745" timestamp="1156676" timestamp2="1156676">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2503" _type="InsertStringCommand" date="Thu Feb 25 23:48:56 EST 2021" starttimestamp="1614313778745" timestamp="1157785" timestamp2="1157785">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2504" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:48:56 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1157789" />
  <Command __id="2508" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:48:57 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1158517" />
  <DocumentChange __id="2509" _type="Replace" date="Thu Feb 25 23:48:57 EST 2021" docASTNodeCount="840" docActiveCodeLength="5310" docExpressionCount="580" docLength="5310" endLine="173" insertionLength="4" int_docASTNodeCount="838" int_docActiveCodeLength="5306" int_docExpressionCount="578" int_docLength="5306" length="3" offset="4596" startLine="173" starttimestamp="1614313778745" timestamp="1158519">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="2510" _type="InsertStringCommand" date="Thu Feb 25 23:48:57 EST 2021" starttimestamp="1614313778745" timestamp="1158523" timestamp2="1158523">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2511" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:48:57 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1158524" />
  <Command __id="2520" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:49:00 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1161934" />
  <Command __id="2521" _type="MoveCaretCommand" caretOffset="3469" date="Thu Feb 25 23:49:00 EST 2021" docOffset="4447" starttimestamp="1614313778745" timestamp="1162017" />
  <Command __id="2522" _type="SelectTextCommand" caretOffset="3573" date="Thu Feb 25 23:49:02 EST 2021" end="3591" start="3573" starttimestamp="1614313778745" timestamp="1163991" />
  <Command __id="2523" _type="CopyCommand" date="Thu Feb 25 23:49:02 EST 2021" starttimestamp="1614313778745" timestamp="1164153" />
  <Command __id="2524" _type="MoveCaretCommand" caretOffset="3630" date="Thu Feb 25 23:49:03 EST 2021" docOffset="4608" starttimestamp="1614313778745" timestamp="1164884" />
  <Command __id="2526" _type="PasteCommand" date="Thu Feb 25 23:49:04 EST 2021" starttimestamp="1614313778745" timestamp="1165282" />
  <Command __id="2527" _type="MoveCaretCommand" caretOffset="3649" date="Thu Feb 25 23:49:04 EST 2021" docOffset="4627" starttimestamp="1614313778745" timestamp="1165911" />
  <Command __id="2529" _type="InsertStringCommand" date="Thu Feb 25 23:49:05 EST 2021" starttimestamp="1614313778745" timestamp="1166760" timestamp2="1166760">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2530" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:49:05 EST 2021" starttimestamp="1614313778745" timestamp="1166951" />
  <Command __id="2533" _type="ShellCommand" date="Thu Feb 25 23:49:06 EST 2021" starttimestamp="1614313778745" timestamp="1168171" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2548" _type="RunCommand" date="Thu Feb 25 23:49:23 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1184982" type="Run" />
  <Command __id="2549" _type="RunCommand" date="Thu Feb 25 23:49:23 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1184982" type="Run" />
  <Command __id="2550" _type="ShellCommand" date="Thu Feb 25 23:49:23 EST 2021" starttimestamp="1614313778745" timestamp="1185006" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2551" _type="MoveCaretCommand" caretOffset="3653" date="Thu Feb 25 23:49:26 EST 2021" docOffset="4631" starttimestamp="1614313778745" timestamp="1187784" />
  <Command __id="2552" _type="MoveCaretCommand" caretOffset="3605" date="Thu Feb 25 23:49:27 EST 2021" docOffset="4583" starttimestamp="1614313778745" timestamp="1188684" />
  <Command __id="2553" _type="SelectTextCommand" caretOffset="3609" date="Thu Feb 25 23:49:29 EST 2021" end="3650" start="3609" starttimestamp="1614313778745" timestamp="1190743" />
  <Command __id="2555" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:30 EST 2021" starttimestamp="1614313778745" timestamp="1191594" />
  <Command __id="2557" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:30 EST 2021" starttimestamp="1614313778745" timestamp="1191852" />
  <Command __id="2558" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:49:31 EST 2021" starttimestamp="1614313778745" timestamp="1192626" />
  <Command __id="2560" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:31 EST 2021" starttimestamp="1614313778745" timestamp="1192982" />
  <Command __id="2562" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:31 EST 2021" starttimestamp="1614313778745" timestamp="1193225" />
  <Command __id="2564" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:32 EST 2021" starttimestamp="1614313778745" timestamp="1193881" />
  <Command __id="2565" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:49:32 EST 2021" starttimestamp="1614313778745" timestamp="1194207" />
  <DocumentChange __id="2512" _type="Insert" date="Thu Feb 25 23:48:57 EST 2021" docASTNodeCount="842" docActiveCodeLength="5319" docExpressionCount="581" docLength="5319" length="9" offset="4600" repeat="8" starttimestamp="1614313778745" timestamp="1158870" timestamp2="1160453">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <DocumentChange __id="2525" _type="Insert" date="Thu Feb 25 23:49:04 EST 2021" docASTNodeCount="845" docActiveCodeLength="5337" docExpressionCount="584" docLength="5337" length="18" offset="4608" starttimestamp="1614313778745" timestamp="1165279">
    <text><![CDATA[MainPanel.friction]]></text>
  </DocumentChange>
  <DocumentChange __id="2528" _type="Insert" date="Thu Feb 25 23:49:05 EST 2021" docASTNodeCount="845" docActiveCodeLength="5338" docExpressionCount="584" docLength="5338" length="1" offset="4627" starttimestamp="1614313778745" timestamp="1166758">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2554" _type="Delete" date="Thu Feb 25 23:49:30 EST 2021" docASTNodeCount="836" docActiveCodeLength="5296" docExpressionCount="576" docLength="5296" endLine="173" length="42" offset="4586" repeat="2" startLine="172" starttimestamp="1614313778745" timestamp="1191591" timestamp2="1191851">
    <text><![CDATA[
		System.out.println(MainPanel.friction);]]></text>
  </DocumentChange>
  <DocumentChange __id="2559" _type="Delete" date="Thu Feb 25 23:49:31 EST 2021" docASTNodeCount="836" docActiveCodeLength="5293" docExpressionCount="576" docLength="5293" endLine="173" length="3" offset="4586" repeat="3" startLine="172" starttimestamp="1614313778745" timestamp="1192981" timestamp2="1193879">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="2568" _type="MoveCaretCommand" caretOffset="3838" date="Thu Feb 25 23:49:34 EST 2021" docOffset="4816" starttimestamp="1614313778745" timestamp="1195452" />
  <Command __id="2570" _type="MoveCaretCommand" caretOffset="908" date="Thu Feb 25 23:49:41 EST 2021" docOffset="1009" starttimestamp="1614313778745" timestamp="1203057" />
  <Command __id="2569" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:49:41 EST 2021" docASTNodeCount="603" docActiveCodeLength="3621" docExpressionCount="371" docLength="3720" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1202962">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	"), Diff(INSERT,"private double h;¶	"), Diff(EQUAL,"private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		angle = a * Math.PI/180;¶	"), Diff(INSERT,"	h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶	"), Diff(EQUAL,"}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		"), Diff(DELETE,"double h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶		"), Diff(EQUAL,"if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		System.out.println(h);¶		¶		setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private double h;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		angle = a * Math.PI/180;
		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
	
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		
		System.out.println(h);
		
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2572" _type="Insert" date="Thu Feb 25 23:49:44 EST 2021" docASTNodeCount="607" docActiveCodeLength="3634" docExpressionCount="373" docLength="3733" length="13" offset="1079" repeat="11" starttimestamp="1614313778745" timestamp="1206068" timestamp2="1208992">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="2593" _type="Replace" date="Thu Feb 25 23:49:48 EST 2021" docASTNodeCount="607" docActiveCodeLength="3635" docExpressionCount="375" docLength="3734" endLine="31" insertionLength="4" int_docASTNodeCount="605" int_docActiveCodeLength="3631" int_docExpressionCount="373" int_docLength="3730" length="3" offset="1089" startLine="31" starttimestamp="1614313778745" timestamp="1209334">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="2571" _type="MoveCaretCommand" caretOffset="978" date="Thu Feb 25 23:49:43 EST 2021" docOffset="1079" starttimestamp="1614313778745" timestamp="1205232" />
  <Command __id="2573" _type="InsertStringCommand" date="Thu Feb 25 23:49:44 EST 2021" starttimestamp="1614313778745" timestamp="1206070" timestamp2="1206070">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2575" _type="InsertStringCommand" date="Thu Feb 25 23:49:45 EST 2021" starttimestamp="1614313778745" timestamp="1206899" timestamp2="1206899">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2577" _type="InsertStringCommand" date="Thu Feb 25 23:49:45 EST 2021" starttimestamp="1614313778745" timestamp="1207135" timestamp2="1207135">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2579" _type="InsertStringCommand" date="Thu Feb 25 23:49:45 EST 2021" starttimestamp="1614313778745" timestamp="1207173" timestamp2="1207173">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2581" _type="InsertStringCommand" date="Thu Feb 25 23:49:46 EST 2021" starttimestamp="1614313778745" timestamp="1207356" timestamp2="1207356">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2583" _type="InsertStringCommand" date="Thu Feb 25 23:49:46 EST 2021" starttimestamp="1614313778745" timestamp="1207416" timestamp2="1207416">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2585" _type="InsertStringCommand" date="Thu Feb 25 23:49:46 EST 2021" starttimestamp="1614313778745" timestamp="1207616" timestamp2="1207616">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2587" _type="InsertStringCommand" date="Thu Feb 25 23:49:47 EST 2021" starttimestamp="1614313778745" timestamp="1208428" timestamp2="1208428">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2588" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:49:47 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1208429" />
  <Command __id="2592" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:49:48 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1209332" />
  <Command __id="2594" _type="InsertStringCommand" date="Thu Feb 25 23:49:48 EST 2021" starttimestamp="1614313778745" timestamp="1209339" timestamp2="1209339">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2595" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:49:48 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1209344" />
  <Command __id="2606" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:49:52 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1213443" />
  <Command __id="2608" _type="InsertStringCommand" date="Thu Feb 25 23:49:52 EST 2021" starttimestamp="1614313778745" timestamp="1213641" timestamp2="1213641">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2610" _type="InsertStringCommand" date="Thu Feb 25 23:49:52 EST 2021" starttimestamp="1614313778745" timestamp="1213816" timestamp2="1213816">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2612" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:53 EST 2021" starttimestamp="1614313778745" timestamp="1214297" />
  <Command __id="2614" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:49:53 EST 2021" starttimestamp="1614313778745" timestamp="1214454" />
  <Command __id="2616" _type="InsertStringCommand" date="Thu Feb 25 23:49:53 EST 2021" starttimestamp="1614313778745" timestamp="1215099" timestamp2="1215099">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2618" _type="InsertStringCommand" date="Thu Feb 25 23:49:54 EST 2021" starttimestamp="1614313778745" timestamp="1215266" timestamp2="1215266">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2620" _type="InsertStringCommand" date="Thu Feb 25 23:49:54 EST 2021" starttimestamp="1614313778745" timestamp="1215510" timestamp2="1215510">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2622" _type="InsertStringCommand" date="Thu Feb 25 23:49:54 EST 2021" starttimestamp="1614313778745" timestamp="1215582" timestamp2="1215582">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2624" _type="InsertStringCommand" date="Thu Feb 25 23:49:54 EST 2021" starttimestamp="1614313778745" timestamp="1215658" timestamp2="1215658">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2626" _type="InsertStringCommand" date="Thu Feb 25 23:49:54 EST 2021" starttimestamp="1614313778745" timestamp="1215729" timestamp2="1215729">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="2596" _type="Insert" date="Thu Feb 25 23:49:48 EST 2021" docASTNodeCount="610" docActiveCodeLength="3648" docExpressionCount="377" docLength="3747" length="13" offset="1093" repeat="12" starttimestamp="1614313778745" timestamp="1209650" timestamp2="1213815">
    <text><![CDATA[println(frci)]]></text>
  </DocumentChange>
  <DocumentChange __id="2611" _type="Delete" date="Thu Feb 25 23:49:53 EST 2021" docASTNodeCount="610" docActiveCodeLength="3646" docExpressionCount="377" docLength="3745" endLine="31" length="2" offset="1103" repeat="2" startLine="31" starttimestamp="1614313778745" timestamp="1214296" timestamp2="1214453">
    <text><![CDATA[ci]]></text>
  </DocumentChange>
  <DocumentChange __id="2615" _type="Insert" date="Thu Feb 25 23:49:53 EST 2021" docASTNodeCount="610" docActiveCodeLength="3652" docExpressionCount="377" docLength="3751" length="6" offset="1103" repeat="6" starttimestamp="1614313778745" timestamp="1215098" timestamp2="1215728">
    <text><![CDATA[iction]]></text>
  </DocumentChange>
  <DocumentChange __id="2628" _type="Insert" date="Thu Feb 25 23:49:55 EST 2021" docASTNodeCount="610" docActiveCodeLength="3653" docExpressionCount="377" docLength="3752" length="1" offset="1110" starttimestamp="1614313778745" timestamp="1216641">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="2643" _type="RunCommand" date="Thu Feb 25 23:50:02 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1223678" type="Run" />
  <Command __id="2644" _type="RunCommand" date="Thu Feb 25 23:50:02 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1223678" type="Run" />
  <Command __id="2645" _type="ShellCommand" date="Thu Feb 25 23:50:02 EST 2021" starttimestamp="1614313778745" timestamp="1223707" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2647" _type="MoveCaretCommand" caretOffset="466" date="Thu Feb 25 23:50:04 EST 2021" docOffset="466" starttimestamp="1614313778745" timestamp="1225709" />
  <Command __id="2646" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:50:04 EST 2021" docASTNodeCount="133" docActiveCodeLength="812" docExpressionCount="71" docLength="812" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1225645">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/PendulumAnimatorCommand.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶import models.pendulum.PendulumModelInterface;¶¶public class PendulumAnimatorCommand extends Thread{¶	private boolean enable;¶	private PendulumModelInterface model;¶	private Lock aLock;¶	¶	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){¶		super();¶		enable = true;¶		model = newModel;¶		aLock = newLock;¶	}¶	¶	public void pause() {¶		enable = false;¶	}¶	¶	public void unpause() {¶		enable = true;¶	}¶	¶	public void setNewModel(PendulumModelInterface newModel) {¶		model = newModel;¶	}¶	¶	¶	public void run() {¶		while (enable) {¶			"), Diff(DELETE,"// "), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "tries to get lock");¶			"), Diff(DELETE,"// "), Diff(EQUAL,"aLock.getLock();¶			model.nextPosition();¶			try {¶				Thread.sleep(100);¶			} catch (InterruptedException e){¶				¶			}¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.animator;

import models.pendulum.PendulumModelInterface;

public class PendulumAnimatorCommand extends Thread{
	private boolean enable;
	private PendulumModelInterface model;
	private Lock aLock;
	
	public PendulumAnimatorCommand(PendulumModelInterface newModel, Lock newLock){
		super();
		enable = true;
		model = newModel;
		aLock = newLock;
	}
	
	public void pause() {
		enable = false;
	}
	
	public void unpause() {
		enable = true;
	}
	
	public void setNewModel(PendulumModelInterface newModel) {
		model = newModel;
	}
	
	
	public void run() {
		while (enable) {
			System.out.println(Thread.currentThread().toString() + "tries to get lock");
			aLock.getLock();
			model.nextPosition();
			try {
				Thread.sleep(100);
			} catch (InterruptedException e){
				
			}
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="2649" _type="Insert" date="Thu Feb 25 23:50:06 EST 2021" docASTNodeCount="129" docActiveCodeLength="796" docExpressionCount="68" docLength="814" length="2" offset="682" repeat="2" starttimestamp="1614313778745" timestamp="1227877" timestamp2="1228017">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2654" _type="Insert" date="Thu Feb 25 23:50:07 EST 2021" docASTNodeCount="116" docActiveCodeLength="720" docExpressionCount="56" docLength="816" length="2" offset="602" repeat="2" starttimestamp="1614313778745" timestamp="1229052" timestamp2="1229184">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2648" _type="MoveCaretCommand" caretOffset="682" date="Thu Feb 25 23:50:05 EST 2021" docOffset="682" starttimestamp="1614313778745" timestamp="1227152" />
  <Command __id="2650" _type="InsertStringCommand" date="Thu Feb 25 23:50:06 EST 2021" starttimestamp="1614313778745" timestamp="1227878" timestamp2="1227878">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2652" _type="InsertStringCommand" date="Thu Feb 25 23:50:06 EST 2021" starttimestamp="1614313778745" timestamp="1228018" timestamp2="1228018">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2653" _type="MoveCaretCommand" caretOffset="602" date="Thu Feb 25 23:50:07 EST 2021" docOffset="602" starttimestamp="1614313778745" timestamp="1228778" />
  <Command __id="2655" _type="InsertStringCommand" date="Thu Feb 25 23:50:07 EST 2021" starttimestamp="1614313778745" timestamp="1229053" timestamp2="1229053">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2657" _type="InsertStringCommand" date="Thu Feb 25 23:50:07 EST 2021" starttimestamp="1614313778745" timestamp="1229185" timestamp2="1229185">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2658" _type="MoveCaretCommand" caretOffset="558" date="Thu Feb 25 23:50:08 EST 2021" docOffset="558" starttimestamp="1614313778745" timestamp="1229520" />
  <Command __id="2659" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:50:08 EST 2021" starttimestamp="1614313778745" timestamp="1229938" />
  <Command __id="2663" _type="MoveCaretCommand" caretOffset="3838" date="Thu Feb 25 23:50:10 EST 2021" docOffset="4816" starttimestamp="1614313778745" timestamp="1231901" />
  <Command __id="2662" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:50:10 EST 2021" docASTNodeCount="836" docActiveCodeLength="5293" docExpressionCount="576" docLength="5293" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1231842">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2665" _type="Insert" date="Thu Feb 25 23:50:15 EST 2021" docASTNodeCount="823" docActiveCodeLength="5209" docExpressionCount="564" docLength="5295" length="2" offset="3311" repeat="2" starttimestamp="1614313778745" timestamp="1236520" timestamp2="1236661">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2670" _type="Insert" date="Thu Feb 25 23:50:15 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5297" length="2" offset="3402" repeat="2" starttimestamp="1614313778745" timestamp="1237167" timestamp2="1237310">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2750" _type="ConsoleOutput" date="Thu Feb 25 23:50:25 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247181" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2751" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247300" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶"), Diff(INSERT,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2752" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247449" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶"), Diff(DELETE,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2753" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247550" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2754" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247684" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2755" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247785" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2756" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247886" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2757" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1247987" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2758" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248087" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2759" _type="ConsoleOutput" date="Thu Feb 25 23:50:26 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248187" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2760" _type="ConsoleOutput" date="Thu Feb 25 23:50:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248261" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2761" _type="ConsoleOutput" date="Thu Feb 25 23:50:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248412" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2762" _type="ConsoleOutput" date="Thu Feb 25 23:50:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248517" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶"), Diff(INSERT,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2763" _type="ConsoleOutput" date="Thu Feb 25 23:50:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248716" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶"), Diff(DELETE,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2764" _type="ShellCommand" date="Thu Feb 25 23:50:27 EST 2021" starttimestamp="1614313778745" timestamp="1248786" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2765" _type="ConsoleOutput" date="Thu Feb 25 23:50:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248794" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2766" _type="ConsoleOutput" date="Thu Feb 25 23:50:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1248895" type="ConsoleOutput">
    <outputString><![CDATA[0.18257418583505536
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.18257418583505536¶")]]]></diff>
  </Command>
  <Command __id="2767" _type="RunCommand" date="Thu Feb 25 23:50:27 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1248942" type="Run" />
  <Command __id="2768" _type="RunCommand" date="Thu Feb 25 23:50:27 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1248942" type="Run" />
  <Command __id="2770" _type="MoveCaretCommand" caretOffset="676" date="Thu Feb 25 23:50:30 EST 2021" docOffset="777" starttimestamp="1614313778745" timestamp="1251443" />
  <Command __id="2833" _type="RunCommand" date="Thu Feb 25 23:51:23 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1304433" type="Run" />
  <Command __id="2834" _type="RunCommand" date="Thu Feb 25 23:51:23 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1304433" type="Run" />
  <Command __id="2835" _type="ShellCommand" date="Thu Feb 25 23:51:23 EST 2021" starttimestamp="1614313778745" timestamp="1304462" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2769" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:50:30 EST 2021" docASTNodeCount="610" docActiveCodeLength="3653" docExpressionCount="377" docLength="3752" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1251379">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private double h;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		"), Diff(INSERT,"System.out.println(friction);¶		"), Diff(EQUAL,"angle = a * Math.PI/180;¶		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		System.out.println(h);¶		¶		setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private double h;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		System.out.println(friction);
		angle = a * Math.PI/180;
		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
	
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		
		System.out.println(h);
		
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2772" _type="Delete" date="Thu Feb 25 23:50:36 EST 2021" docASTNodeCount="603" docActiveCodeLength="3625" docExpressionCount="371" docLength="3724" endLine="61" length="28" offset="1897" repeat="5" startLine="59" starttimestamp="1614313778745" timestamp="1257323" timestamp2="1258901">
    <text><![CDATA[
		
		System.out.println(h);]]></text>
  </DocumentChange>
  <Command __id="2836" _type="MoveCaretCommand" caretOffset="1098" date="Thu Feb 25 23:51:32 EST 2021" docOffset="1199" starttimestamp="1614313778745" timestamp="1313300" />
  <Command __id="2837" _type="SelectTextCommand" caretOffset="1086" date="Thu Feb 25 23:51:32 EST 2021" end="1086" start="853" starttimestamp="1614313778745" timestamp="1313709" />
  <Command __id="2838" _type="MoveCaretCommand" caretOffset="1086" date="Thu Feb 25 23:51:32 EST 2021" docOffset="1187" starttimestamp="1614313778745" timestamp="1313890" />
  <Command __id="2839" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:51:37 EST 2021" docASTNodeCount="57" docActiveCodeLength="360" docExpressionCount="26" docLength="734" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1318689">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/animator/Lock.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.animator;¶¶public class Lock {¶	¶	private boolean lock = false;¶	¶	public synchronized void getLock() {¶		while (lock) {¶			// System.out.println(Thread.currentThread().toString() + "begins waiting");¶			try {¶				wait();¶				// System.out.println(Thread.currentThread().toString() + "ends waiting");¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		¶		lock = true;¶		// System.out.println(Thread.currentThread().toString() + "gets the lock");¶	}¶	¶	public synchronized void releaseLock() {¶		// System.out.println(Thread.currentThread().toString() + "notifies");¶		notify();¶		lock = false;¶		// System.out.println(Thread.currentThread().toString() + "releases the lock");¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="2840" _type="MoveCaretCommand" caretOffset="644" date="Thu Feb 25 23:51:37 EST 2021" docOffset="644" starttimestamp="1614313778745" timestamp="1318759" />
  <Command __id="2841" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:51:39 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1320283">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.pendulum.animator.Lock;¶import components.pendulum.imageprotractor.ImageProtractor;¶import components.pendulum.imageprotractor.ImageProtractorInterface;¶import components.pendulum.pendulum.ObserverPendulum;¶import components.pendulum.pendulum.ObserverPendulumInterface;¶import components.ruler.Ruler;¶import components.ruler.RulerInterface;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.Column;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶public class MainPanel implements MainPanelInterface{¶	¶	public static int gravity, ¶			friction = PendulumModelFactory.DEFAULT_FRICTION;¶	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;¶	private Planet planet;¶	private int numberOfPendulum = 0;¶	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();¶	private RulerInterface ruler = new Ruler(20, 20, 675, 60);¶	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);¶	private boolean enable = false;¶	private Lock aLock = new Lock();¶	¶¶	public MainPanel() {¶		increaseNumberOfPendulum();¶		setPlanet(Planet.Earth);¶	}¶¶	@Override¶	public void setGravity(int g) {¶		gravity = g;¶		planet = Planet.Other;¶		setModel();¶	}¶¶	@Override¶	public void setFriction(int f) {¶		friction = f;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(25)¶	@MinValue(1)¶	@Row(1)¶	@Column(0)¶	public int getGravity() {¶		return gravity;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(9)¶	@MinValue(0)¶	@Row(2)¶	@Column(0)¶	public int getFriction() {¶		return friction;¶	}¶¶¶	@Override¶	@Row(2)¶	@Column(0)¶	public List<ObserverPendulumInterface> getPendulum() {¶		return pendulum;¶	}¶¶¶	@Override¶	public RulerInterface getRuler() {¶		return ruler;¶	}¶¶	@Override¶	public void setRuler(RulerInterface newRuler) {¶		ruler = newRuler;¶	}¶¶¶	@Override¶	public int getNumberOfPendulum() {¶		return numberOfPendulum;¶	}¶¶	¶	@Override¶	public ImageProtractorInterface getProtractor() {¶		return protractor;¶	}¶¶	@Override¶	public void setProtractor(ImageProtractorInterface newProtractor) {¶		protractor = newProtractor;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setModel();¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@Label("\u25B6")¶	public void pause() {¶		if (enable) {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).stop();¶			}¶			enable = false;¶		}¶		else {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).resume();¶			}¶			enable = true;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@Label("\u25A0")¶	public void reset() {¶		pause();¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setAngle(0);¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@Label("+")¶	public void increaseNumberOfPendulum() {¶		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {¶			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();¶			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, ¶					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);¶	¶			¶			pendulum.add(newPendulum);¶			numberOfPendulum ++;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@Label("-")¶	public void decreaseNumberOfPendulum() {¶		if (numberOfPendulum > 0) {¶			numberOfPendulum --;¶			pendulum.get(numberOfPendulum).getAnimator().interrupt();¶			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));¶			pendulum.remove(numberOfPendulum);¶		}¶	}¶¶	@Override¶	@Row(0)¶	@Column(0)¶	public Planet getPlanet() {¶		return planet;¶	}¶¶	@Override¶	public void setPlanet(Planet newPlanet) {¶		setGravity(newPlanet.getValue());¶		planet = newPlanet;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2842" _type="MoveCaretCommand" caretOffset="2198" date="Thu Feb 25 23:51:39 EST 2021" docOffset="3183" starttimestamp="1614313778745" timestamp="1320339" />
  <Command __id="2843" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:51:41 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5297" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1322967">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				"), Diff(INSERT,"//"), Diff(EQUAL,"System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				"), Diff(INSERT,"//"), Diff(EQUAL,"aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.pendulum.pendulum;

import java.beans.PropertyChangeEvent;

import javax.swing.JSlider;

import components.barchart.bar.BarPair;
import components.barchart.bar.BarPairInterface;
import components.mainpanel.MainPanel;
import components.pendulum.animator.Lock;
import components.pendulum.animator.PendulumAnimatorCommand;
import components.pendulum.load.Load;
import components.pendulum.load.LoadInterface;
import components.pendulum.string.PendulumString;
import components.pendulum.string.PendulumStringInterface;
import components.timer.Timer;
import components.timer.TimerInterface;
import models.pendulum.PendulumModel;
import models.pendulum.PendulumModelFactory;
import models.pendulum.PendulumModelInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.MaxValue;
import util.annotations.MinValue;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})
@EditablePropertyNames({"string", "load", "length", "mass", "angle"})
public class ObserverPendulum implements ObserverPendulumInterface{
	
	private int length = PendulumModelFactory.DEFAULT_LENGTH, 
			mass = PendulumModelFactory.DEFAULT_MASS, 
			angle = PendulumModelFactory.DEFAULT_ANGLE;
	private LoadInterface load = new Load();
	private PendulumStringInterface string;
	private PendulumModelInterface model;
	private PendulumAnimatorCommand animator;
	private boolean enable;
	private BarPairInterface barPair;
	private Lock aLock;
	private boolean isHeightUpdate = false, isWidthUpdate = false;
	private int updatedWidth, updatedHeight;
	private TimerInterface timer = new Timer();
	
	
	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {
		enable = isEnable;
		model = newModel;
		string = new PendulumString(model);
		model.addPropertyChangeListener(this);
		aLock = newLock;
		animator = new PendulumAnimatorCommand(model, aLock);
		barPair = newBarPair;
		if (!enable) {
			stop();
		}
		animator.start();
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if (evt.getSource() == model) {
			if ("height".equals(evt.getPropertyName())) {
				
				updatedHeight = (int) evt.getNewValue();
				
				isHeightUpdate = true;
			}
			else if ("width".equals(evt.getPropertyName())) {
				updatedWidth = (int) evt.getNewValue();
				
				isWidthUpdate = true;
			}
			else if ("timeElapsed".equals(evt.getPropertyName())) {
				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));
			}
			
			if (isHeightUpdate & isWidthUpdate) {
				isHeightUpdate = false;
				isWidthUpdate = false;
				
				string.setHeight(updatedHeight);
				load.setY(string.getY() + updatedHeight - load.getHeight()/2);
				load.setX(string.getX() + updatedWidth - load.getWidth()/2);
				string.setWidth(updatedWidth);
				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);
				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));
				
				
				//System.out.println(Thread.currentThread().toString() + "tries to release the lock");
				//aLock.releaseLock();
			}
			
		}
		
	}

	@Override
	public PendulumStringInterface getString() {
		return string;
	}

	@Override
	public LoadInterface getLoad() {
		return load;
	}

	@Override
	public void setString(PendulumStringInterface newString) {
		string = newString;
	}

	@Override
	public void setLoad(LoadInterface newLoad) {
		load = newLoad;
	}
	
	@Override
	public void setLength(int l) {
		length = l;
		setModel();
	}

	@Override
	public void setMass(int m) {
		mass = m;
		setModel();
	}
	
	@Override
	public void setAngle(int a) {
		angle = a;
		setModel();
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(500)
	@MinValue(10)
	public int getLength() {
		return length;
	}

	@Override
	@PreferredWidgetClass(JSlider.class)
	@MaxValue(50)
	@MinValue(1)
	public int getMass() {
		return mass;
	}
	
	@Override
	public int getAngle() {
		return angle;
	}

	@Override
	@Visible(false)
	public void setModel() {
		PendulumModelInterface oldModel = model;
		model = new PendulumModel(
				PendulumModelFactory.DEFAULT_STRING_X, 
				PendulumModelFactory.DEFAULT_STRING_Y, 
				length, 
				MainPanel.gravity, 
				mass, 
				MainPanel.friction, 
				angle);
		
		model.addPropertyChangeListener(this);
		if (!enable) {
			stop();
		}
		animator.setNewModel(model);
		oldModel.removePropertyChangeListener(this);
	}

	@Override
	public PendulumModelInterface getModel() {
		return model;
	}

	@Override
	public PendulumAnimatorCommand getAnimator() {
		return animator;
	}

	@Override
	public void stop() {
		model.stopTimer();
		enable = false;
	}

	@Override
	public void resume() {
		model.resumeTimer();
		enable = true;
	}

	@Override
	public BarPairInterface getBarPair() {
		return barPair;
	}

	@Override
	public void setBarPair(BarPairInterface newBarPair) {
		barPair = newBarPair;
	}

	@Override
	public TimerInterface getTimer() {
		return timer;
	}


	
}
]]></snapshot>
  </Command>
  <Command __id="2844" _type="MoveCaretCommand" caretOffset="2135" date="Thu Feb 25 23:51:41 EST 2021" docOffset="3113" starttimestamp="1614313778745" timestamp="1323034" />
  <Command __id="2846" _type="MoveCaretCommand" caretOffset="1086" date="Thu Feb 25 23:51:55 EST 2021" docOffset="1187" starttimestamp="1614313778745" timestamp="1337133" />
  <Command __id="2847" _type="MoveCaretCommand" caretOffset="951" date="Thu Feb 25 23:51:56 EST 2021" docOffset="1052" starttimestamp="1614313778745" timestamp="1337833" />
  <Command __id="2848" _type="MoveCaretCommand" caretOffset="1010" date="Thu Feb 25 23:51:56 EST 2021" docOffset="1111" starttimestamp="1614313778745" timestamp="1338250" />
  <Command __id="2845" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:51:55 EST 2021" docASTNodeCount="603" docActiveCodeLength="3625" docExpressionCount="371" docLength="3724" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1337053">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private double h;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		System.out.println(friction);¶		angle = a * Math.PI/180;¶		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		"), Diff(DELETE,"System.out.println(h);¶		¶		"), Diff(EQUAL,"setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private double h;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		System.out.println(friction);
		angle = a * Math.PI/180;
		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
	
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="2849" _type="MoveCaretCommand" caretOffset="1037" date="Thu Feb 25 23:51:58 EST 2021" docOffset="1138" starttimestamp="1614313778745" timestamp="1339616" />
  <DocumentChange __id="2850" _type="Insert" date="Thu Feb 25 23:52:02 EST 2021" docASTNodeCount="603" docActiveCodeLength="3628" docExpressionCount="371" docLength="3727" length="3" offset="1138" starttimestamp="1614313778745" timestamp="1343914">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="2851" _type="InsertStringCommand" date="Thu Feb 25 23:52:02 EST 2021" starttimestamp="1614313778745" timestamp="1343916" timestamp2="1343916">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2852" _type="Insert" date="Thu Feb 25 23:52:04 EST 2021" docASTNodeCount="607" docActiveCodeLength="3638" docExpressionCount="373" docLength="3737" length="10" offset="1141" repeat="10" starttimestamp="1614313778745" timestamp="1346215" timestamp2="1348090">
    <text><![CDATA[System.out]]></text>
  </DocumentChange>
  <Command __id="2853" _type="InsertStringCommand" date="Thu Feb 25 23:52:04 EST 2021" starttimestamp="1614313778745" timestamp="1346216" timestamp2="1346216">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2855" _type="InsertStringCommand" date="Thu Feb 25 23:52:05 EST 2021" starttimestamp="1614313778745" timestamp="1346404" timestamp2="1346404">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2857" _type="InsertStringCommand" date="Thu Feb 25 23:52:05 EST 2021" starttimestamp="1614313778745" timestamp="1346473" timestamp2="1346473">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2859" _type="InsertStringCommand" date="Thu Feb 25 23:52:05 EST 2021" starttimestamp="1614313778745" timestamp="1346707" timestamp2="1346707">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2861" _type="InsertStringCommand" date="Thu Feb 25 23:52:05 EST 2021" starttimestamp="1614313778745" timestamp="1346843" timestamp2="1346843">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2863" _type="InsertStringCommand" date="Thu Feb 25 23:52:05 EST 2021" starttimestamp="1614313778745" timestamp="1347000" timestamp2="1347000">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2865" _type="InsertStringCommand" date="Thu Feb 25 23:52:06 EST 2021" starttimestamp="1614313778745" timestamp="1347574" timestamp2="1347574">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2866" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:52:06 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1347575" />
  <Command __id="2870" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:52:07 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1348452" />
  <DocumentChange __id="2871" _type="Replace" date="Thu Feb 25 23:52:07 EST 2021" docASTNodeCount="607" docActiveCodeLength="3639" docExpressionCount="375" docLength="3738" endLine="33" insertionLength="4" int_docASTNodeCount="605" int_docActiveCodeLength="3635" int_docExpressionCount="373" int_docLength="3734" length="3" offset="1148" startLine="33" starttimestamp="1614313778745" timestamp="1348454">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <Command __id="2872" _type="InsertStringCommand" date="Thu Feb 25 23:52:07 EST 2021" starttimestamp="1614313778745" timestamp="1348458" timestamp2="1348458">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2873" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:52:07 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1348459" />
  <DocumentChange __id="2874" _type="Insert" date="Thu Feb 25 23:52:07 EST 2021" docASTNodeCount="609" docActiveCodeLength="3648" docExpressionCount="376" docLength="3747" length="9" offset="1152" repeat="8" starttimestamp="1614313778745" timestamp="1348688" timestamp2="1350285">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <Command __id="2882" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:52:10 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1351791" />
  <DocumentChange __id="2883" _type="Replace" date="Thu Feb 25 23:52:10 EST 2021" docASTNodeCount="609" docActiveCodeLength="3649" docExpressionCount="376" docLength="3748" endLine="33" insertionLength="10" int_docASTNodeCount="607" int_docActiveCodeLength="3639" int_docExpressionCount="375" int_docLength="3738" length="9" offset="1152" startLine="33" starttimestamp="1614313778745" timestamp="1351793">
    <deletedText><![CDATA[println()]]></deletedText>
    <insertedText><![CDATA[println();]]></insertedText>
  </DocumentChange>
  <Command __id="2884" _type="InsertStringCommand" date="Thu Feb 25 23:52:10 EST 2021" starttimestamp="1614313778745" timestamp="1351799" timestamp2="1351799">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2885" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:52:10 EST 2021" starttimestamp="1614313778745" timestamp="1352207" />
  <Command __id="2888" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:52:11 EST 2021" starttimestamp="1614313778745" timestamp="1352499" />
  <Command __id="2889" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:52:11 EST 2021" starttimestamp="1614313778745" timestamp="1352684" />
  <DocumentChange __id="2890" _type="Insert" date="Thu Feb 25 23:52:14 EST 2021" docASTNodeCount="614" docActiveCodeLength="3665" docExpressionCount="381" docLength="3764" length="16" offset="1160" repeat="15" starttimestamp="1614313778745" timestamp="1355950" timestamp2="1360979">
    <text><![CDATA["g" + gravity.to]]></text>
  </DocumentChange>
  <Command __id="2891" _type="InsertStringCommand" date="Thu Feb 25 23:52:14 EST 2021" starttimestamp="1614313778745" timestamp="1355952" timestamp2="1355952">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="2893" _type="InsertStringCommand" date="Thu Feb 25 23:52:15 EST 2021" starttimestamp="1614313778745" timestamp="1356294" timestamp2="1356294">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2894" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:52:15 EST 2021" starttimestamp="1614313778745" timestamp="1357113" />
  <Command __id="2896" _type="InsertStringCommand" date="Thu Feb 25 23:52:16 EST 2021" starttimestamp="1614313778745" timestamp="1357547" timestamp2="1357547">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2898" _type="InsertStringCommand" date="Thu Feb 25 23:52:16 EST 2021" starttimestamp="1614313778745" timestamp="1357822" timestamp2="1357822">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="2900" _type="InsertStringCommand" date="Thu Feb 25 23:52:16 EST 2021" starttimestamp="1614313778745" timestamp="1357934" timestamp2="1357934">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2902" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1358257" timestamp2="1358257">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2904" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1358303" timestamp2="1358303">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2906" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1358376" timestamp2="1358376">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2908" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1358581" timestamp2="1358581">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2910" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1358725" timestamp2="1358725">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2912" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1359019" timestamp2="1359019">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2914" _type="InsertStringCommand" date="Thu Feb 25 23:52:17 EST 2021" starttimestamp="1614313778745" timestamp="1359168" timestamp2="1359168">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="2916" _type="InsertStringCommand" date="Thu Feb 25 23:52:19 EST 2021" starttimestamp="1614313778745" timestamp="1360554" timestamp2="1360554">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2917" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:52:19 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1360555" />
  <Command __id="2918" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:52:19 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1360569" />
  <Command __id="2920" _type="InsertStringCommand" date="Thu Feb 25 23:52:19 EST 2021" starttimestamp="1614313778745" timestamp="1360875" timestamp2="1360875">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2922" _type="InsertStringCommand" date="Thu Feb 25 23:52:19 EST 2021" starttimestamp="1614313778745" timestamp="1360980" timestamp2="1360980">
    <data><![CDATA[o]]></data>
  </Command>
  <DocumentChange __id="2923" _type="Delete" date="Thu Feb 25 23:52:20 EST 2021" docASTNodeCount="612" docActiveCodeLength="3662" docExpressionCount="379" docLength="3761" endLine="33" length="3" offset="1173" repeat="3" startLine="33" starttimestamp="1614313778745" timestamp="1361848" timestamp2="1362324">
    <text><![CDATA[.to]]></text>
  </DocumentChange>
  <Command __id="2924" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:20 EST 2021" starttimestamp="1614313778745" timestamp="1361853" />
  <Command __id="2926" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:20 EST 2021" starttimestamp="1614313778745" timestamp="1362015" />
  <Command __id="2928" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:21 EST 2021" starttimestamp="1614313778745" timestamp="1362325" />
  <DocumentChange __id="2929" _type="Insert" date="Thu Feb 25 23:52:21 EST 2021" docASTNodeCount="614" docActiveCodeLength="3671" docExpressionCount="381" docLength="3770" length="9" offset="1173" repeat="9" starttimestamp="1614313778745" timestamp="1363176" timestamp2="1365110">
    <text><![CDATA[.toString]]></text>
  </DocumentChange>
  <Command __id="2930" _type="InsertStringCommand" date="Thu Feb 25 23:52:21 EST 2021" starttimestamp="1614313778745" timestamp="1363177" timestamp2="1363177">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2931" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:52:21 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1363178" />
  <Command __id="2932" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:52:21 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1363186" />
  <Command __id="2934" _type="InsertStringCommand" date="Thu Feb 25 23:52:22 EST 2021" starttimestamp="1614313778745" timestamp="1363433" timestamp2="1363433">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2936" _type="InsertStringCommand" date="Thu Feb 25 23:52:22 EST 2021" starttimestamp="1614313778745" timestamp="1363517" timestamp2="1363517">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2938" _type="InsertStringCommand" date="Thu Feb 25 23:52:22 EST 2021" starttimestamp="1614313778745" timestamp="1364145" timestamp2="1364145">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2940" _type="InsertStringCommand" date="Thu Feb 25 23:52:23 EST 2021" starttimestamp="1614313778745" timestamp="1364320" timestamp2="1364320">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2942" _type="InsertStringCommand" date="Thu Feb 25 23:52:23 EST 2021" starttimestamp="1614313778745" timestamp="1364442" timestamp2="1364442">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2944" _type="InsertStringCommand" date="Thu Feb 25 23:52:23 EST 2021" starttimestamp="1614313778745" timestamp="1364567" timestamp2="1364567">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2946" _type="InsertStringCommand" date="Thu Feb 25 23:52:23 EST 2021" starttimestamp="1614313778745" timestamp="1364905" timestamp2="1364905">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2948" _type="InsertStringCommand" date="Thu Feb 25 23:52:23 EST 2021" starttimestamp="1614313778745" timestamp="1365111" timestamp2="1365111">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2950" _type="InsertStringCommand" date="Thu Feb 25 23:52:25 EST 2021" starttimestamp="1614313778745" timestamp="1367155" timestamp2="1367155">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2951" _type="InsertStringCommand" date="Thu Feb 25 23:52:25 EST 2021" starttimestamp="1614313778745" timestamp="1367189" timestamp2="1367189">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2953" _type="InsertStringCommand" date="Thu Feb 25 23:52:26 EST 2021" starttimestamp="1614313778745" timestamp="1367602" timestamp2="1367602">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2955" _type="InsertStringCommand" date="Thu Feb 25 23:52:26 EST 2021" starttimestamp="1614313778745" timestamp="1368048" timestamp2="1368048">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="2957" _type="InsertStringCommand" date="Thu Feb 25 23:52:26 EST 2021" starttimestamp="1614313778745" timestamp="1368174" timestamp2="1368174">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2958" _type="MoveCaretCommand" caretOffset="893" date="Thu Feb 25 23:52:27 EST 2021" docOffset="994" starttimestamp="1614313778745" timestamp="1369149" />
  <Command __id="2959" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:52:28 EST 2021" starttimestamp="1614313778745" timestamp="1369341" />
  <Command __id="2962" _type="SelectTextCommand" caretOffset="1065" date="Thu Feb 25 23:52:33 EST 2021" end="1083" start="1065" starttimestamp="1614313778745" timestamp="1374716" />
  <DocumentChange __id="2949" _type="Insert" date="Thu Feb 25 23:52:25 EST 2021" docASTNodeCount="614" docActiveCodeLength="3676" docExpressionCount="381" docLength="3775" length="5" offset="1182" repeat="4" starttimestamp="1614313778745" timestamp="1367152" timestamp2="1368173">
    <text><![CDATA[() + ]]></text>
  </DocumentChange>
  <DocumentChange __id="2964" _type="Delete" date="Thu Feb 25 23:52:36 EST 2021" docASTNodeCount="609" docActiveCodeLength="3649" docExpressionCount="376" docLength="3748" endLine="33" length="27" offset="1160" startLine="33" starttimestamp="1614313778745" timestamp="1377476">
    <text><![CDATA["g" + gravity.toString() + ]]></text>
  </DocumentChange>
  <DocumentChange __id="2967" _type="Delete" date="Thu Feb 25 23:52:37 EST 2021" docASTNodeCount="609" docActiveCodeLength="3647" docExpressionCount="376" docLength="3746" endLine="33" length="2" offset="1157" repeat="2" startLine="33" starttimestamp="1614313778745" timestamp="1378397" timestamp2="1378541">
    <text><![CDATA[ln]]></text>
  </DocumentChange>
  <DocumentChange __id="2971" _type="Insert" date="Thu Feb 25 23:52:37 EST 2021" docASTNodeCount="609" docActiveCodeLength="3648" docExpressionCount="376" docLength="3747" length="1" offset="1157" starttimestamp="1614313778745" timestamp="1378646">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <DocumentChange __id="2974" _type="Insert" date="Thu Feb 25 23:52:38 EST 2021" docASTNodeCount="610" docActiveCodeLength="3651" docExpressionCount="377" docLength="3750" length="3" offset="1159" repeat="2" starttimestamp="1614313778745" timestamp="1379728" timestamp2="1380511">
    <text><![CDATA["s"]]></text>
  </DocumentChange>
  <DocumentChange __id="2978" _type="Delete" date="Thu Feb 25 23:52:39 EST 2021" docASTNodeCount="610" docActiveCodeLength="3650" docExpressionCount="377" docLength="3749" endLine="33" length="1" offset="1160" startLine="33" starttimestamp="1614313778745" timestamp="1381128">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="2980" _type="Insert" date="Thu Feb 25 23:52:41 EST 2021" docASTNodeCount="610" docActiveCodeLength="3653" docExpressionCount="377" docLength="3752" length="3" offset="1160" repeat="3" starttimestamp="1614313778745" timestamp="1382522" timestamp2="1384148">
    <text><![CDATA[%s%]]></text>
  </DocumentChange>
  <DocumentChange __id="2986" _type="Insert" date="Thu Feb 25 23:52:49 EST 2021" docASTNodeCount="610" docActiveCodeLength="3654" docExpressionCount="377" docLength="3753" length="1" offset="1163" starttimestamp="1614313778745" timestamp="1390372">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <Command __id="2963" _type="SelectTextCommand" caretOffset="1059" date="Thu Feb 25 23:52:35 EST 2021" end="1086" start="1059" starttimestamp="1614313778745" timestamp="1376949" />
  <Command __id="2965" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:36 EST 2021" starttimestamp="1614313778745" timestamp="1377481" />
  <Command __id="2966" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:52:36 EST 2021" starttimestamp="1614313778745" timestamp="1378071" />
  <Command __id="2968" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:37 EST 2021" starttimestamp="1614313778745" timestamp="1378402" />
  <Command __id="2970" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:37 EST 2021" starttimestamp="1614313778745" timestamp="1378541" />
  <Command __id="2972" _type="InsertStringCommand" date="Thu Feb 25 23:52:37 EST 2021" starttimestamp="1614313778745" timestamp="1378647" timestamp2="1378647">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:52:37 EST 2021" starttimestamp="1614313778745" timestamp="1379054" />
  <Command __id="2975" _type="InsertStringCommand" date="Thu Feb 25 23:52:38 EST 2021" starttimestamp="1614313778745" timestamp="1379731" timestamp2="1379731">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="2977" _type="InsertStringCommand" date="Thu Feb 25 23:52:39 EST 2021" starttimestamp="1614313778745" timestamp="1380512" timestamp2="1380512">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:39 EST 2021" starttimestamp="1614313778745" timestamp="1381129" />
  <Command __id="2981" _type="InsertStringCommand" date="Thu Feb 25 23:52:41 EST 2021" starttimestamp="1614313778745" timestamp="1382522" timestamp2="1382522">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2983" _type="InsertStringCommand" date="Thu Feb 25 23:52:41 EST 2021" starttimestamp="1614313778745" timestamp="1382773" timestamp2="1382773">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2985" _type="InsertStringCommand" date="Thu Feb 25 23:52:42 EST 2021" starttimestamp="1614313778745" timestamp="1384149" timestamp2="1384149">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2987" _type="InsertStringCommand" date="Thu Feb 25 23:52:49 EST 2021" starttimestamp="1614313778745" timestamp="1390373" timestamp2="1390373">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2989" _type="InsertStringCommand" date="Thu Feb 25 23:52:56 EST 2021" starttimestamp="1614313778745" timestamp="1397937" timestamp2="1397937">
    <data><![CDATA[%]]></data>
  </Command>
  <DocumentChange __id="2988" _type="Insert" date="Thu Feb 25 23:52:56 EST 2021" docASTNodeCount="610" docActiveCodeLength="3655" docExpressionCount="377" docLength="3754" length="1" offset="1164" starttimestamp="1614313778745" timestamp="1397935">
    <text><![CDATA[%]]></text>
  </DocumentChange>
  <DocumentChange __id="2991" _type="Delete" date="Thu Feb 25 23:52:59 EST 2021" docASTNodeCount="609" docActiveCodeLength="3646" docExpressionCount="376" docLength="3745" endLine="33" length="9" offset="1157" repeat="9" startLine="33" starttimestamp="1614313778745" timestamp="1400839" timestamp2="1401901">
    <text><![CDATA[f("%s%f%"]]></text>
  </DocumentChange>
  <DocumentChange __id="3009" _type="Insert" date="Thu Feb 25 23:53:01 EST 2021" docASTNodeCount="609" docActiveCodeLength="3650" docExpressionCount="376" docLength="3749" length="4" offset="1157" repeat="3" starttimestamp="1614313778745" timestamp="1402779" timestamp2="1404148">
    <text><![CDATA[ln()]]></text>
  </DocumentChange>
  <DocumentChange __id="3017" _type="Delete" date="Thu Feb 25 23:53:04 EST 2021" docASTNodeCount="609" docActiveCodeLength="3649" docExpressionCount="376" docLength="3748" endLine="33" length="1" offset="1161" startLine="33" starttimestamp="1614313778745" timestamp="1405553">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="2990" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:52:59 EST 2021" starttimestamp="1614313778745" timestamp="1400277" />
  <Command __id="2992" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:59 EST 2021" starttimestamp="1614313778745" timestamp="1400841" />
  <Command __id="2994" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:59 EST 2021" starttimestamp="1614313778745" timestamp="1401003" />
  <Command __id="2996" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:52:59 EST 2021" starttimestamp="1614313778745" timestamp="1401253" />
  <Command __id="2998" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:00 EST 2021" starttimestamp="1614313778745" timestamp="1401303" />
  <Command __id="3000" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:00 EST 2021" starttimestamp="1614313778745" timestamp="1401352" />
  <Command __id="3002" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:00 EST 2021" starttimestamp="1614313778745" timestamp="1401403" />
  <Command __id="3004" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:00 EST 2021" starttimestamp="1614313778745" timestamp="1401454" />
  <Command __id="3006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:00 EST 2021" starttimestamp="1614313778745" timestamp="1401708" />
  <Command __id="3008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:00 EST 2021" starttimestamp="1614313778745" timestamp="1401902" />
  <Command __id="3010" _type="InsertStringCommand" date="Thu Feb 25 23:53:01 EST 2021" starttimestamp="1614313778745" timestamp="1402780" timestamp2="1402780">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3012" _type="InsertStringCommand" date="Thu Feb 25 23:53:01 EST 2021" starttimestamp="1614313778745" timestamp="1403083" timestamp2="1403083">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3014" _type="InsertStringCommand" date="Thu Feb 25 23:53:02 EST 2021" starttimestamp="1614313778745" timestamp="1404150" timestamp2="1404150">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:03 EST 2021" starttimestamp="1614313778745" timestamp="1404888" />
  <Command __id="3016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:03 EST 2021" starttimestamp="1614313778745" timestamp="1405073" />
  <Command __id="3018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:04 EST 2021" starttimestamp="1614313778745" timestamp="1405555" />
  <Command __id="3019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:04 EST 2021" starttimestamp="1614313778745" timestamp="1406098" />
  <Command __id="3021" _type="InsertStringCommand" date="Thu Feb 25 23:53:08 EST 2021" starttimestamp="1614313778745" timestamp="1409828" timestamp2="1409828">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3023" _type="InsertStringCommand" date="Thu Feb 25 23:53:08 EST 2021" starttimestamp="1614313778745" timestamp="1409872" timestamp2="1409872">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3025" _type="InsertStringCommand" date="Thu Feb 25 23:53:08 EST 2021" starttimestamp="1614313778745" timestamp="1409962" timestamp2="1409962">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3027" _type="InsertStringCommand" date="Thu Feb 25 23:53:08 EST 2021" starttimestamp="1614313778745" timestamp="1410150" timestamp2="1410150">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3029" _type="InsertStringCommand" date="Thu Feb 25 23:53:09 EST 2021" starttimestamp="1614313778745" timestamp="1410284" timestamp2="1410284">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3031" _type="InsertStringCommand" date="Thu Feb 25 23:53:09 EST 2021" starttimestamp="1614313778745" timestamp="1410546" timestamp2="1410546">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3033" _type="InsertStringCommand" date="Thu Feb 25 23:53:09 EST 2021" starttimestamp="1614313778745" timestamp="1410618" timestamp2="1410618">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="3034" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:10 EST 2021" starttimestamp="1614313778745" timestamp="1411262" />
  <Command __id="3035" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:10 EST 2021" starttimestamp="1614313778745" timestamp="1411585" />
  <Command __id="3037" _type="InsertStringCommand" date="Thu Feb 25 23:53:10 EST 2021" starttimestamp="1614313778745" timestamp="1411927" timestamp2="1411927">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3038" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:53:11 EST 2021" starttimestamp="1614313778745" timestamp="1412268" />
  <Command __id="3041" _type="SelectTextCommand" caretOffset="1040" date="Thu Feb 25 23:53:13 EST 2021" end="1068" start="1040" starttimestamp="1614313778745" timestamp="1414297" />
  <Command __id="3042" _type="CopyCommand" date="Thu Feb 25 23:53:13 EST 2021" starttimestamp="1614313778745" timestamp="1414470" />
  <Command __id="3043" _type="MoveCaretCommand" caretOffset="1037" date="Thu Feb 25 23:53:13 EST 2021" docOffset="1138" starttimestamp="1614313778745" timestamp="1414932" />
  <Command __id="3045" _type="InsertStringCommand" date="Thu Feb 25 23:53:14 EST 2021" starttimestamp="1614313778745" timestamp="1415428" timestamp2="1415428">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3047" _type="PasteCommand" date="Thu Feb 25 23:53:14 EST 2021" starttimestamp="1614313778745" timestamp="1415663" />
  <Command __id="3048" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:14 EST 2021" starttimestamp="1614313778745" timestamp="1415955" />
  <Command __id="3049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:14 EST 2021" starttimestamp="1614313778745" timestamp="1416220" />
  <Command __id="3051" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1416561" />
  <Command __id="3053" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1416809" />
  <Command __id="3055" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1416859" />
  <Command __id="3057" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1416909" />
  <Command __id="3059" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1416959" />
  <Command __id="3061" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1417009" />
  <Command __id="3063" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:15 EST 2021" starttimestamp="1614313778745" timestamp="1417175" />
  <Command __id="3065" _type="InsertStringCommand" date="Thu Feb 25 23:53:16 EST 2021" starttimestamp="1614313778745" timestamp="1417766" timestamp2="1417766">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="3067" _type="InsertStringCommand" date="Thu Feb 25 23:53:17 EST 2021" starttimestamp="1614313778745" timestamp="1418257" timestamp2="1418257">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3068" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:17 EST 2021" starttimestamp="1614313778745" timestamp="1418451" />
  <Command __id="3069" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:17 EST 2021" starttimestamp="1614313778745" timestamp="1418701" />
  <Command __id="3070" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:53:17 EST 2021" starttimestamp="1614313778745" timestamp="1418855" />
  <Command __id="3071" _type="SelectTextCommand" caretOffset="1040" date="Thu Feb 25 23:53:20 EST 2021" end="1095" start="1040" starttimestamp="1614313778745" timestamp="1421440" />
  <Command __id="3072" _type="CopyCommand" date="Thu Feb 25 23:53:20 EST 2021" starttimestamp="1614313778745" timestamp="1421601" />
  <Command __id="3073" _type="MoveCaretCommand" caretOffset="1098" date="Thu Feb 25 23:53:20 EST 2021" docOffset="1199" starttimestamp="1614313778745" timestamp="1422017" />
  <Command __id="3075" _type="PasteCommand" date="Thu Feb 25 23:53:20 EST 2021" starttimestamp="1614313778745" timestamp="1422153" />
  <Command __id="3076" _type="MoveCaretCommand" caretOffset="1119" date="Thu Feb 25 23:53:21 EST 2021" docOffset="1220" starttimestamp="1614313778745" timestamp="1422989" />
  <Command __id="3078" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:22 EST 2021" starttimestamp="1614313778745" timestamp="1423496" />
  <Command __id="3080" _type="InsertStringCommand" date="Thu Feb 25 23:53:22 EST 2021" starttimestamp="1614313778745" timestamp="1423800" timestamp2="1423800">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3081" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:53:23 EST 2021" starttimestamp="1614313778745" timestamp="1424263" />
  <Command __id="3082" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:23 EST 2021" starttimestamp="1614313778745" timestamp="1424445" />
  <Command __id="3083" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:23 EST 2021" starttimestamp="1614313778745" timestamp="1424695" />
  <Command __id="3084" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:23 EST 2021" starttimestamp="1614313778745" timestamp="1424745" />
  <Command __id="3085" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:23 EST 2021" starttimestamp="1614313778745" timestamp="1424796" />
  <Command __id="3086" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:23 EST 2021" starttimestamp="1614313778745" timestamp="1424846" />
  <Command __id="3088" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425457" />
  <Command __id="3090" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425707" />
  <Command __id="3092" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425757" />
  <Command __id="3094" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425807" />
  <Command __id="3096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425857" />
  <Command __id="3098" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425907" />
  <Command __id="3100" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:24 EST 2021" starttimestamp="1614313778745" timestamp="1425957" />
  <Command __id="3102" _type="InsertStringCommand" date="Thu Feb 25 23:53:25 EST 2021" starttimestamp="1614313778745" timestamp="1426659" timestamp2="1426659">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3104" _type="InsertStringCommand" date="Thu Feb 25 23:53:25 EST 2021" starttimestamp="1614313778745" timestamp="1426753" timestamp2="1426753">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3106" _type="InsertStringCommand" date="Thu Feb 25 23:53:25 EST 2021" starttimestamp="1614313778745" timestamp="1427082" timestamp2="1427082">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3108" _type="InsertStringCommand" date="Thu Feb 25 23:53:26 EST 2021" starttimestamp="1614313778745" timestamp="1427325" timestamp2="1427325">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3110" _type="InsertStringCommand" date="Thu Feb 25 23:53:26 EST 2021" starttimestamp="1614313778745" timestamp="1427556" timestamp2="1427556">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3112" _type="InsertStringCommand" date="Thu Feb 25 23:53:26 EST 2021" starttimestamp="1614313778745" timestamp="1427561" timestamp2="1427561">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3114" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:26 EST 2021" starttimestamp="1614313778745" timestamp="1428141" />
  <Command __id="3116" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:27 EST 2021" starttimestamp="1614313778745" timestamp="1428273" />
  <Command __id="3118" _type="InsertStringCommand" date="Thu Feb 25 23:53:27 EST 2021" starttimestamp="1614313778745" timestamp="1428816" timestamp2="1428816">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3120" _type="InsertStringCommand" date="Thu Feb 25 23:53:27 EST 2021" starttimestamp="1614313778745" timestamp="1428961" timestamp2="1428961">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3121" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:53:27 EST 2021" starttimestamp="1614313778745" timestamp="1429164" />
  <Command __id="3124" _type="SelectTextCommand" caretOffset="1013" date="Thu Feb 25 23:53:30 EST 2021" end="1152" start="1013" starttimestamp="1614313778745" timestamp="1432216" />
  <Command __id="3125" _type="MoveCaretCommand" caretOffset="1040" date="Thu Feb 25 23:53:31 EST 2021" docOffset="1141" starttimestamp="1614313778745" timestamp="1432684" />
  <Command __id="3126" _type="SelectTextCommand" caretOffset="1152" date="Thu Feb 25 23:53:32 EST 2021" end="1152" start="1040" starttimestamp="1614313778745" timestamp="1434198" />
  <Command __id="3127" _type="CopyCommand" date="Thu Feb 25 23:53:33 EST 2021" starttimestamp="1614313778745" timestamp="1434304" />
  <Command __id="3128" _type="MoveCaretCommand" caretOffset="1152" date="Thu Feb 25 23:53:33 EST 2021" docOffset="1253" starttimestamp="1614313778745" timestamp="1434682" />
  <Command __id="3130" _type="InsertStringCommand" date="Thu Feb 25 23:53:33 EST 2021" starttimestamp="1614313778745" timestamp="1435197" timestamp2="1435197">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3132" _type="PasteCommand" date="Thu Feb 25 23:53:34 EST 2021" starttimestamp="1614313778745" timestamp="1435369" />
  <Command __id="3133" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:53:34 EST 2021" starttimestamp="1614313778745" timestamp="1436179" />
  <Command __id="3134" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:53:35 EST 2021" starttimestamp="1614313778745" timestamp="1436379" />
  <Command __id="3135" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:35 EST 2021" starttimestamp="1614313778745" timestamp="1436887" />
  <Command __id="3137" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:35 EST 2021" starttimestamp="1614313778745" timestamp="1437173" />
  <Command __id="3139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1437424" />
  <Command __id="3141" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1437474" />
  <Command __id="3143" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1437524" />
  <Command __id="3145" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1437574" />
  <Command __id="3147" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1437731" />
  <Command __id="3149" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1437890" />
  <Command __id="3151" _type="InsertStringCommand" date="Thu Feb 25 23:53:36 EST 2021" starttimestamp="1614313778745" timestamp="1438088" timestamp2="1438088">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3153" _type="InsertStringCommand" date="Thu Feb 25 23:53:37 EST 2021" starttimestamp="1614313778745" timestamp="1438296" timestamp2="1438296">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3155" _type="InsertStringCommand" date="Thu Feb 25 23:53:37 EST 2021" starttimestamp="1614313778745" timestamp="1438732" timestamp2="1438732">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3157" _type="InsertStringCommand" date="Thu Feb 25 23:53:37 EST 2021" starttimestamp="1614313778745" timestamp="1438835" timestamp2="1438835">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3159" _type="InsertStringCommand" date="Thu Feb 25 23:53:37 EST 2021" starttimestamp="1614313778745" timestamp="1439076" timestamp2="1439076">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3161" _type="InsertStringCommand" date="Thu Feb 25 23:53:37 EST 2021" starttimestamp="1614313778745" timestamp="1439150" timestamp2="1439150">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3163" _type="InsertStringCommand" date="Thu Feb 25 23:53:37 EST 2021" starttimestamp="1614313778745" timestamp="1439205" timestamp2="1439205">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3165" _type="InsertStringCommand" date="Thu Feb 25 23:53:38 EST 2021" starttimestamp="1614313778745" timestamp="1439283" timestamp2="1439283">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3166" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:53:38 EST 2021" starttimestamp="1614313778745" timestamp="1439813" />
  <Command __id="3167" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:38 EST 2021" starttimestamp="1614313778745" timestamp="1440017" />
  <Command __id="3168" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:38 EST 2021" starttimestamp="1614313778745" timestamp="1440175" />
  <Command __id="3169" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:53:39 EST 2021" starttimestamp="1614313778745" timestamp="1440555" />
  <Command __id="3171" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:39 EST 2021" starttimestamp="1614313778745" timestamp="1440863" />
  <Command __id="3173" _type="InsertStringCommand" date="Thu Feb 25 23:53:39 EST 2021" starttimestamp="1614313778745" timestamp="1440954" timestamp2="1440954">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3174" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:53:40 EST 2021" starttimestamp="1614313778745" timestamp="1441342" />
  <Command __id="3175" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:53:40 EST 2021" starttimestamp="1614313778745" timestamp="1441604" />
  <Command __id="3177" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:40 EST 2021" starttimestamp="1614313778745" timestamp="1442063" />
  <Command __id="3179" _type="InsertStringCommand" date="Thu Feb 25 23:53:41 EST 2021" starttimestamp="1614313778745" timestamp="1442535" timestamp2="1442535">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3180" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:53:41 EST 2021" starttimestamp="1614313778745" timestamp="1443038" />
  <Command __id="3181" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:41 EST 2021" starttimestamp="1614313778745" timestamp="1443219" />
  <Command __id="3182" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:42 EST 2021" starttimestamp="1614313778745" timestamp="1443469" />
  <Command __id="3183" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:42 EST 2021" starttimestamp="1614313778745" timestamp="1443519" />
  <Command __id="3184" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:53:42 EST 2021" starttimestamp="1614313778745" timestamp="1443571" />
  <Command __id="3186" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:42 EST 2021" starttimestamp="1614313778745" timestamp="1444128" />
  <Command __id="3188" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:43 EST 2021" starttimestamp="1614313778745" timestamp="1444378" />
  <Command __id="3190" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:43 EST 2021" starttimestamp="1614313778745" timestamp="1444428" />
  <Command __id="3192" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:43 EST 2021" starttimestamp="1614313778745" timestamp="1444478" />
  <Command __id="3194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:43 EST 2021" starttimestamp="1614313778745" timestamp="1444527" />
  <Command __id="3196" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:53:43 EST 2021" starttimestamp="1614313778745" timestamp="1444578" />
  <Command __id="3198" _type="InsertStringCommand" date="Thu Feb 25 23:53:44 EST 2021" starttimestamp="1614313778745" timestamp="1445303" timestamp2="1445303">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3200" _type="InsertStringCommand" date="Thu Feb 25 23:53:44 EST 2021" starttimestamp="1614313778745" timestamp="1445383" timestamp2="1445383">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3202" _type="InsertStringCommand" date="Thu Feb 25 23:53:44 EST 2021" starttimestamp="1614313778745" timestamp="1445591" timestamp2="1445591">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3204" _type="InsertStringCommand" date="Thu Feb 25 23:53:44 EST 2021" starttimestamp="1614313778745" timestamp="1445770" timestamp2="1445770">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3220" _type="ShellCommand" date="Thu Feb 25 23:54:43 EST 2021" starttimestamp="1614313778745" timestamp="1504744" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3221" _type="MoveCaretCommand" caretOffset="1341" date="Thu Feb 25 23:54:45 EST 2021" docOffset="1442" starttimestamp="1614313778745" timestamp="1506884" />
  <Command __id="3222" _type="MoveCaretCommand" caretOffset="1266" date="Thu Feb 25 23:54:48 EST 2021" docOffset="1367" starttimestamp="1614313778745" timestamp="1509573" />
  <Command __id="3223" _type="MoveCaretCommand" caretOffset="1266" date="Thu Feb 25 23:54:49 EST 2021" docOffset="1367" starttimestamp="1614313778745" timestamp="1511049" />
  <Command __id="3224" _type="MoveCaretCommand" caretOffset="1341" date="Thu Feb 25 23:54:50 EST 2021" docOffset="1442" starttimestamp="1614313778745" timestamp="1511316" />
  <DocumentChange __id="3020" _type="Insert" date="Thu Feb 25 23:53:08 EST 2021" docASTNodeCount="610" docActiveCodeLength="3656" docExpressionCount="377" docLength="3755" length="7" offset="1160" repeat="7" starttimestamp="1614313778745" timestamp="1409826" timestamp2="1410617">
    <text><![CDATA[gravity]]></text>
  </DocumentChange>
  <DocumentChange __id="3036" _type="Insert" date="Thu Feb 25 23:53:10 EST 2021" docASTNodeCount="610" docActiveCodeLength="3659" docExpressionCount="377" docLength="3758" length="3" offset="1169" starttimestamp="1614313778745" timestamp="1411925">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3044" _type="Insert" date="Thu Feb 25 23:53:14 EST 2021" docASTNodeCount="610" docActiveCodeLength="3662" docExpressionCount="377" docLength="3761" length="3" offset="1138" starttimestamp="1614313778745" timestamp="1415427">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3046" _type="Replace" date="Thu Feb 25 23:53:14 EST 2021" docASTNodeCount="617" docActiveCodeLength="3690" docExpressionCount="383" docLength="3789" endLine="33" insertionLength="30" int_docASTNodeCount="610" int_docActiveCodeLength="3660" int_docExpressionCount="377" int_docLength="3759" length="2" offset="1139" startLine="33" starttimestamp="1614313778745" timestamp="1415660">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println(gravity);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3050" _type="Delete" date="Thu Feb 25 23:53:15 EST 2021" docASTNodeCount="616" docActiveCodeLength="3683" docExpressionCount="382" docLength="3782" endLine="33" length="7" offset="1160" repeat="7" startLine="33" starttimestamp="1614313778745" timestamp="1416558" timestamp2="1417173">
    <text><![CDATA[gravity]]></text>
  </DocumentChange>
  <DocumentChange __id="3064" _type="Insert" date="Thu Feb 25 23:53:16 EST 2021" docASTNodeCount="617" docActiveCodeLength="3686" docExpressionCount="383" docLength="3785" length="3" offset="1160" repeat="2" starttimestamp="1614313778745" timestamp="1417763" timestamp2="1418257">
    <text><![CDATA["g"]]></text>
  </DocumentChange>
  <DocumentChange __id="3074" _type="Replace" date="Thu Feb 25 23:53:20 EST 2021" docASTNodeCount="631" docActiveCodeLength="3741" docExpressionCount="395" docLength="3840" endLine="35" insertionLength="57" int_docASTNodeCount="617" int_docActiveCodeLength="3684" int_docExpressionCount="383" int_docLength="3783" length="2" offset="1197" startLine="35" starttimestamp="1614313778745" timestamp="1422148">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("g");
		System.out.println(gravity);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3077" _type="Delete" date="Thu Feb 25 23:53:22 EST 2021" docASTNodeCount="631" docActiveCodeLength="3740" docExpressionCount="395" docLength="3839" endLine="35" length="1" offset="1219" startLine="35" starttimestamp="1614313778745" timestamp="1423495">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="3079" _type="Insert" date="Thu Feb 25 23:53:22 EST 2021" docASTNodeCount="631" docActiveCodeLength="3741" docExpressionCount="395" docLength="3840" length="1" offset="1219" starttimestamp="1614313778745" timestamp="1423799">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="3087" _type="Delete" date="Thu Feb 25 23:53:24 EST 2021" docASTNodeCount="630" docActiveCodeLength="3734" docExpressionCount="394" docLength="3833" endLine="36" length="7" offset="1245" repeat="7" startLine="36" starttimestamp="1614313778745" timestamp="1425456" timestamp2="1425955">
    <text><![CDATA[gravity]]></text>
  </DocumentChange>
  <DocumentChange __id="3101" _type="Insert" date="Thu Feb 25 23:53:25 EST 2021" docASTNodeCount="631" docActiveCodeLength="3740" docExpressionCount="395" docLength="3839" length="6" offset="1245" repeat="6" starttimestamp="1614313778745" timestamp="1426658" timestamp2="1427560">
    <text><![CDATA[lengrt]]></text>
  </DocumentChange>
  <DocumentChange __id="3113" _type="Delete" date="Thu Feb 25 23:53:26 EST 2021" docASTNodeCount="631" docActiveCodeLength="3738" docExpressionCount="395" docLength="3837" endLine="36" length="2" offset="1249" repeat="2" startLine="36" starttimestamp="1614313778745" timestamp="1428140" timestamp2="1428272">
    <text><![CDATA[rt]]></text>
  </DocumentChange>
  <DocumentChange __id="3117" _type="Insert" date="Thu Feb 25 23:53:27 EST 2021" docASTNodeCount="631" docActiveCodeLength="3740" docExpressionCount="395" docLength="3839" length="2" offset="1249" repeat="2" starttimestamp="1614313778745" timestamp="1428815" timestamp2="1428960">
    <text><![CDATA[th]]></text>
  </DocumentChange>
  <DocumentChange __id="3129" _type="Insert" date="Thu Feb 25 23:53:33 EST 2021" docASTNodeCount="631" docActiveCodeLength="3743" docExpressionCount="395" docLength="3842" length="3" offset="1253" starttimestamp="1614313778745" timestamp="1435196">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3131" _type="Replace" date="Thu Feb 25 23:53:34 EST 2021" docASTNodeCount="659" docActiveCodeLength="3855" docExpressionCount="419" docLength="3954" endLine="37" insertionLength="114" int_docASTNodeCount="631" int_docActiveCodeLength="3741" int_docExpressionCount="395" int_docLength="3840" length="2" offset="1254" startLine="37" starttimestamp="1614313778745" timestamp="1435364">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("g");
		System.out.println(gravity);
		System.out.println("l");
		System.out.println(length);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3136" _type="Delete" date="Thu Feb 25 23:53:35 EST 2021" docASTNodeCount="658" docActiveCodeLength="3848" docExpressionCount="418" docLength="3947" endLine="38" length="7" offset="1302" repeat="7" startLine="38" starttimestamp="1614313778745" timestamp="1437172" timestamp2="1437888">
    <text><![CDATA[gravity]]></text>
  </DocumentChange>
  <DocumentChange __id="3150" _type="Insert" date="Thu Feb 25 23:53:36 EST 2021" docASTNodeCount="659" docActiveCodeLength="3856" docExpressionCount="419" docLength="3955" length="8" offset="1302" repeat="8" starttimestamp="1614313778745" timestamp="1438087" timestamp2="1439281">
    <text><![CDATA[friction]]></text>
  </DocumentChange>
  <DocumentChange __id="3170" _type="Delete" date="Thu Feb 25 23:53:39 EST 2021" docASTNodeCount="659" docActiveCodeLength="3855" docExpressionCount="419" docLength="3954" endLine="37" length="1" offset="1276" startLine="37" starttimestamp="1614313778745" timestamp="1440862">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="3172" _type="Insert" date="Thu Feb 25 23:53:39 EST 2021" docASTNodeCount="659" docActiveCodeLength="3856" docExpressionCount="419" docLength="3955" length="1" offset="1276" starttimestamp="1614313778745" timestamp="1440953">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <DocumentChange __id="3176" _type="Delete" date="Thu Feb 25 23:53:40 EST 2021" docASTNodeCount="659" docActiveCodeLength="3855" docExpressionCount="419" docLength="3954" endLine="39" length="1" offset="1335" startLine="39" starttimestamp="1614313778745" timestamp="1442062">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="3178" _type="Insert" date="Thu Feb 25 23:53:41 EST 2021" docASTNodeCount="659" docActiveCodeLength="3856" docExpressionCount="419" docLength="3955" length="1" offset="1335" starttimestamp="1614313778745" timestamp="1442534">
    <text><![CDATA[m]]></text>
  </DocumentChange>
  <DocumentChange __id="3185" _type="Delete" date="Thu Feb 25 23:53:42 EST 2021" docASTNodeCount="658" docActiveCodeLength="3850" docExpressionCount="418" docLength="3949" endLine="40" length="6" offset="1361" repeat="6" startLine="40" starttimestamp="1614313778745" timestamp="1444127" timestamp2="1444577">
    <text><![CDATA[length]]></text>
  </DocumentChange>
  <DocumentChange __id="3197" _type="Insert" date="Thu Feb 25 23:53:44 EST 2021" docASTNodeCount="659" docActiveCodeLength="3854" docExpressionCount="419" docLength="3953" length="4" offset="1361" repeat="4" starttimestamp="1614313778745" timestamp="1445302" timestamp2="1445769">
    <text><![CDATA[mass]]></text>
  </DocumentChange>
  <DocumentChange __id="3228" _type="Insert" date="Thu Feb 25 23:54:53 EST 2021" docASTNodeCount="659" docActiveCodeLength="3857" docExpressionCount="419" docLength="3956" length="3" offset="1442" starttimestamp="1614313778745" timestamp="1515218">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="3225" _type="SelectTextCommand" caretOffset="1214" date="Thu Feb 25 23:54:52 EST 2021" end="1266" start="1214" starttimestamp="1614313778745" timestamp="1513452" />
  <Command __id="3226" _type="CopyCommand" date="Thu Feb 25 23:54:52 EST 2021" starttimestamp="1614313778745" timestamp="1513579" />
  <Command __id="3227" _type="MoveCaretCommand" caretOffset="1341" date="Thu Feb 25 23:54:53 EST 2021" docOffset="1442" starttimestamp="1614313778745" timestamp="1514332" />
  <Command __id="3229" _type="InsertStringCommand" date="Thu Feb 25 23:54:53 EST 2021" starttimestamp="1614313778745" timestamp="1515219" timestamp2="1515219">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3231" _type="PasteCommand" date="Thu Feb 25 23:54:54 EST 2021" starttimestamp="1614313778745" timestamp="1515358" />
  <Command __id="3232" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:54:55 EST 2021" starttimestamp="1614313778745" timestamp="1516411" />
  <Command __id="3233" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:54:55 EST 2021" starttimestamp="1614313778745" timestamp="1516673" />
  <Command __id="3234" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:54:55 EST 2021" starttimestamp="1614313778745" timestamp="1516865" />
  <Command __id="3235" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Thu Feb 25 23:54:55 EST 2021" starttimestamp="1614313778745" timestamp="1517007" />
  <Command __id="3237" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:54:56 EST 2021" starttimestamp="1614313778745" timestamp="1517334" />
  <Command __id="3239" _type="InsertStringCommand" date="Thu Feb 25 23:54:56 EST 2021" starttimestamp="1614313778745" timestamp="1517935" timestamp2="1517935">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3240" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:54:57 EST 2021" starttimestamp="1614313778745" timestamp="1518441" />
  <Command __id="3241" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:54:57 EST 2021" starttimestamp="1614313778745" timestamp="1518629" />
  <Command __id="3242" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:54:57 EST 2021" starttimestamp="1614313778745" timestamp="1518792" />
  <Command __id="3244" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:54:57 EST 2021" starttimestamp="1614313778745" timestamp="1519112" />
  <Command __id="3246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:54:58 EST 2021" starttimestamp="1614313778745" timestamp="1519283" />
  <Command __id="3248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:54:58 EST 2021" starttimestamp="1614313778745" timestamp="1519410" />
  <Command __id="3250" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:54:58 EST 2021" starttimestamp="1614313778745" timestamp="1519550" />
  <Command __id="3252" _type="InsertStringCommand" date="Thu Feb 25 23:54:58 EST 2021" starttimestamp="1614313778745" timestamp="1520165" timestamp2="1520165">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3253" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Thu Feb 25 23:54:59 EST 2021" starttimestamp="1614313778745" timestamp="1520347" />
  <Command __id="3256" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:54:59 EST 2021" starttimestamp="1614313778745" timestamp="1520928" />
  <Command __id="3258" _type="InsertStringCommand" date="Thu Feb 25 23:54:59 EST 2021" starttimestamp="1614313778745" timestamp="1521225" timestamp2="1521225">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:55:00 EST 2021" starttimestamp="1614313778745" timestamp="1521938" />
  <Command __id="3262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:55:00 EST 2021" starttimestamp="1614313778745" timestamp="1522082" />
  <Command __id="3264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:55:01 EST 2021" starttimestamp="1614313778745" timestamp="1522366" />
  <Command __id="3265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Thu Feb 25 23:55:01 EST 2021" starttimestamp="1614313778745" timestamp="1522842" />
  <Command __id="3267" _type="InsertStringCommand" date="Thu Feb 25 23:55:01 EST 2021" starttimestamp="1614313778745" timestamp="1523117" timestamp2="1523117">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3269" _type="InsertStringCommand" date="Thu Feb 25 23:55:02 EST 2021" starttimestamp="1614313778745" timestamp="1523709" timestamp2="1523709">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3271" _type="InsertStringCommand" date="Thu Feb 25 23:55:02 EST 2021" starttimestamp="1614313778745" timestamp="1523913" timestamp2="1523913">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="3273" _type="InsertStringCommand" date="Thu Feb 25 23:55:02 EST 2021" starttimestamp="1614313778745" timestamp="1523961" timestamp2="1523961">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3275" _type="InsertStringCommand" date="Thu Feb 25 23:55:02 EST 2021" starttimestamp="1614313778745" timestamp="1524124" timestamp2="1524124">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3277" _type="InsertStringCommand" date="Thu Feb 25 23:55:02 EST 2021" starttimestamp="1614313778745" timestamp="1524172" timestamp2="1524172">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3279" _type="InsertStringCommand" date="Thu Feb 25 23:55:03 EST 2021" starttimestamp="1614313778745" timestamp="1524355" timestamp2="1524355">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3281" _type="InsertStringCommand" date="Thu Feb 25 23:55:03 EST 2021" starttimestamp="1614313778745" timestamp="1525019" timestamp2="1525019">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3282" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:55:03 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1525020" />
  <Command __id="3286" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Thu Feb 25 23:55:05 EST 2021" start_end="END" starttimestamp="1614313778745" timestamp="1526654" />
  <Command __id="3288" _type="InsertStringCommand" date="Thu Feb 25 23:55:05 EST 2021" starttimestamp="1614313778745" timestamp="1526662" timestamp2="1526662">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3289" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Thu Feb 25 23:55:05 EST 2021" start_end="START" starttimestamp="1614313778745" timestamp="1526663" />
  <DocumentChange __id="3230" _type="Replace" date="Thu Feb 25 23:54:54 EST 2021" docASTNodeCount="673" docActiveCodeLength="3909" docExpressionCount="431" docLength="4008" endLine="42" insertionLength="54" int_docASTNodeCount="659" int_docActiveCodeLength="3855" int_docExpressionCount="419" int_docLength="3954" length="2" offset="1443" startLine="42" starttimestamp="1614313778745" timestamp="1515355">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("m");
		System.out.println(mass);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3236" _type="Delete" date="Thu Feb 25 23:54:56 EST 2021" docASTNodeCount="673" docActiveCodeLength="3908" docExpressionCount="431" docLength="4007" endLine="42" length="1" offset="1465" startLine="42" starttimestamp="1614313778745" timestamp="1517333">
    <text><![CDATA[m]]></text>
  </DocumentChange>
  <DocumentChange __id="3238" _type="Insert" date="Thu Feb 25 23:54:56 EST 2021" docASTNodeCount="673" docActiveCodeLength="3909" docExpressionCount="431" docLength="4008" length="1" offset="1465" starttimestamp="1614313778745" timestamp="1517934">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <DocumentChange __id="3243" _type="Delete" date="Thu Feb 25 23:54:57 EST 2021" docASTNodeCount="672" docActiveCodeLength="3905" docExpressionCount="430" docLength="4004" endLine="43" length="4" offset="1491" repeat="4" startLine="43" starttimestamp="1614313778745" timestamp="1519111" timestamp2="1519549">
    <text><![CDATA[mass]]></text>
  </DocumentChange>
  <DocumentChange __id="3251" _type="Insert" date="Thu Feb 25 23:54:58 EST 2021" docASTNodeCount="673" docActiveCodeLength="3906" docExpressionCount="431" docLength="4005" length="1" offset="1491" starttimestamp="1614313778745" timestamp="1520164">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <DocumentChange __id="3257" _type="Insert" date="Thu Feb 25 23:54:59 EST 2021" docASTNodeCount="673" docActiveCodeLength="3909" docExpressionCount="431" docLength="4008" length="3" offset="1493" starttimestamp="1614313778745" timestamp="1521223">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3259" _type="Delete" date="Thu Feb 25 23:55:00 EST 2021" docASTNodeCount="673" docActiveCodeLength="3906" docExpressionCount="431" docLength="4005" endLine="44" length="3" offset="1493" repeat="3" startLine="43" starttimestamp="1614313778745" timestamp="1521937" timestamp2="1522350">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="3266" _type="Insert" date="Thu Feb 25 23:55:01 EST 2021" docASTNodeCount="677" docActiveCodeLength="3919" docExpressionCount="434" docLength="4018" length="13" offset="1494" repeat="11" starttimestamp="1614313778745" timestamp="1523116" timestamp2="1525891">
    <text><![CDATA[
		System.out]]></text>
  </DocumentChange>
  <DocumentChange __id="3287" _type="Replace" date="Thu Feb 25 23:55:05 EST 2021" docASTNodeCount="677" docActiveCodeLength="3920" docExpressionCount="434" docLength="4019" endLine="44" insertionLength="4" int_docASTNodeCount="675" int_docActiveCodeLength="3916" int_docExpressionCount="432" int_docLength="4015" length="3" offset="1504" startLine="44" starttimestamp="1614313778745" timestamp="1526657">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3290" _type="Insert" date="Thu Feb 25 23:55:05 EST 2021" docASTNodeCount="679" docActiveCodeLength="3929" docExpressionCount="436" docLength="4028" length="9" offset="1508" repeat="8" starttimestamp="1614313778745" timestamp="1526948" timestamp2="1528541">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <DocumentChange __id="3299" _type="Replace" date="Thu Feb 25 23:55:08 EST 2021" docASTNodeCount="679" docActiveCodeLength="3930" docExpressionCount="436" docLength="4029" endLine="44" insertionLength="10" int_docASTNodeCount="677" int_docActiveCodeLength="3920" int_docExpressionCount="434" int_docLength="4019" length="9" offset="1508" startLine="44" starttimestamp="1614313778745" timestamp="1529714">
    <deletedText><![CDATA[println()]]></deletedText>
    <insertedText><![CDATA[println();]]></insertedText>
  </DocumentChange>
  <Command __id="3323" _type="ShellCommand" date="Thu Feb 25 23:55:57 EST 2021" starttimestamp="1614313778745" timestamp="1578904" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3324" _type="RunCommand" date="Thu Feb 25 23:55:57 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1579139" type="Run" />
  <Command __id="3325" _type="RunCommand" date="Thu Feb 25 23:55:57 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1579139" type="Run" />
  <Command __id="3326" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:56:10 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5297" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1592021">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				//System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				//aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3327" _type="MoveCaretCommand" caretOffset="2135" date="Thu Feb 25 23:56:10 EST 2021" docOffset="3113" starttimestamp="1614313778745" timestamp="1592092" />
  <Command __id="3328" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:56:52 EST 2021" docASTNodeCount="679" docActiveCodeLength="3930" docExpressionCount="436" docLength="4029" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1634091">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private double h;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		System.out.println(friction);¶		angle = a * Math.PI/180;¶		"), Diff(DELETE,"h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass"), Diff(INSERT,"System.out.println("g");¶		System.out.println(gravity);¶		System.out.println("l");¶		System.out.println(length);¶		System.out.println("f");¶		System.out.println(friction);¶		System.out.println("m");¶		System.out.println(mass);¶		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶		System.out.println("h");¶		System.out.println(h);¶		System.out.println("), Diff(EQUAL,");¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package models.pendulum;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import components.listenersupport.PropertyListenerSupport;

public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {
	
	private static final int MILLISECOND_PER_SECOND = 1000;
	private static final double LENGTH_SCALE = 0.1;
	private static final int GRAM_PER_KILOGRAM = 1000;
	private static final double FRICTION_SCALE = 1; 
	
	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();
	private double length, mass, gravity, friction, angle;
	private int x, y, height, width;
	private long timer, stoptimer, timeElapsed;
	private double maxAngle;
	private double h;
	private boolean enable = false;
	
	public PendulumModel() {};

	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {
		timer = System.currentTimeMillis();
		setX(newX);
		setY(newY);
		length = l;
		mass = m;
		gravity = g;
		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;
		System.out.println(friction);
		angle = a * Math.PI/180;
		System.out.println("g");
		System.out.println(gravity);
		System.out.println("l");
		System.out.println(length);
		System.out.println("f");
		System.out.println(friction);
		System.out.println("m");
		System.out.println(mass);
		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);
		System.out.println("h");
		System.out.println(h);
		System.out.println();
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.addElement(aListener);
	}
	
	@Override
	public void nextPosition() {
		if (enable) {
			setTimeElapsed(System.currentTimeMillis() - timer);
		}
		else {
			setTimeElapsed(stoptimer - timer);
		}
		
		
		
		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;
		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));
		
		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);
		
	
		
		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));
		
		setHeight((int) Math.round(Math.cos(angleAtT) * length));
		setWidth((int) Math.round(Math.sin(angleAtT) * length));
		
		
	}
	
	@Override
	public void resetTimer() {
		timer = System.currentTimeMillis();
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public void setHeight(int h) {
		int oldHeight = height;
		height = h;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int w) {
		int oldWidth = width;
		width = w;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	

	@Override
	public void removePropertyChangeListener(PropertyChangeListener aListener) {
		aPropertyListenerSupport.removeElement(aListener);
	}

	@Override
	public void stopTimer() {
		stoptimer = System.currentTimeMillis();
		enable = false;
	}

	@Override
	public void resumeTimer() {
		timer = System.currentTimeMillis() - stoptimer + timer;
		enable = true;
	}

	@Override
	public boolean getEnable() {
		return enable;
	}
	
	@Override
	public double getLength() {
		return length;
	}

	@Override
	public double getMaxAngle() {
		return maxAngle;
	}

	@Override
	public long getTimeElapsed() {
		return timeElapsed;
	}

	@Override
	public void setTimeElapsed(long newTime) {
		long oldTimeElapsed = timeElapsed;
		timeElapsed = newTime;
		aPropertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="3329" _type="SelectTextCommand" caretOffset="881" date="Thu Feb 25 23:56:52 EST 2021" end="893" start="881" starttimestamp="1614313778745" timestamp="1634172" />
  <Command __id="3330" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:56:54 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5297" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1635866">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				//System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				//aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3331" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:56:54 EST 2021" docASTNodeCount="679" docActiveCodeLength="3930" docExpressionCount="436" docLength="4029" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1635895">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private double h;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		System.out.println(friction);¶		angle = a * Math.PI/180;¶		System.out.println("g");¶		System.out.println(gravity);¶		System.out.println("l");¶		System.out.println(length);¶		System.out.println("f");¶		System.out.println(friction);¶		System.out.println("m");¶		System.out.println(mass);¶		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶		System.out.println("h");¶		System.out.println(h);¶		System.out.println();¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3332" _type="MoveCaretCommand" caretOffset="2135" date="Thu Feb 25 23:56:54 EST 2021" docOffset="3113" starttimestamp="1614313778745" timestamp="1635965" />
  <Command __id="3333" _type="SelectTextCommand" caretOffset="881" date="Thu Feb 25 23:56:54 EST 2021" end="893" start="881" starttimestamp="1614313778745" timestamp="1635970" />
  <Command __id="3334" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:57:11 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5297" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1652736">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/pendulum/pendulum/ObserverPendulum.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.pendulum.pendulum;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.barchart.bar.BarPairInterface;¶import components.mainpanel.MainPanel;¶import components.pendulum.animator.Lock;¶import components.pendulum.animator.PendulumAnimatorCommand;¶import components.pendulum.load.Load;¶import components.pendulum.load.LoadInterface;¶import components.pendulum.string.PendulumString;¶import components.pendulum.string.PendulumStringInterface;¶import components.timer.Timer;¶import components.timer.TimerInterface;¶import models.pendulum.PendulumModel;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.EditablePropertyNames;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"string", "load", "length", "mass", "angle", "barPair", "timer"})¶@EditablePropertyNames({"string", "load", "length", "mass", "angle"})¶public class ObserverPendulum implements ObserverPendulumInterface{¶	¶	private int length = PendulumModelFactory.DEFAULT_LENGTH, ¶			mass = PendulumModelFactory.DEFAULT_MASS, ¶			angle = PendulumModelFactory.DEFAULT_ANGLE;¶	private LoadInterface load = new Load();¶	private PendulumStringInterface string;¶	private PendulumModelInterface model;¶	private PendulumAnimatorCommand animator;¶	private boolean enable;¶	private BarPairInterface barPair;¶	private Lock aLock;¶	private boolean isHeightUpdate = false, isWidthUpdate = false;¶	private int updatedWidth, updatedHeight;¶	private TimerInterface timer = new Timer();¶	¶	¶	public ObserverPendulum(PendulumModelInterface newModel, boolean isEnable, BarPairInterface newBarPair, Lock newLock) {¶		enable = isEnable;¶		model = newModel;¶		string = new PendulumString(model);¶		model.addPropertyChangeListener(this);¶		aLock = newLock;¶		animator = new PendulumAnimatorCommand(model, aLock);¶		barPair = newBarPair;¶		if (!enable) {¶			stop();¶		}¶		animator.start();¶	}¶	¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		if (evt.getSource() == model) {¶			if ("height".equals(evt.getPropertyName())) {¶				¶				updatedHeight = (int) evt.getNewValue();¶				¶				isHeightUpdate = true;¶			}¶			else if ("width".equals(evt.getPropertyName())) {¶				updatedWidth = (int) evt.getNewValue();¶				¶				isWidthUpdate = true;¶			}¶			else if ("timeElapsed".equals(evt.getPropertyName())) {¶				timer.setTime((double) (((long) evt.getNewValue()) / 1000.0));¶			}¶			¶			if (isHeightUpdate & isWidthUpdate) {¶				isHeightUpdate = false;¶				isWidthUpdate = false;¶				¶				string.setHeight(updatedHeight);¶				load.setY(string.getY() + updatedHeight - load.getHeight()/2);¶				load.setX(string.getX() + updatedWidth - load.getWidth()/2);¶				string.setWidth(updatedWidth);¶				barPair.getBars().get(0).setHeight((int) (model.getLength()) - updatedHeight);¶				barPair.getBars().get(1).setHeight((int) updatedHeight - (int) (model.getLength() * Math.cos(model.getMaxAngle())));¶				¶				¶				//System.out.println(Thread.currentThread().toString() + "tries to release the lock");¶				//aLock.releaseLock();¶			}¶			¶		}¶		¶	}¶¶	@Override¶	public PendulumStringInterface getString() {¶		return string;¶	}¶¶	@Override¶	public LoadInterface getLoad() {¶		return load;¶	}¶¶	@Override¶	public void setString(PendulumStringInterface newString) {¶		string = newString;¶	}¶¶	@Override¶	public void setLoad(LoadInterface newLoad) {¶		load = newLoad;¶	}¶	¶	@Override¶	public void setLength(int l) {¶		length = l;¶		setModel();¶	}¶¶	@Override¶	public void setMass(int m) {¶		mass = m;¶		setModel();¶	}¶	¶	@Override¶	public void setAngle(int a) {¶		angle = a;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(500)¶	@MinValue(10)¶	public int getLength() {¶		return length;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(50)¶	@MinValue(1)¶	public int getMass() {¶		return mass;¶	}¶	¶	@Override¶	public int getAngle() {¶		return angle;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		PendulumModelInterface oldModel = model;¶		model = new PendulumModel(¶				PendulumModelFactory.DEFAULT_STRING_X, ¶				PendulumModelFactory.DEFAULT_STRING_Y, ¶				length, ¶				MainPanel.gravity, ¶				mass, ¶				MainPanel.friction, ¶				angle);¶		¶		model.addPropertyChangeListener(this);¶		if (!enable) {¶			stop();¶		}¶		animator.setNewModel(model);¶		oldModel.removePropertyChangeListener(this);¶	}¶¶	@Override¶	public PendulumModelInterface getModel() {¶		return model;¶	}¶¶	@Override¶	public PendulumAnimatorCommand getAnimator() {¶		return animator;¶	}¶¶	@Override¶	public void stop() {¶		model.stopTimer();¶		enable = false;¶	}¶¶	@Override¶	public void resume() {¶		model.resumeTimer();¶		enable = true;¶	}¶¶	@Override¶	public BarPairInterface getBarPair() {¶		return barPair;¶	}¶¶	@Override¶	public void setBarPair(BarPairInterface newBarPair) {¶		barPair = newBarPair;¶	}¶¶	@Override¶	public TimerInterface getTimer() {¶		return timer;¶	}¶¶¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3335" _type="MoveCaretCommand" caretOffset="3572" date="Thu Feb 25 23:57:11 EST 2021" docOffset="4550" starttimestamp="1614313778745" timestamp="1652814" />
  <Command __id="3336" _type="SelectTextCommand" caretOffset="3566" date="Thu Feb 25 23:57:12 EST 2021" end="3572" start="3566" starttimestamp="1614313778745" timestamp="1653635" />
  <Command __id="3337" _type="SelectTextCommand" caretOffset="3566" date="Thu Feb 25 23:57:12 EST 2021" end="3572" start="3566" starttimestamp="1614313778745" timestamp="1653635" />
  <Command __id="3338" _type="CopyCommand" date="Thu Feb 25 23:57:12 EST 2021" starttimestamp="1614313778745" timestamp="1654216" />
  <DocumentChange __id="3339" _type="Delete" date="Thu Feb 25 23:57:13 EST 2021" docASTNodeCount="818" docActiveCodeLength="5183" docExpressionCount="560" docLength="5291" endLine="169" length="6" offset="4544" startLine="169" starttimestamp="1614313778745" timestamp="1654610">
    <text><![CDATA[mass, ]]></text>
  </DocumentChange>
  <Command __id="3340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:57:13 EST 2021" starttimestamp="1614313778745" timestamp="1654613" />
  <Command __id="3341" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Thu Feb 25 23:57:13 EST 2021" starttimestamp="1614313778745" timestamp="1654613" />
  <Command __id="3342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:13 EST 2021" starttimestamp="1614313778745" timestamp="1655132" />
  <Command __id="3343" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:13 EST 2021" starttimestamp="1614313778745" timestamp="1655132" />
  <Command __id="3344" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:14 EST 2021" starttimestamp="1614313778745" timestamp="1655342" />
  <Command __id="3345" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:14 EST 2021" starttimestamp="1614313778745" timestamp="1655342" />
  <Command __id="3346" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:14 EST 2021" starttimestamp="1614313778745" timestamp="1655646" />
  <Command __id="3347" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:14 EST 2021" starttimestamp="1614313778745" timestamp="1655646" />
  <DocumentChange __id="3348" _type="Insert" date="Thu Feb 25 23:57:14 EST 2021" docASTNodeCount="818" docActiveCodeLength="5188" docExpressionCount="560" docLength="5296" length="5" offset="4520" starttimestamp="1614313778745" timestamp="1656073">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <Command __id="3349" _type="InsertStringCommand" date="Thu Feb 25 23:57:14 EST 2021" starttimestamp="1614313778745" timestamp="1656075" timestamp2="1656075">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3350" _type="InsertStringCommand" date="Thu Feb 25 23:57:14 EST 2021" starttimestamp="1614313778745" timestamp="1656076" timestamp2="1656076">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3351" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:15 EST 2021" starttimestamp="1614313778745" timestamp="1656471" />
  <Command __id="3352" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:15 EST 2021" starttimestamp="1614313778745" timestamp="1656471" />
  <DocumentChange __id="3353" _type="Replace" date="Thu Feb 25 23:57:15 EST 2021" docASTNodeCount="819" docActiveCodeLength="5194" docExpressionCount="561" docLength="5302" endLine="168" insertionLength="10" int_docASTNodeCount="818" int_docActiveCodeLength="5184" int_docExpressionCount="560" int_docLength="5292" length="4" offset="4516" startLine="168" starttimestamp="1614313778745" timestamp="1656697">
    <deletedText><![CDATA[				]]></deletedText>
    <insertedText><![CDATA[				mass, ]]></insertedText>
  </DocumentChange>
  <Command __id="3354" _type="PasteCommand" date="Thu Feb 25 23:57:15 EST 2021" starttimestamp="1614313778745" timestamp="1656700" />
  <Command __id="3355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:15 EST 2021" starttimestamp="1614313778745" timestamp="1657159" />
  <Command __id="3356" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:15 EST 2021" starttimestamp="1614313778745" timestamp="1657159" />
  <Command __id="3357" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:16 EST 2021" starttimestamp="1614313778745" timestamp="1657373" />
  <Command __id="3358" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:16 EST 2021" starttimestamp="1614313778745" timestamp="1657373" />
  <Command __id="3359" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:16 EST 2021" starttimestamp="1614313778745" timestamp="1657442" />
  <Command __id="3360" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Thu Feb 25 23:57:16 EST 2021" starttimestamp="1614313778745" timestamp="1657442" />
  <Command __id="3361" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:16 EST 2021" starttimestamp="1614313778745" timestamp="1658212" />
  <Command __id="3362" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Thu Feb 25 23:57:16 EST 2021" starttimestamp="1614313778745" timestamp="1658212" />
  <Command __id="3383" _type="RunCommand" date="Thu Feb 25 23:57:20 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1662208" type="Run" />
  <Command __id="3384" _type="RunCommand" date="Thu Feb 25 23:57:20 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1662208" type="Run" />
  <Command __id="3385" _type="ConsoleOutput" date="Thu Feb 25 23:57:21 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1662434" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
1.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶"), Diff(DELETE,"28"), Diff(INSERT,"10"), Diff(EQUAL,".0¶l¶300.0¶f¶0.0¶m¶1"), Diff(DELETE,"0"), Diff(EQUAL,".0¶h¶0."), Diff(DELETE,"30550504633038933"), Diff(INSERT,"18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="3386" _type="ShellCommand" date="Thu Feb 25 23:57:21 EST 2021" starttimestamp="1614313778745" timestamp="1662828" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3387" _type="ConsoleOutput" date="Thu Feb 25 23:57:21 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1663036" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
E*** For editable property pendulum of MainPanel please define a setter with the header:
	public void setPendulum(java.util.List <parameter name>)
E*** For property gravity of MainPanel please define a getter with the header:
	public <T> getGravity()
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536¶"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶E*** For editable property pendulum of MainPanel please define a setter with the header:¶	public void setPendulum(java.util.List <parameter name>)¶E*** For property gravity of MainPanel please define a getter with the header:¶	public <T> getGravity()"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3388" _type="ConsoleOutput" date="Thu Feb 25 23:57:21 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1663242" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.ruler.Ruler.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.ruler.Ruler not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.ruler.Ruler not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.ruler.Ruler not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.ruler.Ruler not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights res"), Diff(INSERT,"W*** public void components.ruler.Ruler.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.ruler.Ruler not consid"), Diff(EQUAL,"er"), Diff(DELETE,"v"), Diff(EQUAL,"ed"), Diff(DELETE,". US Patent Appl. No.: 12/532,327¶E*** For"), Diff(INSERT," editable as it is not in editable property names list. ¶¶W*** Implicitly"), Diff(EQUAL," editable property"), Diff(DELETE," pendulum of MainPanel please define a setter with the header:¶	public void setPendulum(java.util.List <parameter name>)¶E*** For"), Diff(INSERT,": width of class class components.ruler.Ruler not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.ruler.Ruler not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable"), Diff(EQUAL," property"), Diff(DELETE," gravity of MainPanel please define a getter with the header:¶	public <T> getGravity()"), Diff(INSERT,": y of class class components.ruler.Ruler not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3389" _type="ConsoleOutput" date="Thu Feb 25 23:57:22 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1663358" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.pendulum.imageprotractor.ImageProtractor.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. 

W*** Implicit property animator of  ObserverPendulum ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: barPair of class class components.pendulum.pendulum.ObserverPendulum not considered editable as it is not in editable property names list. 

W*** Implicit property model of  ObserverPendulum ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** public void components.pendulum.string.PendulumString.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: stroke of class class components.pendulum.string.PendulumString not considered editable as it is not in editable property names list. 

W*** public void components.pendulum.load.Load.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: color of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: filled of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: height of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** public void components."), Diff(DELETE,"ruler.Rule"), Diff(INSERT,"pendulum.imageprotractor.ImageProtracto"), Diff(EQUAL,"r.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components."), Diff(DELETE,"ruler.Rule"), Diff(INSERT,"pendulum.imageprotractor.ImageProtracto"), Diff(EQUAL,"r not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components."), Diff(DELETE,"ruler.Ruler not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicit property animator of  ObserverPendulum ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"x"), Diff(INSERT,"barPair"), Diff(EQUAL," of class class components."), Diff(DELETE,"ruler.Ruler not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"pendulum.pendulum.ObserverPendulum not considered editable as it is not in editable property names list. ¶¶W*** Implicit property model of  ObserverPendulum ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** public void components.pendulum.string.PendulumString.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: stroke of class class components.pendulum.string.PendulumString not considered editable as it is not in editable property names list. ¶¶W*** public void components.pendulum.load.Load.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"y"), Diff(INSERT,"color"), Diff(EQUAL," of class class components."), Diff(DELETE,"ruler.Ruler"), Diff(INSERT,"pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: filled of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: height of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.pendulum.load.Load"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="3390" _type="ConsoleOutput" date="Thu Feb 25 23:57:22 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1663473" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicitly editable property: x of class class components.barchart.bar.BarPair not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.barchart.bar.BarPair not considered editable as it is not in editable property names list. 

W*** public void components.timer.Timer.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: time of class class components.timer.Timer not considered editable as it is not in editable property names list. 

W*** public void components.barchart.bar.Bar.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void components.pendulum.imageprotractor.ImageProtractor.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶"), Diff(EQUAL,"W*** Implicitly editable property: "), Diff(DELETE,"height"), Diff(INSERT,"x"), Diff(EQUAL," of class class components."), Diff(DELETE,"pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.pendulum.imageprotractor.ImageProtractor not considered editable as it is not in editable property names list. ¶¶W*** Implicit property animator of  ObserverPendulum ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: barPair of class class components.pendulum.pendulum.ObserverPendulum not considered editable as it is not in editable property names list. ¶¶W*** Implicit property model of  ObserverPendulum ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** public void components.pendulum.string.PendulumString"), Diff(INSERT,"barchart.bar.BarPair not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.barchart.bar.BarPair not considered editable as it is not in editable property names list. ¶¶W*** public void components.timer.Timer"), Diff(EQUAL,".addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: "), Diff(DELETE,"strok"), Diff(INSERT,"tim"), Diff(EQUAL,"e of class class components."), Diff(DELETE,"pendulum.string.PendulumString"), Diff(INSERT,"timer.Timer"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶W*** public void components."), Diff(DELETE,"pendulum.load.Load"), Diff(INSERT,"barchart.bar.Bar"), Diff(EQUAL,".addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶"), Diff(DELETE,"W*** Implicitly editable property: color of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: filled of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: height of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.pendulum.load.Load not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="3391" _type="RunCommand" date="Thu Feb 25 23:57:22 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1664102" type="Run" />
  <Command __id="3392" _type="RunCommand" date="Thu Feb 25 23:57:22 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1664102" type="Run" />
  <Command __id="3393" _type="ConsoleOutput" date="Thu Feb 25 23:57:25 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1666850" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
1.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Implicitly editable property: x of class class components.barchart.bar.BarPair not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.barchart.bar.BarPair not considered editable as it is not in editable property names list. ¶¶W*** public void components.timer.Timer.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: time of class class components.timer.Timer not considered editable as it is not in editable property names list. ¶¶W*** public void components.barchart.bar.Bar.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1.0¶h¶0.18257418583505536¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3394" _type="ConsoleOutput" date="Thu Feb 25 23:57:27 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1669007" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1"), Diff(INSERT,"0"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3395" _type="ConsoleOutput" date="Thu Feb 25 23:57:28 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1670038" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
11.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
13.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
15.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
16.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
17.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
18.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
20.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
21.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
22.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
23.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
24.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
25.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
26.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
27.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
28.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
29.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
30.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
31.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
32.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1"), Diff(DELETE,"0"), Diff(INSERT,"1.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶13.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶15.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶16.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶17.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶18.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶20.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶21.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶22.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶23.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶24.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶25.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶26.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶27.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶28.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶29.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶30.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶31.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶32"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3396" _type="ConsoleOutput" date="Thu Feb 25 23:57:28 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1670138" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
33.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
34.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶"), Diff(DELETE,"11.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶13.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶15.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶16.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶17.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶18.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶20.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶21.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶22.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶23.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶24.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶25.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶26.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶27.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶28.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶29.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶30.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶31.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶32"), Diff(INSERT,"33.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶34"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3397" _type="ConsoleOutput" date="Thu Feb 25 23:57:31 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1672762" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
34.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶33.0¶h¶0.18257418583505536¶¶"), Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶34.0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3398" _type="ConsoleOutput" date="Thu Feb 25 23:58:02 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1703259" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
34.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536¶¶"), Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶34.0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3399" _type="ConsoleOutput" date="Thu Feb 25 23:58:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1705524" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
284.0
f
0.0
m
10.0
h
0.18764665626020038

0.0
g
10.0
l
280.0
f
0.0
m
10.0
h
0.1889822365046136

0.0
g
10.0
l
277.0
f
0.0
m
10.0
h
0.1900028500641266

0.0
g
10.0
l
273.0
f
0.0
m
10.0
h
0.1913897505877382

0.0
g
10.0
l
269.0
f
0.0
m
10.0
h
0.19280747181992475

0.0
g
10.0
l
266.0
f
0.0
m
10.0
h
0.19389168358237033

0.0
g
10.0
l
262.0
f
0.0
m
10.0
h
0.19536616629114087

0.0
g
10.0
l
259.0
f
0.0
m
10.0
h
0.19649437297296482

0.0
g
10.0
l
255.0
f
0.0
m
10.0
h
0.19802950859533486

0.0
g
10.0
l
251.0
f
0.0
m
10.0
h
0.1996011960139498

0.0
g
10.0
l
248.0
f
0.0
m
10.0
h
0.2008048322256247

0.0
g
10.0
l
244.0
f
0.0
m
10.0
h
0.20244408254472898

0.0
g
10.0
l
241.0
f
0.0
m
10.0
h
0.20370021093167762

0.0
g
10.0
l
237.0
f
0.0
m
10.0
h
0.20541200750444025

0.0
g
10.0
l
233.0
f
0.0
m
10.0
h
0.20716769761626044

0.0
g
10.0
l
230.0
f
0.0
m
10.0
h
0.20851441405707477

0.0
g
10.0
l
226.0
f
0.0
m
10.0
h
0.21035158095583562

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶"), Diff(DELETE,"300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶34.0¶h¶0.18257418583505536"), Diff(INSERT,"284.0¶f¶0.0¶m¶10.0¶h¶0.18764665626020038¶¶0.0¶g¶10.0¶l¶280.0¶f¶0.0¶m¶10.0¶h¶0.1889822365046136¶¶0.0¶g¶10.0¶l¶277.0¶f¶0.0¶m¶10.0¶h¶0.1900028500641266¶¶0.0¶g¶10.0¶l¶273.0¶f¶0.0¶m¶10.0¶h¶0.1913897505877382¶¶0.0¶g¶10.0¶l¶269.0¶f¶0.0¶m¶10.0¶h¶0.19280747181992475¶¶0.0¶g¶10.0¶l¶266.0¶f¶0.0¶m¶10.0¶h¶0.19389168358237033¶¶0.0¶g¶10.0¶l¶262.0¶f¶0.0¶m¶10.0¶h¶0.19536616629114087¶¶0.0¶g¶10.0¶l¶259.0¶f¶0.0¶m¶10.0¶h¶0.19649437297296482¶¶0.0¶g¶10.0¶l¶255.0¶f¶0.0¶m¶10.0¶h¶0.19802950859533486¶¶0.0¶g¶10.0¶l¶251.0¶f¶0.0¶m¶10.0¶h¶0.1996011960139498¶¶0.0¶g¶10.0¶l¶248.0¶f¶0.0¶m¶10.0¶h¶0.2008048322256247¶¶0.0¶g¶10.0¶l¶244.0¶f¶0.0¶m¶10.0¶h¶0.20244408254472898¶¶0.0¶g¶10.0¶l¶241.0¶f¶0.0¶m¶10.0¶h¶0.20370021093167762¶¶0.0¶g¶10.0¶l¶237.0¶f¶0.0¶m¶10.0¶h¶0.20541200750444025¶¶0.0¶g¶10.0¶l¶233.0¶f¶0.0¶m¶10.0¶h¶0.20716769761626044¶¶0.0¶g¶10.0¶l¶230.0¶f¶0.0¶m¶10.0¶h¶0.20851441405707477¶¶0.0¶g¶10.0¶l¶226.0¶f¶0.0¶m¶10.0¶h¶0.21035158095583562"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="3400" _type="ConsoleOutput" date="Thu Feb 25 23:58:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1705618" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
223.0
f
0.0
m
10.0
h
0.21176177494381335

0.0
g
10.0
l
219.0
f
0.0
m
10.0
h
0.2136869215853441

0.0
g
10.0
l
215.0
f
0.0
m
10.0
h
0.21566554640687682

0.0
g
10.0
l
212.0
f
0.0
m
10.0
h
0.2171861213815347

0.0
g
10.0
l
208.0
f
0.0
m
10.0
h
0.2192645048267573

0.0
g
10.0
l
205.0
f
0.0
m
10.0
h
0.2208630521496931

0.0
g
10.0
l
201.0
f
0.0
m
10.0
h
0.22304986837273527

0.0
g
10.0
l
197.0
f
0.0
m
10.0
h
0.22530295452966645

0.0
g
10.0
l
194.0
f
0.0
m
10.0
h
0.2270383045932499

0.0
g
10.0
l
190.0
f
0.0
m
10.0
h
0.22941573387056177

0.0
g
10.0
l
187.0
f
0.0
m
10.0
h
0.23124864503144013

0.0
g
10.0
l
183.0
f
0.0
m
10.0
h
0.2337622911060922

0.0
g
10.0
l
179.0
f
0.0
m
10.0
h
0.23635972962353272

0.0
g
10.0
l
176.0
f
0.0
m
10.0
h
0.2383656473113981

0.0
g
10.0
l
172.0
f
0.0
m
10.0
h
0.24112141108520604

0.0
g
10.0
l
169.0
f
0.0
m
10.0
h
0.24325212770525995

0.0
g
10.0
l
165.0
f
0.0
m
10.0
h
0.24618298195866548

0.0
g
10.0
l
161.0
f
0.0
m
10.0
h
0.24922239313961342

0.0
g
10.0
l
158.0
f
0.0
m
10.0
h
0.2515773027133138

0.0
g
10.0
l
154.0
f
0.0
m
10.0
h
0.25482359571881275

0.0
g
10.0
l
151.0
f
0.0
m
10.0
h
0.2573425063274894

0.0
g
10.0
l
147.0
f
0.0
m
10.0
h
0.26082026547865056

0.0
g
10.0
l
143.0
f
0.0
m
10.0
h
0.26444294267397256

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶2"), Diff(DELETE,"84"), Diff(INSERT,"23"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"18764665626020038"), Diff(INSERT,"21176177494381335"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶2"), Diff(DELETE,"80"), Diff(INSERT,"19"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"1889822365046136"), Diff(INSERT,"2136869215853441"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶2"), Diff(DELETE,"77"), Diff(INSERT,"15"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"1900028500641266"), Diff(INSERT,"21566554640687682"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶2"), Diff(DELETE,"73"), Diff(INSERT,"12"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"1913897505877382"), Diff(INSERT,"2171861213815347"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶2"), Diff(DELETE,"69"), Diff(INSERT,"08"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(INSERT,"2"), Diff(EQUAL,"192"), Diff(DELETE,"80747181992475"), Diff(INSERT,"645048267573"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶2"), Diff(DELETE,"66"), Diff(INSERT,"05"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"19389168358237033"), Diff(INSERT,"2208630521496931"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶2"), Diff(DELETE,"62"), Diff(INSERT,"01"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"1953661662911408"), Diff(INSERT,"2230498683727352"), Diff(EQUAL,"7¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"259"), Diff(INSERT,"197"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"19649437297296482"), Diff(INSERT,"22530295452966645"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"255"), Diff(INSERT,"194"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"19802950859533486"), Diff(INSERT,"2270383045932499"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"251"), Diff(INSERT,"190"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0."), Diff(DELETE,"1996011960139498"), Diff(INSERT,"22941573387056177"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"248"), Diff(INSERT,"187"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"008048322256247"), Diff(INSERT,"3124864503144013"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"244"), Diff(INSERT,"183"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"0244408254472898"), Diff(INSERT,"337622911060922"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"241"), Diff(INSERT,"179"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"037002109316776"), Diff(INSERT,"363597296235327"), Diff(EQUAL,"2¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"237"), Diff(INSERT,"176"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"0541200750444025"), Diff(INSERT,"383656473113981"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"233"), Diff(INSERT,"172"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"071676976162"), Diff(INSERT,"4112141108520"), Diff(EQUAL,"604"), Diff(DELETE,"4"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"230"), Diff(INSERT,"169"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"0851441405707477"), Diff(INSERT,"4325212770525995"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"226"), Diff(INSERT,"165"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"1035158095583562"), Diff(INSERT,"4618298195866548¶¶0.0¶g¶10.0¶l¶161.0¶f¶0.0¶m¶10.0¶h¶0.24922239313961342¶¶0.0¶g¶10.0¶l¶158.0¶f¶0.0¶m¶10.0¶h¶0.2515773027133138¶¶0.0¶g¶10.0¶l¶154.0¶f¶0.0¶m¶10.0¶h¶0.25482359571881275¶¶0.0¶g¶10.0¶l¶151.0¶f¶0.0¶m¶10.0¶h¶0.2573425063274894¶¶0.0¶g¶10.0¶l¶147.0¶f¶0.0¶m¶10.0¶h¶0.26082026547865056¶¶0.0¶g¶10.0¶l¶143.0¶f¶0.0¶m¶10.0¶h¶0.26444294267397256"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="3401" _type="ConsoleOutput" date="Thu Feb 25 23:58:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1705721" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
140.0
f
0.0
m
10.0
h
0.2672612419124244

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶"), Diff(DELETE,"223.0¶f¶0.0¶m¶10.0¶h¶0.21176177494381335¶¶0.0¶g¶10.0¶l¶219.0¶f¶0.0¶m¶10.0¶h¶0.2136869215853441¶¶0.0¶g¶10.0¶l¶215.0¶f¶0.0¶m¶10.0¶h¶0.21566554640687682¶¶0.0¶g¶10.0¶l¶212.0¶f¶0.0¶m¶10.0¶h¶0.2171861213815347¶¶0.0¶g¶10.0¶l¶208.0¶f¶0.0¶m¶10.0¶h¶0.2192645048267573¶¶0.0¶g¶10.0¶l¶205.0¶f¶0.0¶m¶10.0¶h¶0.2208630521496931¶¶0.0¶g¶10.0¶l¶201.0¶f¶0.0¶m¶10.0¶h¶0.22304986837273527¶¶0.0¶g¶10.0¶l¶197.0¶f¶0.0¶m¶10.0¶h¶0.22530295452966645¶¶0.0¶g¶10.0¶l¶194.0¶f¶0.0¶m¶10.0¶h¶0.2270383045932499¶¶0.0¶g¶10.0¶l¶190.0¶f¶0.0¶m¶10.0¶h¶0.22941573387056177¶¶0.0¶g¶10.0¶l¶187.0¶f¶0.0¶m¶10.0¶h¶0.23124864503144013¶¶0.0¶g¶10.0¶l¶183.0¶f¶0.0¶m¶10.0¶h¶0.2337622911060922¶¶0.0¶g¶10.0¶l¶179.0¶f¶0.0¶m¶10.0¶h¶0.23635972962353272¶¶0.0¶g¶10.0¶l¶176.0¶f¶0.0¶m¶10.0¶h¶0.2383656473113981¶¶0.0¶g¶10.0¶l¶172.0¶f¶0.0¶m¶10.0¶h¶0.24112141108520604¶¶0.0¶g¶10.0¶l¶169.0¶f¶0.0¶m¶10.0¶h¶0.24325212770525995¶¶0.0¶g¶10.0¶l¶165.0¶f¶0.0¶m¶10.0¶h¶0.24618298195866548¶¶0.0¶g¶10.0¶l¶161.0¶f¶0.0¶m¶10.0¶h¶0.24922239313961342¶¶0.0¶g¶10.0¶l¶158.0¶f¶0.0¶m¶10.0¶h¶0.2515773027133138¶¶0.0¶g¶10.0¶l¶154.0¶f¶0.0¶m¶10.0¶h¶0.25482359571881275¶¶0.0¶g¶10.0¶l¶151.0¶f¶0.0¶m¶10.0¶h¶0.2573425063274894¶¶0.0¶g¶10.0¶l¶147.0¶f¶0.0¶m¶10.0¶h¶0.26082026547865056¶¶0.0¶g¶10.0¶l¶143.0¶f¶0.0¶m¶10.0¶h¶0.26444294267397256"), Diff(INSERT,"140.0¶f¶0.0¶m¶10.0¶h¶0.2672612419124244"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="3402" _type="ConsoleOutput" date="Thu Feb 25 23:58:04 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1706084" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
136.0
f
0.0
m
10.0
h
0.2711630722733202

0.0
g
10.0
l
133.0
f
0.0
m
10.0
h
0.27420424855354086

0.0
g
10.0
l
129.0
f
0.0
m
10.0
h
0.27842302319485224

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶1"), Diff(DELETE,"40"), Diff(INSERT,"36"), Diff(EQUAL,".0¶f¶0.0¶m¶10.0¶h¶0.2"), Diff(DELETE,"67261241912424"), Diff(INSERT,"711630722733202¶¶0.0¶g¶10.0¶l¶133.0¶f¶0.0¶m¶10.0¶h¶0.27420424855354086¶¶0.0¶g¶10.0¶l¶129.0¶f¶0.0¶m¶10.0¶h¶0.2784230231948522"), Diff(EQUAL,"4¶¶")]]]></diff>
  </Command>
  <Command __id="3403" _type="ConsoleOutput" date="Thu Feb 25 23:58:06 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1707429" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
33.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
32.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
31.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
30.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
29.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
28.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
27.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
26.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
25.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
24.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
23.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
22.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
21.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
20.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶"), Diff(DELETE,"136"), Diff(INSERT,"300"), Diff(EQUAL,".0¶f¶0.0¶m¶"), Diff(DELETE,"10"), Diff(INSERT,"33"), Diff(EQUAL,".0¶h¶0."), Diff(DELETE,"2711630722733202"), Diff(INSERT,"18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶32.0¶h¶0.18257418583505536"), Diff(EQUAL,"¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"133"), Diff(INSERT,"300"), Diff(EQUAL,".0¶f¶0.0¶m¶"), Diff(INSERT,"3"), Diff(EQUAL,"1"), Diff(DELETE,"0"), Diff(EQUAL,".0¶h¶0."), Diff(DELETE,"27420424"), Diff(INSERT,"18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶30.0¶h¶0.1825741"), Diff(EQUAL,"85"), Diff(DELETE,"5"), Diff(INSERT,"8"), Diff(EQUAL,"35"), Diff(DELETE,"408"), Diff(INSERT,"0553"), Diff(EQUAL,"6¶¶0.0¶g¶10.0¶l¶"), Diff(DELETE,"129"), Diff(INSERT,"300"), Diff(EQUAL,".0¶f¶0.0¶m¶"), Diff(DELETE,"10.0¶h¶0.27842302319485224"), Diff(INSERT,"29.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶28.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶27.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶26.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶25.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶24.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶23.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶22.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶21.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶20.0¶h¶0.18257418583505536"), Diff(EQUAL,"¶¶")]]]></diff>
  </Command>
  <Command __id="3404" _type="ConsoleOutput" date="Thu Feb 25 23:58:06 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1707589" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
19.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
18.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
17.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
16.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶"), Diff(DELETE,"33.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶32.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶31.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶30.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶29.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶28.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶27.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶26.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶25.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶24.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶23.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶22"), Diff(INSERT,"19.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶18"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶"), Diff(DELETE,"2"), Diff(EQUAL,"1"), Diff(INSERT,"7"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶"), Diff(DELETE,"20"), Diff(INSERT,"16"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3405" _type="ConsoleOutput" date="Thu Feb 25 23:58:06 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1707692" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
15.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
14.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
13.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
12.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
11.0
h
0.18257418583505536

0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1"), Diff(DELETE,"9"), Diff(INSERT,"5"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1"), Diff(DELETE,"8"), Diff(INSERT,"4"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1"), Diff(DELETE,"7"), Diff(INSERT,"3"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶1"), Diff(DELETE,"6"), Diff(INSERT,"2.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶11.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3406" _type="ConsoleOutput" date="Thu Feb 25 23:58:06 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1707766" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
9.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶"), Diff(DELETE,"15.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶14.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶13.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶12.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶11.0¶h¶0.18257418583505536¶¶0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10"), Diff(INSERT,"9"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3407" _type="ConsoleOutput" date="Thu Feb 25 23:58:07 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1708258" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶"), Diff(DELETE,"9"), Diff(INSERT,"10"), Diff(EQUAL,".0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3408" _type="ConsoleOutput" date="Thu Feb 25 23:58:45 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1746926" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
129.0
f
0.0
m
10.0
h
0.27842302319485224

0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"0.0¶g¶10.0¶l¶129.0¶f¶0.0¶m¶10.0¶h¶0.27842302319485224¶¶"), Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3409" _type="ConsoleOutput" date="Thu Feb 25 23:58:46 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1747401" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0.0¶g¶10.0¶l¶129.0¶f¶0.0¶m¶10.0¶h¶0.27842302319485224¶¶"), Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <Command __id="3410" _type="ConsoleOutput" date="Thu Feb 25 23:59:13 EST 2021" overflow="false" starttimestamp="1614313778745" timestamp="1774766" type="ConsoleOutput">
    <outputString><![CDATA[0.0
g
10.0
l
129.0
f
0.0
m
10.0
h
0.27842302319485224

0.0
g
10.0
l
300.0
f
0.0
m
10.0
h
0.18257418583505536

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"0.0¶g¶10.0¶l¶129.0¶f¶0.0¶m¶10.0¶h¶0.27842302319485224¶¶"), Diff(EQUAL,"0.0¶g¶10.0¶l¶300.0¶f¶0.0¶m¶10.0¶h¶0.18257418583505536¶¶")]]]></diff>
  </Command>
  <DocumentChange __id="3363" _type="Delete" date="Thu Feb 25 23:57:17 EST 2021" docASTNodeCount="819" docActiveCodeLength="5189" docExpressionCount="561" docLength="5297" endLine="170" length="5" offset="4550" repeat="5" startLine="169" starttimestamp="1614313778745" timestamp="1658645" timestamp2="1660092">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <Command __id="3411" _type="ShellCommand" date="Thu Feb 25 23:59:55 EST 2021" starttimestamp="1614313778745" timestamp="1816334" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3412" _type="RunCommand" date="Thu Feb 25 23:59:55 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1816591" type="Run" />
  <Command __id="3413" _type="RunCommand" date="Thu Feb 25 23:59:55 EST 2021" kind="HitBreakPoint" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1816591" type="Run" />
  <Command __id="3414" _type="DiffBasedFileOpenCommand" date="Thu Feb 25 23:59:58 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1819572">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.pendulum.animator.Lock;¶import components.pendulum.imageprotractor.ImageProtractor;¶import components.pendulum.imageprotractor.ImageProtractorInterface;¶import components.pendulum.pendulum.ObserverPendulum;¶import components.pendulum.pendulum.ObserverPendulumInterface;¶import components.ruler.Ruler;¶import components.ruler.RulerInterface;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.Column;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶public class MainPanel implements MainPanelInterface{¶	¶	public static int gravity, ¶			friction = PendulumModelFactory.DEFAULT_FRICTION;¶	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;¶	private Planet planet;¶	private int numberOfPendulum = 0;¶	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();¶	private RulerInterface ruler = new Ruler(20, 20, 675, 60);¶	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);¶	private boolean enable = false;¶	private Lock aLock = new Lock();¶	¶¶	public MainPanel() {¶		increaseNumberOfPendulum();¶		setPlanet(Planet.Earth);¶	}¶¶	@Override¶	public void setGravity(int g) {¶		gravity = g;¶		planet = Planet.Other;¶		setModel();¶	}¶¶	@Override¶	public void setFriction(int f) {¶		friction = f;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(25)¶	@MinValue(1)¶	@Row(1)¶	@Column(0)¶	public int getGravity() {¶		return gravity;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(9)¶	@MinValue(0)¶	@Row(2)¶	@Column(0)¶	public int getFriction() {¶		return friction;¶	}¶¶¶	@Override¶	@Row(2)¶	@Column(0)¶	public List<ObserverPendulumInterface> getPendulum() {¶		return pendulum;¶	}¶¶¶	@Override¶	public RulerInterface getRuler() {¶		return ruler;¶	}¶¶	@Override¶	public void setRuler(RulerInterface newRuler) {¶		ruler = newRuler;¶	}¶¶¶	@Override¶	public int getNumberOfPendulum() {¶		return numberOfPendulum;¶	}¶¶	¶	@Override¶	public ImageProtractorInterface getProtractor() {¶		return protractor;¶	}¶¶	@Override¶	public void setProtractor(ImageProtractorInterface newProtractor) {¶		protractor = newProtractor;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setModel();¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@Label("\u25B6")¶	public void pause() {¶		if (enable) {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).stop();¶			}¶			enable = false;¶		}¶		else {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).resume();¶			}¶			enable = true;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@Label("\u25A0")¶	public void reset() {¶		pause();¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setAngle(0);¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@Label("+")¶	public void increaseNumberOfPendulum() {¶		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {¶			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();¶			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, ¶					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);¶	¶			¶			pendulum.add(newPendulum);¶			numberOfPendulum ++;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@Label("-")¶	public void decreaseNumberOfPendulum() {¶		if (numberOfPendulum > 0) {¶			numberOfPendulum --;¶			pendulum.get(numberOfPendulum).getAnimator().interrupt();¶			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));¶			pendulum.remove(numberOfPendulum);¶		}¶	}¶¶	@Override¶	@Row(0)¶	@Column(0)¶	public Planet getPlanet() {¶		return planet;¶	}¶¶	@Override¶	public void setPlanet(Planet newPlanet) {¶		setGravity(newPlanet.getValue());¶		planet = newPlanet;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3415" _type="MoveCaretCommand" caretOffset="2198" date="Thu Feb 25 23:59:58 EST 2021" docOffset="3183" starttimestamp="1614313778745" timestamp="1819632" />
  <Command __id="3416" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 00:00:01 EST 2021" docASTNodeCount="679" docActiveCodeLength="3930" docExpressionCount="436" docLength="4029" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1822405">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/models/pendulum/PendulumModel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package models.pendulum;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import components.listenersupport.PropertyListenerSupport;¶¶public class PendulumModel extends PropertyListenerSupport implements PendulumModelInterface {¶	¶	private static final int MILLISECOND_PER_SECOND = 1000;¶	private static final double LENGTH_SCALE = 0.1;¶	private static final int GRAM_PER_KILOGRAM = 1000;¶	private static final double FRICTION_SCALE = 1; ¶	¶	private PropertyListenerSupport aPropertyListenerSupport = new PropertyListenerSupport();¶	private double length, mass, gravity, friction, angle;¶	private int x, y, height, width;¶	private long timer, stoptimer, timeElapsed;¶	private double maxAngle;¶	private double h;¶	private boolean enable = false;¶	¶	public PendulumModel() {};¶¶	public PendulumModel(int newX, int newY, double l, double m, double g, double f, double a) {¶		timer = System.currentTimeMillis();¶		setX(newX);¶		setY(newY);¶		length = l;¶		mass = m;¶		gravity = g;¶		friction = Math.sqrt(f / 10 * gravity / length * mass * mass * 4) ;¶		System.out.println(friction);¶		angle = a * Math.PI/180;¶		System.out.println("g");¶		System.out.println(gravity);¶		System.out.println("l");¶		System.out.println(length);¶		System.out.println("f");¶		System.out.println(friction);¶		System.out.println("m");¶		System.out.println(mass);¶		h = Math.sqrt(gravity / length - friction * friction / 4 / mass / mass);¶		System.out.println("h");¶		System.out.println(h);¶		System.out.println();¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.addElement(aListener);¶	}¶	¶	@Override¶	public void nextPosition() {¶		if (enable) {¶			setTimeElapsed(System.currentTimeMillis() - timer);¶		}¶		else {¶			setTimeElapsed(stoptimer - timer);¶		}¶		¶		¶		¶		double timeInSecond = timeElapsed/MILLISECOND_PER_SECOND;¶		// double angleAtT = angle * Math.cos((Math.sqrt(gravity/(length * LENGTH_SCALE)) * timeInSecond));¶		¶		maxAngle = angle * Math.exp(friction / 2 / mass * (-1) * timeInSecond);¶		¶	¶		¶		double angleAtT = maxAngle * (Math.cos(h * timeInSecond) + friction / 2 / mass / h * Math.sin(h * timeInSecond));¶		¶		setHeight((int) Math.round(Math.cos(angleAtT) * length));¶		setWidth((int) Math.round(Math.sin(angleAtT) * length));¶		¶		¶	}¶	¶	@Override¶	public void resetTimer() {¶		timer = System.currentTimeMillis();¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public void setHeight(int h) {¶		int oldHeight = height;¶		height = h;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int w) {¶		int oldWidth = width;¶		width = w;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶¶	@Override¶	public void removePropertyChangeListener(PropertyChangeListener aListener) {¶		aPropertyListenerSupport.removeElement(aListener);¶	}¶¶	@Override¶	public void stopTimer() {¶		stoptimer = System.currentTimeMillis();¶		enable = false;¶	}¶¶	@Override¶	public void resumeTimer() {¶		timer = System.currentTimeMillis() - stoptimer + timer;¶		enable = true;¶	}¶¶	@Override¶	public boolean getEnable() {¶		return enable;¶	}¶	¶	@Override¶	public double getLength() {¶		return length;¶	}¶¶	@Override¶	public double getMaxAngle() {¶		return maxAngle;¶	}¶¶	@Override¶	public long getTimeElapsed() {¶		return timeElapsed;¶	}¶¶	@Override¶	public void setTimeElapsed(long newTime) {¶		long oldTimeElapsed = timeElapsed;¶		timeElapsed = newTime;¶		aPropertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "timeElapsed", oldTimeElapsed, timeElapsed));¶		¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3417" _type="DiffBasedFileOpenCommand" date="Fri Feb 26 00:00:01 EST 2021" docASTNodeCount="788" docActiveCodeLength="4879" docExpressionCount="555" docLength="4879" projectName="PhysicsSimulation" starttimestamp="1614313778745" timestamp="1822426">
    <filePath><![CDATA[/home/leonard/Source/PhysicsSimulation/src/components/mainpanel/MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶import javax.swing.JSlider;¶¶import components.barchart.bar.BarPair;¶import components.pendulum.animator.Lock;¶import components.pendulum.imageprotractor.ImageProtractor;¶import components.pendulum.imageprotractor.ImageProtractorInterface;¶import components.pendulum.pendulum.ObserverPendulum;¶import components.pendulum.pendulum.ObserverPendulumInterface;¶import components.ruler.Ruler;¶import components.ruler.RulerInterface;¶import models.pendulum.PendulumModelFactory;¶import models.pendulum.PendulumModelInterface;¶import util.annotations.Column;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.MaxValue;¶import util.annotations.MinValue;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"numberOfPendulum", "gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶@EditablePropertyNames({"gravity", "friction", "pendulum", "ruler", "protractor", "gravity", "planet"})¶public class MainPanel implements MainPanelInterface{¶	¶	public static int gravity, ¶			friction = PendulumModelFactory.DEFAULT_FRICTION;¶	public static final int MARGIN_BTW_PAIR = 10, MARGIN = 5, BAR_WIDTH = 10, BARCHART_X = 1000, BARCHART_Y = 0;¶	private Planet planet;¶	private int numberOfPendulum = 0;¶	private List<ObserverPendulumInterface> pendulum = new ArrayList<ObserverPendulumInterface> ();¶	private RulerInterface ruler = new Ruler(20, 20, 675, 60);¶	private ImageProtractorInterface protractor = new ImageProtractor(350, 20, 150, 300);¶	private boolean enable = false;¶	private Lock aLock = new Lock();¶	¶¶	public MainPanel() {¶		increaseNumberOfPendulum();¶		setPlanet(Planet.Earth);¶	}¶¶	@Override¶	public void setGravity(int g) {¶		gravity = g;¶		planet = Planet.Other;¶		setModel();¶	}¶¶	@Override¶	public void setFriction(int f) {¶		friction = f;¶		setModel();¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(25)¶	@MinValue(1)¶	@Row(1)¶	@Column(0)¶	public int getGravity() {¶		return gravity;¶	}¶¶	@Override¶	@PreferredWidgetClass(JSlider.class)¶	@MaxValue(9)¶	@MinValue(0)¶	@Row(2)¶	@Column(0)¶	public int getFriction() {¶		return friction;¶	}¶¶¶	@Override¶	@Row(2)¶	@Column(0)¶	public List<ObserverPendulumInterface> getPendulum() {¶		return pendulum;¶	}¶¶¶	@Override¶	public RulerInterface getRuler() {¶		return ruler;¶	}¶¶	@Override¶	public void setRuler(RulerInterface newRuler) {¶		ruler = newRuler;¶	}¶¶¶	@Override¶	public int getNumberOfPendulum() {¶		return numberOfPendulum;¶	}¶¶	¶	@Override¶	public ImageProtractorInterface getProtractor() {¶		return protractor;¶	}¶¶	@Override¶	public void setProtractor(ImageProtractorInterface newProtractor) {¶		protractor = newProtractor;¶	}¶¶	@Override¶	@Visible(false)¶	public void setModel() {¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setModel();¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@Label("\u25B6")¶	public void pause() {¶		if (enable) {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).stop();¶			}¶			enable = false;¶		}¶		else {¶			for (int i = 0; i < numberOfPendulum; i ++) {¶				pendulum.get(i).resume();¶			}¶			enable = true;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@Label("\u25A0")¶	public void reset() {¶		pause();¶		for (int i = 0; i < numberOfPendulum; i ++) {¶			pendulum.get(i).setAngle(0);¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@Label("+")¶	public void increaseNumberOfPendulum() {¶		if (numberOfPendulum < PendulumModelFactory.MAX_CAPACITY) {¶			PendulumModelInterface newModel = PendulumModelFactory.getDefaultModel();¶			ObserverPendulumInterface newPendulum = new ObserverPendulum(newModel, enable, ¶					new BarPair(BARCHART_X + pendulum.size() * (BAR_WIDTH + MARGIN + BAR_WIDTH + MARGIN_BTW_PAIR), BARCHART_Y), aLock);¶	¶			¶			pendulum.add(newPendulum);¶			numberOfPendulum ++;¶		}¶	}¶¶	@Override¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@Label("-")¶	public void decreaseNumberOfPendulum() {¶		if (numberOfPendulum > 0) {¶			numberOfPendulum --;¶			pendulum.get(numberOfPendulum).getAnimator().interrupt();¶			pendulum.get(numberOfPendulum).getModel().removePropertyChangeListener(pendulum.get(numberOfPendulum));¶			pendulum.remove(numberOfPendulum);¶		}¶	}¶¶	@Override¶	@Row(0)¶	@Column(0)¶	public Planet getPlanet() {¶		return planet;¶	}¶¶	@Override¶	public void setPlanet(Planet newPlanet) {¶		setGravity(newPlanet.getValue());¶		planet = newPlanet;¶	}¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3418" _type="MoveCaretCommand" caretOffset="2198" date="Fri Feb 26 00:00:01 EST 2021" docOffset="3183" starttimestamp="1614313778745" timestamp="1822500" />
  <Command __id="3420" _type="MoveCaretCommand" caretOffset="0" date="Fri Feb 26 00:00:04 EST 2021" docOffset="0" starttimestamp="1614313778745" timestamp="1825581" />
  <Command __id="3421" _type="SelectTextCommand" caretOffset="1342" date="Fri Feb 26 00:00:07 EST 2021" end="1417" start="1342" starttimestamp="1614313778745" timestamp="1829015" />
  <Command __id="3423" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 00:00:08 EST 2021" starttimestamp="1614313778745" timestamp="1829590" />
  <Command __id="3425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Fri Feb 26 00:00:08 EST 2021" starttimestamp="1614313778745" timestamp="1829797" />
</Events>
